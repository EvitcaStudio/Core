[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/index.mjs",
    "content": "import { Tween } from './submodules/Tween/src/tween.mjs';\r\nimport { Resonance } from './submodules/Resonance/src/resonance.mjs';\r\nimport { Collector } from './submodules/Collector/src/collector.mjs';\r\nimport { Utils } from './submodules/Utils/src/utils.mjs';\r\nimport { StateManager, State } from './submodules/StateManager/src/state-manager.mjs';\r\nimport { Pulse } from './submodules/Pulse/src/pulse.mjs';\r\n\r\nclass CoreEngine {\r\n    /**\r\n     * Tween is a small library for creating tweening animations in JavaScript. It allows you to smoothly animate an object's properties from one value to another over a specified duration using easing functions.\r\n     * @site https://github.com/EvitcaStudio/Tween\r\n     */\r\n    Tween = Tween;\r\n    /**\r\n     * A class representing a state machine manager.\r\n     * @site https://github.com/EvitcaStudio/StateManager\r\n     */\r\n    StateManager = StateManager;\r\n    /**\r\n     * A class representing a state.\r\n     * @site https://github.com/EvitcaStudio/StateManager\r\n     */\r\n    State = State;\r\n    /**\r\n     * A plugin that will easily allow you to play sounds and control them.\r\n     * @site https://github.com/EvitcaStudio/Resonance\r\n     */\r\n    resonance = Resonance;\r\n    /**\r\n     * This plugin gives you an easy and beneficial way to reuse objects, as well as slow down the garbage collector.\r\n     * @site https://github.com/EvitcaStudio/Collector\r\n     */\r\n    collector = Collector;\r\n    /**\r\n     * A small plugin full of useful things.\r\n     * @site https://github.com/EvitcaStudio/Utils\r\n     */\r\n    utils = Utils;\r\n    /**\r\n     * A plugin that allows you to listen to events that happen on diobs. Have your code called alongside an event!\r\n     * @site https://github.com/EvitcaStudio/Pulse\r\n     */\r\n    pulse = Pulse;\r\n    /**\r\n     * The version of the module.\r\n     */\r\n    version = \"VERSION_REPLACE_ME\";\r\n}\r\n\r\nexport const Core = new CoreEngine();\r\n/**\r\n * @ignore\r\n */\r\nconst pluginName = `Core@v${Core.version}`;\r\n/**\r\n * @ignore\r\n */\r\nconst backgroundColor = '#274472'; // Dark navy blue\r\n/**\r\n * @ignore\r\n */\r\nconst color = '#fff'; // White text color\r\n/**\r\n * @ignore\r\n */\r\nconst fontFamily = 'Arial, sans-serif';\r\n/**\r\n * @ignore\r\n */\r\nconst borderLeft = '5px solid #BFD7ED';\r\n/**\r\n * @ignore\r\n */\r\nconst logStyle = `\r\n  background-color: ${backgroundColor};\r\n  color: ${color};\r\n  padding: 6px 15px;\r\n  font-family: ${fontFamily};\r\n  font-weight: bold;\r\n  font-style: italic;\r\n  border-left: ${borderLeft};\r\n  text-shadow: rgb(0, 0, 0) 2px 0px 0px, rgb(0, 0, 0) 1.75517px 0.958851px 0px, rgb(0, 0, 0) 1.0806px 1.68294px 0px, rgb(0, 0, 0) 0.141474px 1.99499px 0px, rgb(0, 0, 0) -0.832294px 1.81859px 0px, rgb(0, 0, 0) -1.60229px 1.19694px 0px, rgb(0, 0, 0) -1.97998px 0.28224px 0px, rgb(0, 0, 0) -1.87291px -0.701566px 0px, rgb(0, 0, 0) -1.30729px -1.5136px 0px, rgb(0, 0, 0) -0.421592px -1.95506px 0px, rgb(0, 0, 0) 0.567324px -1.91785px 0px, rgb(0, 0, 0) 1.41734px -1.41108px 0px, rgb(0, 0, 0) 1.92034px -0.558831px 0px;\r\n`;\r\n\r\nconsole.log(`%c${pluginName}`, logStyle, 'https://github.com/EvitcaStudio/Core');",
    "static": true,
    "longname": "C:/Users/jared/Documents/Github/Core/src/index.mjs",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "Core",
    "memberof": "src/index.mjs",
    "static": true,
    "longname": "src/index.mjs~Core",
    "access": "public",
    "export": true,
    "importPath": "core",
    "importStyle": "{Core}",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "src/index.mjs~CoreEngine"
      ]
    }
  },
  {
    "__docId__": 50,
    "kind": "variable",
    "name": "pluginName",
    "memberof": "src/index.mjs",
    "static": true,
    "longname": "src/index.mjs~pluginName",
    "access": "public",
    "export": false,
    "importPath": "core",
    "importStyle": null,
    "description": "",
    "lineNumber": 54,
    "ignore": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 51,
    "kind": "variable",
    "name": "backgroundColor",
    "memberof": "src/index.mjs",
    "static": true,
    "longname": "src/index.mjs~backgroundColor",
    "access": "public",
    "export": false,
    "importPath": "core",
    "importStyle": null,
    "description": "",
    "lineNumber": 58,
    "ignore": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "variable",
    "name": "color",
    "memberof": "src/index.mjs",
    "static": true,
    "longname": "src/index.mjs~color",
    "access": "public",
    "export": false,
    "importPath": "core",
    "importStyle": null,
    "description": "",
    "lineNumber": 62,
    "ignore": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 53,
    "kind": "variable",
    "name": "fontFamily",
    "memberof": "src/index.mjs",
    "static": true,
    "longname": "src/index.mjs~fontFamily",
    "access": "public",
    "export": false,
    "importPath": "core",
    "importStyle": null,
    "description": "",
    "lineNumber": 66,
    "ignore": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 54,
    "kind": "variable",
    "name": "borderLeft",
    "memberof": "src/index.mjs",
    "static": true,
    "longname": "src/index.mjs~borderLeft",
    "access": "public",
    "export": false,
    "importPath": "core",
    "importStyle": null,
    "description": "",
    "lineNumber": 70,
    "ignore": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "variable",
    "name": "logStyle",
    "memberof": "src/index.mjs",
    "static": true,
    "longname": "src/index.mjs~logStyle",
    "access": "public",
    "export": false,
    "importPath": "core",
    "importStyle": null,
    "description": "",
    "lineNumber": 74,
    "ignore": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 56,
    "kind": "class",
    "name": "CoreEngine",
    "memberof": "src/index.mjs",
    "static": true,
    "longname": "src/index.mjs~CoreEngine",
    "access": "public",
    "export": true,
    "importPath": "core",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "pseudoExport": true,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 57,
    "kind": "member",
    "name": "Tween",
    "memberof": "src/index.mjs~CoreEngine",
    "static": false,
    "longname": "src/index.mjs~CoreEngine#Tween",
    "access": "public",
    "description": "Tween is a small library for creating tweening animations in JavaScript. It allows you to smoothly animate an object's properties from one value to another over a specified duration using easing functions.",
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@site",
        "tagValue": "https://github.com/EvitcaStudio/Tween"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 58,
    "kind": "member",
    "name": "StateManager",
    "memberof": "src/index.mjs~CoreEngine",
    "static": false,
    "longname": "src/index.mjs~CoreEngine#StateManager",
    "access": "public",
    "description": "A class representing a state machine manager.",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@site",
        "tagValue": "https://github.com/EvitcaStudio/StateManager"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 59,
    "kind": "member",
    "name": "State",
    "memberof": "src/index.mjs~CoreEngine",
    "static": false,
    "longname": "src/index.mjs~CoreEngine#State",
    "access": "public",
    "description": "A class representing a state.",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@site",
        "tagValue": "https://github.com/EvitcaStudio/StateManager"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 60,
    "kind": "member",
    "name": "resonance",
    "memberof": "src/index.mjs~CoreEngine",
    "static": false,
    "longname": "src/index.mjs~CoreEngine#resonance",
    "access": "public",
    "description": "A plugin that will easily allow you to play sounds and control them.",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@site",
        "tagValue": "https://github.com/EvitcaStudio/Resonance"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 61,
    "kind": "member",
    "name": "collector",
    "memberof": "src/index.mjs~CoreEngine",
    "static": false,
    "longname": "src/index.mjs~CoreEngine#collector",
    "access": "public",
    "description": "This plugin gives you an easy and beneficial way to reuse objects, as well as slow down the garbage collector.",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@site",
        "tagValue": "https://github.com/EvitcaStudio/Collector"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 62,
    "kind": "member",
    "name": "utils",
    "memberof": "src/index.mjs~CoreEngine",
    "static": false,
    "longname": "src/index.mjs~CoreEngine#utils",
    "access": "public",
    "description": "A small plugin full of useful things.",
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@site",
        "tagValue": "https://github.com/EvitcaStudio/Utils"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 63,
    "kind": "member",
    "name": "pulse",
    "memberof": "src/index.mjs~CoreEngine",
    "static": false,
    "longname": "src/index.mjs~CoreEngine#pulse",
    "access": "public",
    "description": "A plugin that allows you to listen to events that happen on diobs. Have your code called alongside an event!",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@site",
        "tagValue": "https://github.com/EvitcaStudio/Pulse"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "member",
    "name": "version",
    "memberof": "src/index.mjs~CoreEngine",
    "static": false,
    "longname": "src/index.mjs~CoreEngine#version",
    "access": "public",
    "description": "The version of the module.",
    "lineNumber": 47,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 65,
    "kind": "file",
    "name": "src/submodules/Collector/src/collector.mjs",
    "content": "import { Logger } from './vendor/logger.min.mjs';\r\n\r\n/**\r\n* A recycle manager\r\n* @class CollectorSingleton\r\n* @license Collector does not have a license at this time. For licensing contact the author\r\n* @author https://github.com/doubleactii\r\n*/\r\nclass CollectorSingleton {\r\n\t/**\r\n\t * The version of the module.\r\n\t */\r\n\tversion = \"VERSION_REPLACE_ME\";\r\n\t/**\r\n\t * The constructor of the Diob class\r\n\t */\r\n\tstatic DiobConstructor = (() => {\r\n\t\tconst protoDiob = VYLO.newDiob();\r\n\t\tconst DiobConstructor = protoDiob.__proto__.constructor;\r\n\t\tVYLO.delDiob(protoDiob);\r\n\t\treturn DiobConstructor;\r\n\t})();\r\n\t/**\r\n\t * Collection limit on arrays\r\n\t * @type {number}\r\n\t */\r\n\tcollectionLimit = 20;\r\n\t/**\r\n\t * Warning limit\r\n\t * @type {number}\r\n\t */\r\n\tstatic WARNING_LIMIT = 200;\r\n\t/**\r\n\t * A default collection to use\r\n\t * @type {Array}\r\n\t */\r\n\tbasicCollection = [];\r\n\tconstructor() {\r\n        /** The logger module this module uses to log errors / logs.\r\n         * @private\r\n         * @type {Object}\r\n         */\r\n        this.logger = new Logger();\r\n        this.logger.registerType('Collector-Module', '#ff6600');\r\n\t}\r\n\t/**\r\n\t * Sets the max collection limit of this module.\r\n\t * @param {number} pLimit - The max limit of instances a collection can hold.\r\n\t */\r\n\tsetMaxLimit(pLimit) {\r\n\t\tif (typeof(pLimit) === 'number') {\r\n\t\t\tthis.collectionLimit = Math.round(pLimit);\r\n\t\t\tif (this.collectionLimit > Collector.WARNING_LIMIT) {\r\n\t\t\t\tthis.logger.prefix('Collector-Module').warn('Collector: This is a high value to use for a max limit in a collection! Only use this high of a value if you know what you are doing.')\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Collects a instance into a collection.\r\n\t * @param {Object} pCollected - The instance to collect.\r\n\t * @param {Array} pCollection - The collection array to collect the instance to.\r\n\t */\r\n\tcollect(pCollected, pCollection) {\r\n\t\tconst arrayCollected = Array.isArray(pCollected);\r\n\t\t// If there was nothing passed to be collected\r\n\t\tif (!pCollected) {\r\n\t\t\tthis.logger.prefix('Collector-Module').error('Collector: There was nothing passed for the %cpCollected', 'font-weight: bold', 'parameter. Expecting a instance or an object.');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// If you are passing a empty object it will not be collected\r\n\t\tif (typeof(pCollected) === 'object' && !arrayCollected && !Object.keys(pCollected).length) {\r\n\t\t\tthis.logger.prefix('Collector-Module').error('Collector: OOPS! %cpCollected', 'font-weight: bold', ' is an empty object and will NOT be collected.');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// If you are passing an object that is not a Diob or a Object, it will not be accepted. Vylocity types all have the type variable\r\n\t\tif (!pCollected.type && !arrayCollected) {\r\n\t\t\tthis.logger.prefix('Collector-Module').error('Collector: OOPS! %cpCollected', 'font-weight: bold', ' is not a valid object It has no type.');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (Array.isArray((pCollection))) {\r\n\t\t\tif (pCollection.includes(pCollected)) {\r\n\t\t\t\tthis.logger.prefix('Collector-Module').error('Collector: OOPS! %cpCollected', 'font-weight: bold', 'already belongs to the provided collection.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (arrayCollected) {\r\n\t\t\t\tif (!pCollected.length) {\r\n\t\t\t\t\tthis.logger.prefix('Collector-Module').error('Collector: OOPS! %cpCollected', 'font-weight: bold', 'is an array. But it contains nothing to recycle.');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (arrayCollected) {\r\n\t\t\t\t// If you try to collect a instance to be recycled and the collection you are recyling it to is full, it is deleted instead.\r\n\t\t\t\tif (pCollection.length >= this.collectionLimit) {\r\n\t\t\t\t\tfor (let i = pCollected.length - 1; i >= 0; i--) {\r\n\t\t\t\t\t\tconst instance = pCollected[i];\r\n\t\t\t\t\t\tif (instance instanceof CollectorSingleton.DiobConstructor) {\r\n\t\t\t\t\t\t\tthis.cleanInstance(instance);\r\n\t\t\t\t\t\t\tVYLO.delDiob(instance);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.cleanInstance(instance);\r\n\t\t\t\t\t\t\tVYLO.delObject(instance);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t// If this collectedArray has more instances than the collection can handle, the access is deleted\r\n\t\t\t\t} else if (pCollected.length + pCollection.length > this.collectionLimit) {\r\n\t\t\t\t\tconst remainder = pCollected.length - (this.collectionLimit - pCollection.length);\r\n\t\t\t\t\tfor (let c = remainder; c > 0; c--) {\r\n\t\t\t\t\t\tconst instance = pCollected[c];\r\n\t\t\t\t\t\tif (instance instanceof CollectorSingleton.DiobConstructor) {\r\n\t\t\t\t\t\t\tpCollected.splice(c, 1);\r\n\t\t\t\t\t\t\tthis.cleanInstance(instance);\r\n\t\t\t\t\t\t\tVYLO.delDiob(instance);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpCollected.splice(c, 1);\r\n\t\t\t\t\t\t\tthis.cleanInstance(instance);\r\n\t\t\t\t\t\t\tVYLO.delObject(instance);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// The remaining instances that are in the collectedArray is now cleaned and processed and added to the collection\r\n\t\t\t\tfor (let k = pCollected.length - 1; k >= 0; k--) {\r\n\t\t\t\t\tconst instance = pCollected[k];\r\n\t\t\t\t\tif (typeof(instance.onCollected) === 'function') instance.onCollected();\r\n\t\t\t\t\tif (!pCollection.includes(instance)) pCollection.push(instance);\r\n\t\t\t\t\tthis.cleanInstance(instance);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t} else {\r\n\t\t\t\t// If you try to collect a instance to be recycled and the collection you are recyling it to is full, it is deleted instead.\r\n\t\t\t\tif (pCollection.length >= this.collectionLimit) {\r\n\t\t\t\t\tif (pCollected instanceof CollectorSingleton.DiobConstructor) {\r\n\t\t\t\t\t\tthis.cleanInstance(pCollected);\r\n\t\t\t\t\t\tVYLO.delDiob(pCollected);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.cleanInstance(pCollected);\r\n\t\t\t\t\t\tVYLO.delObject(pCollected);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof(pCollected.onCollected) === 'function') pCollected.onCollected();\r\n\t\t\t\tif (!pCollection.includes(pCollected)) pCollection.push(pCollected);\r\n\t\t\t\tthis.cleanInstance(pCollected);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.logger.prefix('Collector-Module').error('Collector: Invalid variable type passed for the %cpCollection', 'font-weight: bold', 'parameter. Expecting an array. Collect failed.');\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Gets diob instance(s) from the named ocllection and returns them. If no instances exist in the collection, a new one is created as a last resort.\r\n\t * @param {string} pType - The diob type to find in the collection.\r\n\t * @param {number} pNum - How many of the diob instances to get from the collection.\r\n\t * @param {Array} pCollection - The collection to retrieve these instances from.\r\n\t * @param  {...any} pRest - Remaining args to be passed into the new constructor of the diob or onDumped event\r\n\t * @returns {Object} The diob instance that was \r\n\t */\r\n\tisInCollection(pType='Diob', pNum=1, pCollection=[], ...pRest) {\r\n\t\tconst reuseArray = [];\r\n\t\tlet added = 0;\r\n\t\tlet quantity = pNum;\r\n\t\t// Objects do not have a baseType variable\r\n\t\tlet isObject = !VYLO.Type.getVariable(pType, 'baseType');\r\n\t\tif (!pCollection.length) {\r\n\t\t\tfor (let i = 0; i < pNum; i++) {\r\n\t\t\t\tif (isObject) {\r\n\t\t\t\t\treuseArray.push(VYLO.newObject(pType, ...pRest));\r\n\t\t\t\t} else {\r\n\t\t\t\t\treuseArray.push(VYLO.newDiob(pType, ...pRest));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (reuseArray.length === 1) return reuseArray.pop();\r\n\t\t\treturn reuseArray;\r\n\t\t} else {\r\n\t\t\tfor (let j = pCollection.length - 1; j >= 0; j--) {\r\n\t\t\t\tif (quantity) {\r\n\t\t\t\t\tlet instanceInCollection = pCollection[j];\r\n\t\t\t\t\tif (instanceInCollection.type === pType) {\r\n\t\t\t\t\t\t// Remove it from the collection\r\n\t\t\t\t\t\tpCollection.splice(j, 1);\r\n\t\t\t\t\t\t// Add it to the array that you will be getting from this collection\r\n\t\t\t\t\t\treuseArray.push(instanceInCollection);\r\n\t\t\t\t\t\t// Label that this instance is no longer considered to be collection\r\n\t\t\t\t\t\tinstanceInCollection.collectorCollected = false;\r\n\t\t\t\t\t\t// If this instance has a `onDumped` function defined call it.\r\n\t\t\t\t\t\tif (typeof(instanceInCollection.onDumped) === 'function') instanceInCollection.onDumped(...pRest);\r\n\t\t\t\t\t\tadded++;\r\n\t\t\t\t\t\tquantity--;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// If the amount of instances we were supposed to get is greater than the instances we have gotten from the array, we need to generate more.\r\n\t\t\tif (pNum > added) {\r\n\t\t\t\tconst missingQuantity = pNum - added;\r\n\t\t\t\tfor (let x = 0; x < missingQuantity; x++) {\r\n\t\t\t\t\tif (isObject) {\r\n\t\t\t\t\t\treuseArray.push(VYLO.newObject(pType, ...pRest));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treuseArray.push(VYLO.newDiob(pType, ...pRest));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\tif (reuseArray.length === 1) return reuseArray.pop();\r\n\t\t\treturn reuseArray;\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Cleans the diob instance so it can be reused from a fresh state\r\n\t * @private\r\n\t * @param {Object} pDiob - The diob instance to clean.\r\n\t */\r\n\tcleanInstance(pDiob) {\r\n\t\tif (pDiob) {\r\n\t\t\tif (pDiob instanceof CollectorSingleton.DiobConstructor) {\r\n\t\t\t\tconst isInterface = (pDiob.baseType === 'Interface' || pDiob.type === 'Interface' || VYLO.Type.getInheritances(pDiob.type).includes('Interface'));\r\n\t\t\t\tif (pDiob.color) {\r\n\t\t\t\t\tif (typeof(pDiob.color) === 'object' && pDiob.color.constructor === Object) {\r\n\t\t\t\t\t\tpDiob.color.tint = 0xFFFFFF;\r\n\t\t\t\t\t\tpDiob.color = pDiob.color;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpDiob.color = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof(pDiob.scale) === 'object') {\r\n\t\t\t\t\tpDiob.scale.x = pDiob.scale.y = 1;\r\n\t\t\t\t\tpDiob.scale = pDiob.scale;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpDiob.scale = 1;\r\n\t\t\t\t}\r\n\t\t\t\tif (isInterface) {\r\n\t\t\t\t\tpDiob.hide();\r\n\t\t\t\t\tif (VYLO.World.getCodeType() !== 'server') {\r\n\t\t\t\t\t\tVYLO.Client.removeInterfaceElement(pDiob.getInterfaceName(), pDiob, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tpDiob.playAnimation();\r\n\t\t\t\tpDiob.setTransition();\r\n\t\t\t\tpDiob.angle = 0;\r\n\t\t\t\tpDiob.alpha = 1;\r\n\t\t\t\tpDiob.xPos = 0;\r\n\t\t\t\tpDiob.yPos = 0;\r\n\t\t\t\tif (!isInterface) {\r\n\t\t\t\t\tpDiob.mapName = null;\r\n\t\t\t\t\t// PINGABLE\r\n\t\t\t\t\tpDiob.setLoc();\r\n\t\t\t\t}\r\n\t\t\t\tpDiob.text = '';\r\n\t\t\t\tpDiob.composite = '';\r\n\t\t\t\tif (pDiob.baseType === 'Movable') pDiob.move();\r\n\t\t\t\tfor (const o of pDiob.getOverlays()) pDiob.removeOverlay(o.type);\r\n\t\t\t\tfor (const fN of pDiob.getFilters()) pDiob.removeFilter(fN);\r\n\t\t\t}\r\n\t\t\tpDiob.collectorCollected = true;\r\n\t\t\tpDiob.inTicker = null;\r\n\t\t\tif (typeof(pDiob.clean) === 'function') pDiob.clean();\r\n\t\t}\r\n\t}\r\n}\r\nexport const Collector = new CollectorSingleton();\r\n",
    "static": true,
    "longname": "C:/Users/jared/Documents/Github/Core/src/submodules/Collector/src/collector.mjs",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 66,
    "kind": "variable",
    "name": "Collector",
    "memberof": "src/submodules/Collector/src/collector.mjs",
    "static": true,
    "longname": "src/submodules/Collector/src/collector.mjs~Collector",
    "access": "public",
    "export": true,
    "importPath": "core/src/submodules/Collector/src/collector.mjs",
    "importStyle": "{Collector}",
    "description": null,
    "lineNumber": 262,
    "undocument": true,
    "type": {
      "types": [
        "src/submodules/Collector/src/collector.mjs~CollectorSingleton"
      ]
    }
  },
  {
    "__docId__": 67,
    "kind": "class",
    "name": "CollectorSingleton",
    "memberof": "src/submodules/Collector/src/collector.mjs",
    "static": true,
    "longname": "src/submodules/Collector/src/collector.mjs~CollectorSingleton",
    "access": "public",
    "export": true,
    "importPath": "core/src/submodules/Collector/src/collector.mjs",
    "importStyle": null,
    "description": "A recycle manager",
    "lineNumber": 9,
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "CollectorSingleton"
      },
      {
        "tagName": "@license",
        "tagValue": "Collector does not have a license at this time. For licensing contact the author"
      },
      {
        "tagName": "@author",
        "tagValue": "https://github.com/doubleactii"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 68,
    "kind": "member",
    "name": "version",
    "memberof": "src/submodules/Collector/src/collector.mjs~CollectorSingleton",
    "static": false,
    "longname": "src/submodules/Collector/src/collector.mjs~CollectorSingleton#version",
    "access": "public",
    "description": "The version of the module.",
    "lineNumber": 13,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 69,
    "kind": "member",
    "name": "DiobConstructor",
    "memberof": "src/submodules/Collector/src/collector.mjs~CollectorSingleton",
    "static": true,
    "longname": "src/submodules/Collector/src/collector.mjs~CollectorSingleton.DiobConstructor",
    "access": "public",
    "description": "The constructor of the Diob class",
    "lineNumber": 17,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 70,
    "kind": "member",
    "name": "collectionLimit",
    "memberof": "src/submodules/Collector/src/collector.mjs~CollectorSingleton",
    "static": false,
    "longname": "src/submodules/Collector/src/collector.mjs~CollectorSingleton#collectionLimit",
    "access": "public",
    "description": "Collection limit on arrays",
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 71,
    "kind": "member",
    "name": "WARNING_LIMIT",
    "memberof": "src/submodules/Collector/src/collector.mjs~CollectorSingleton",
    "static": true,
    "longname": "src/submodules/Collector/src/collector.mjs~CollectorSingleton.WARNING_LIMIT",
    "access": "public",
    "description": "Warning limit",
    "lineNumber": 32,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 72,
    "kind": "member",
    "name": "basicCollection",
    "memberof": "src/submodules/Collector/src/collector.mjs~CollectorSingleton",
    "static": false,
    "longname": "src/submodules/Collector/src/collector.mjs~CollectorSingleton#basicCollection",
    "access": "public",
    "description": "A default collection to use",
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 73,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/submodules/Collector/src/collector.mjs~CollectorSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Collector/src/collector.mjs~CollectorSingleton#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true
  },
  {
    "__docId__": 74,
    "kind": "member",
    "name": "logger",
    "memberof": "src/submodules/Collector/src/collector.mjs~CollectorSingleton",
    "static": false,
    "longname": "src/submodules/Collector/src/collector.mjs~CollectorSingleton#logger",
    "access": "private",
    "description": "The logger module this module uses to log errors / logs.",
    "lineNumber": 43,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "setMaxLimit",
    "memberof": "src/submodules/Collector/src/collector.mjs~CollectorSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Collector/src/collector.mjs~CollectorSingleton#setMaxLimit",
    "access": "public",
    "description": "Sets the max collection limit of this module.",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pLimit",
        "description": "The max limit of instances a collection can hold."
      }
    ],
    "return": null
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "collect",
    "memberof": "src/submodules/Collector/src/collector.mjs~CollectorSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Collector/src/collector.mjs~CollectorSingleton#collect",
    "access": "public",
    "description": "Collects a instance into a collection.",
    "lineNumber": 63,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pCollected",
        "description": "The instance to collect."
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "pCollection",
        "description": "The collection array to collect the instance to."
      }
    ],
    "return": null
  },
  {
    "__docId__": 78,
    "kind": "method",
    "name": "isInCollection",
    "memberof": "src/submodules/Collector/src/collector.mjs~CollectorSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Collector/src/collector.mjs~CollectorSingleton#isInCollection",
    "access": "public",
    "description": "Gets diob instance(s) from the named ocllection and returns them. If no instances exist in the collection, a new one is created as a last resort.",
    "lineNumber": 160,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} The diob instance that was "
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pType",
        "description": "The diob type to find in the collection."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pNum",
        "description": "How many of the diob instances to get from the collection."
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "pCollection",
        "description": "The collection to retrieve these instances from."
      },
      {
        "nullable": null,
        "types": [
          "...any"
        ],
        "spread": true,
        "optional": false,
        "name": "pRest",
        "description": "Remaining args to be passed into the new constructor of the diob or onDumped event"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The diob instance that was"
    }
  },
  {
    "__docId__": 79,
    "kind": "method",
    "name": "cleanInstance",
    "memberof": "src/submodules/Collector/src/collector.mjs~CollectorSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Collector/src/collector.mjs~CollectorSingleton#cleanInstance",
    "access": "private",
    "description": "Cleans the diob instance so it can be reused from a fresh state",
    "lineNumber": 215,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pDiob",
        "description": "The diob instance to clean."
      }
    ],
    "return": null
  },
  {
    "__docId__": 80,
    "kind": "file",
    "name": "src/submodules/Pulse/src/pulse.mjs",
    "content": "import { Logger } from './vendor/logger.min.mjs';\r\n\r\n/** \r\n * @file A plugin that allows you to add event listeners on objects. Have your code called alongside an event!\r\n * \r\n * @author https://github.com/doubleactii\r\n * @license Pulse is free software, available under the terms of a MIT style License.\r\n */\r\nclass PulseComponent {\r\n\t/**\r\n\t * Array that tracks events for instances\r\n\t * @private\r\n\t * @type {Array}\r\n\t */\r\n\tstatic tracker = { 'ids': [] };\r\n\t/**\r\n\t * Array of stored IDs so that multiple of the same ID cannot be claimed\r\n\t * @private\r\n\t * @type {Array}\r\n\t */\r\n\tstatic storedIDs = [];\r\n\t/**\r\n\t * Weakmap to track data belonging to instances used in this module.\r\n\t * @private\r\n\t * @type {WeakMap}\r\n\t */\r\n\tinstanceWeakMap = new WeakMap();\r\n\t/**\r\n\t * The version of the module.\r\n\t */\r\n\tversion = \"VERSION_REPLACE_ME\";\r\n\r\n\tconstructor() {\r\n\t\t/**\r\n\t\t * The logger module this module uses to log errors / logs\r\n\t\t * @private\r\n\t\t * @type {Object}\r\n\t\t */\r\n\t\tthis.logger = new Logger();\r\n        this.logger.registerType('PulseComponent-Module', '#ff6600');\r\n\t}\r\n\t\r\n\t/**\r\n\t * Generates a random ID based on the specified length and ensures its uniqueness\r\n\t * within the stored IDs.\r\n\t * @private\r\n\t * @param {number} [pID = 7] - The length of the generated ID.\r\n\t * @returns {string} A unique random ID.\r\n\t */\r\n\tgenerateID(pID = 7) {\r\n\t\tconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\t\tconst makeID = function() {\r\n\t\t\tlet ID = '';\r\n\t\t\tfor (let i = 0; i < pID; i++) {\r\n\t\t\t\tID += chars.charAt(Math.floor(Math.random() * chars.length));\r\n\t\t\t}\r\n\t\t\treturn ID;\r\n\t\t}\r\n\t\tlet ID = makeID();\r\n\t\twhile(PulseComponent.storedIDs.includes(ID)) {\r\n\t\t\tID = makeID();\r\n\t\t}\r\n\t\tPulseComponent.storedIDs.push(ID);\r\n\t\treturn ID;\r\n\t}\r\n\t/**\r\n\t * Adds an event listener function to pInstance to call whenever pEventName is called\r\n\t * \r\n\t * @param {Object} pInstance - The instance to add an event listener to\r\n\t * @param {string} pEventName - The name of the event to add the listener to\r\n\t * @param {Function} pFunction - The function to be called when this event is called\r\n\t */\r\n\ton(pInstance, pEventName, pFunction) {\r\n\t\tif (!pInstance) {\r\n\t\t\tthis.logger.prefix('PulseComponent-Module').error('pInstance not passed.');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!pEventName) {\r\n\t\t\tthis.logger.prefix('PulseComponent-Module').error('pEventName not passed.');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (typeof(pFunction) !== 'function') {\r\n\t\t\tthis.logger.prefix('PulseComponent-Module').error('pFunction argument is missing or it is not of the function type!');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Get the data stored for this instance\r\n\t\tlet pulseComponentListenerID = this.instanceWeakMap.get(pInstance);\r\n\t\t// If it couldn't get any data stored, we need to generate an ID and store it\r\n\t\tif (!pulseComponentListenerID) {\r\n\t\t\tconst ID = this.generateID();\r\n\t\t\tpulseComponentListenerID = ID;\r\n\t\t\tthis.instanceWeakMap.set(pInstance, pulseComponentListenerID);\r\n\t\t\tPulseComponent.tracker.ids.push(pulseComponentListenerID);\r\n\t\t\tPulseComponent.tracker[pulseComponentListenerID] = {};\r\n\t\t\tPulseComponent.tracker[pulseComponentListenerID]['listened'] = {};\r\n\t\t}\r\n\t\tif (!PulseComponent.tracker[pulseComponentListenerID][pEventName]) PulseComponent.tracker[pulseComponentListenerID][pEventName] = { 'counter': 0 };\r\n\t\tconst listenerID = ++PulseComponent.tracker[pulseComponentListenerID][pEventName].counter;\r\n\t\tif (!PulseComponent.tracker[pulseComponentListenerID]['listened'][pEventName]) this.listenForEvent(pInstance, pEventName);\r\n\t\tPulseComponent.tracker[pulseComponentListenerID][pEventName][listenerID] = pFunction;\r\n\t\t// If the event name is `onNew` then call immedietly, there is no way to capture this event\r\n\t\tif (pEventName === 'onNew') PulseComponent.tracker[pulseComponentListenerID][pEventName][listenerID].bind(pInstance)();\r\n\t};\r\n\r\n\t/**\r\n\t * Removes an event listener function from pInstance\r\n\t * \r\n\t * @param {Object} pInstance - The instance to remove the event listener from\r\n\t * @param {string} pEventName - The name of the event to remove\r\n\t * @param {Function} pFunction - The function to be removed\r\n\t */\r\n\toff(pInstance, pEventName, pFunction) {\r\n\t\tif (!pInstance) {\r\n\t\t\tthis.logger.prefix('PulseComponent-Module').error('pInstance not passed.');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!pEventName) {\r\n\t\t\tthis.logger.prefix('PulseComponent-Module').error('pEventName not passed.');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (typeof(pFunction) !== 'function') {\r\n\t\t\tthis.logger.prefix('PulseComponent-Module').error('pFunction argument is missing or it is not of the function type!');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// Get the data stored for this instance\r\n\t\tconst pulseComponentListenerID = this.instanceWeakMap.get(pInstance);\r\n\t\t// No event can be removed from this instance as its not even being tracked\r\n\t\tif (!pulseComponentListenerID) return;\r\n\r\n\t\tfor (const listenerID in PulseComponent.tracker[pulseComponentListenerID][pEventName]) {\r\n\t\t\tif (PulseComponent.tracker[pulseComponentListenerID][pEventName][listenerID] === pFunction) {\r\n\t\t\t\tdelete PulseComponent.tracker[pulseComponentListenerID][pEventName][listenerID];\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.logger.prefix('PulseComponent-Module').error('This function is not being tracked.');\r\n\t};\r\n\r\n\t/**\r\n\t * Listens for an event on an instance. Preserves any original event function code, while also allowing multiple event listeners to call on the same event.\r\n\t * @private\r\n\t * @param {Object} pInstance - The instance that has the event\r\n\t * @param {string} pEventName - The event name to listen for\r\n\t */\r\n\tlistenForEvent(pInstance, pEventName) {\r\n\t\t// If there was a valid event for this type, or there was one already defined then we need to modify it to allow listening events\r\n\t\tlet originalEvent = pInstance[pEventName];\r\n\t\t// Get the data stored for this instance\r\n\t\tconst pulseComponentListenerID = this.instanceWeakMap.get(pInstance);\r\n\t\tconst listener = function() {\r\n\t\t\tif (typeof(originalEvent) === 'function') {\r\n\t\t\t\toriginalEvent.apply(pInstance, arguments);\r\n\t\t\t}\r\n\t\t\t// Loop the event name in the tracker to see if multiple events have been registered, if so we need to call each event when this event is dispatched.\r\n\t\t\tfor (const listener in PulseComponent.tracker[pulseComponentListenerID][pEventName]) {\r\n\t\t\t\tif (typeof(PulseComponent.tracker[pulseComponentListenerID][pEventName][listener]) === 'function') {\r\n\t\t\t\t\tPulseComponent.tracker[pulseComponentListenerID][pEventName][listener].apply(pInstance, arguments);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tpInstance[pEventName] = listener;\r\n\t\tPulseComponent.tracker[pulseComponentListenerID]['listened'][pEventName] = true;\r\n\t};\r\n}\r\n\r\nexport const Pulse = new PulseComponent();\r\n",
    "static": true,
    "longname": "C:/Users/jared/Documents/Github/Core/src/submodules/Pulse/src/pulse.mjs",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 81,
    "kind": "variable",
    "name": "Pulse",
    "memberof": "src/submodules/Pulse/src/pulse.mjs",
    "static": true,
    "longname": "src/submodules/Pulse/src/pulse.mjs~Pulse",
    "access": "public",
    "export": true,
    "importPath": "core/src/submodules/Pulse/src/pulse.mjs",
    "importStyle": "{Pulse}",
    "description": null,
    "lineNumber": 167,
    "undocument": true,
    "type": {
      "types": [
        "src/submodules/Pulse/src/pulse.mjs~PulseComponent"
      ]
    }
  },
  {
    "__docId__": 82,
    "kind": "class",
    "name": "PulseComponent",
    "memberof": "src/submodules/Pulse/src/pulse.mjs",
    "static": true,
    "longname": "src/submodules/Pulse/src/pulse.mjs~PulseComponent",
    "access": "public",
    "export": true,
    "importPath": "core/src/submodules/Pulse/src/pulse.mjs",
    "importStyle": null,
    "description": "",
    "lineNumber": 9,
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "A plugin that allows you to add event listeners on objects. Have your code called alongside an event!"
      },
      {
        "tagName": "@author",
        "tagValue": "https://github.com/doubleactii"
      },
      {
        "tagName": "@license",
        "tagValue": "Pulse is free software, available under the terms of a MIT style License."
      }
    ],
    "interface": false
  },
  {
    "__docId__": 83,
    "kind": "member",
    "name": "tracker",
    "memberof": "src/submodules/Pulse/src/pulse.mjs~PulseComponent",
    "static": true,
    "longname": "src/submodules/Pulse/src/pulse.mjs~PulseComponent.tracker",
    "access": "private",
    "description": "Array that tracks events for instances",
    "lineNumber": 15,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 84,
    "kind": "member",
    "name": "storedIDs",
    "memberof": "src/submodules/Pulse/src/pulse.mjs~PulseComponent",
    "static": true,
    "longname": "src/submodules/Pulse/src/pulse.mjs~PulseComponent.storedIDs",
    "access": "private",
    "description": "Array of stored IDs so that multiple of the same ID cannot be claimed",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 85,
    "kind": "member",
    "name": "instanceWeakMap",
    "memberof": "src/submodules/Pulse/src/pulse.mjs~PulseComponent",
    "static": false,
    "longname": "src/submodules/Pulse/src/pulse.mjs~PulseComponent#instanceWeakMap",
    "access": "private",
    "description": "Weakmap to track data belonging to instances used in this module.",
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 86,
    "kind": "member",
    "name": "version",
    "memberof": "src/submodules/Pulse/src/pulse.mjs~PulseComponent",
    "static": false,
    "longname": "src/submodules/Pulse/src/pulse.mjs~PulseComponent#version",
    "access": "public",
    "description": "The version of the module.",
    "lineNumber": 31,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 87,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/submodules/Pulse/src/pulse.mjs~PulseComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Pulse/src/pulse.mjs~PulseComponent#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true
  },
  {
    "__docId__": 88,
    "kind": "member",
    "name": "logger",
    "memberof": "src/submodules/Pulse/src/pulse.mjs~PulseComponent",
    "static": false,
    "longname": "src/submodules/Pulse/src/pulse.mjs~PulseComponent#logger",
    "access": "private",
    "description": "The logger module this module uses to log errors / logs",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 89,
    "kind": "method",
    "name": "generateID",
    "memberof": "src/submodules/Pulse/src/pulse.mjs~PulseComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Pulse/src/pulse.mjs~PulseComponent#generateID",
    "access": "private",
    "description": "Generates a random ID based on the specified length and ensures its uniqueness\nwithin the stored IDs.",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} A unique random ID."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 7",
        "defaultRaw": 7,
        "name": "pID",
        "description": "The length of the generated ID."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "A unique random ID."
    }
  },
  {
    "__docId__": 90,
    "kind": "method",
    "name": "on",
    "memberof": "src/submodules/Pulse/src/pulse.mjs~PulseComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Pulse/src/pulse.mjs~PulseComponent#on",
    "access": "public",
    "description": "Adds an event listener function to pInstance to call whenever pEventName is called",
    "lineNumber": 73,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pInstance",
        "description": "The instance to add an event listener to"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pEventName",
        "description": "The name of the event to add the listener to"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "pFunction",
        "description": "The function to be called when this event is called"
      }
    ],
    "return": null
  },
  {
    "__docId__": 91,
    "kind": "method",
    "name": "off",
    "memberof": "src/submodules/Pulse/src/pulse.mjs~PulseComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Pulse/src/pulse.mjs~PulseComponent#off",
    "access": "public",
    "description": "Removes an event listener function from pInstance",
    "lineNumber": 113,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pInstance",
        "description": "The instance to remove the event listener from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pEventName",
        "description": "The name of the event to remove"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "pFunction",
        "description": "The function to be removed"
      }
    ],
    "return": null
  },
  {
    "__docId__": 92,
    "kind": "method",
    "name": "listenForEvent",
    "memberof": "src/submodules/Pulse/src/pulse.mjs~PulseComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Pulse/src/pulse.mjs~PulseComponent#listenForEvent",
    "access": "private",
    "description": "Listens for an event on an instance. Preserves any original event function code, while also allowing multiple event listeners to call on the same event.",
    "lineNumber": 146,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pInstance",
        "description": "The instance that has the event"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pEventName",
        "description": "The event name to listen for"
      }
    ],
    "return": null
  },
  {
    "__docId__": 93,
    "kind": "file",
    "name": "src/submodules/Resonance/src/resonance.mjs",
    "content": "import { Tween } from \"./vendor/tween.min.mjs\";\r\nimport { Sound } from \"./sound.mjs\";\r\nimport { Logger } from './vendor/logger.min.mjs';\r\n\r\n/**\r\n* Class for managing sounds\r\n* @class ResonanceSingleton  \r\n* @license Resonance does not have a license at this time. For licensing contact the author\r\n* @author https://github.com/doubleactii\r\n\r\nSafari does not support .ogg files, so if you are using safari, do not use .ogg files or this library will not play that sound on safari.\r\nOtherwise, you can use .ogg on any other platform. Cordova included. This supports mp3, wav, ogg, etc.\r\n*/\r\nclass ResonanceSingleton {\r\n\t/**\r\n\t * The max volume to be used\r\n\t * \r\n\t * @type {number}\r\n\t */\r\n\tstatic MAX_VOLUME = 200;\r\n\t/**\r\n\t * The min volume to be used\r\n\t * \r\n\t * @type {number}\r\n\t */\r\n\tstatic MIN_VOLUME = -200;\r\n\t/**\r\n\t * The max number of sounds that can be recycled\r\n\t * \r\n\t * @type {number}\r\n\t */\r\n\tstatic MAX_RECYCLED_SOUNDS = 500;\r\n\t/**\r\n\t * The max speed this sound can be played at\r\n\t * \r\n\t * @type {number}\r\n\t */\r\n\tstatic MAX_PLAYBACK_RATE = 10;\r\n\t/**\r\n\t * The frame rate at which to fade the sounds\r\n\t * \r\n\t * @type {number}\r\n\t */\r\n\tstatic FRAME_RATE = 60;\r\n\t/**\r\n\t * \r\n\t * @param {number} pVal - Value to clamp\r\n\t * @param {number} pMin - Minimum value\r\n\t * @param {number} pMax - Maximum value\r\n\t * @returns The clamped number\r\n\t */\r\n\tstatic clamp = (pVal, pMin, pMax) => {\r\n\t\treturn Math.max(pMin, Math.min(pVal, pMax));\r\n\t}\r\n\t/**\r\n\t * \r\n\t * @param {number} pValue - The number to normalize within a range\r\n\t * @param {number} pMin - The min number\r\n\t * @param {number} pMax - The max number\r\n\t * @param {number} pRange - The range to normalize within\r\n\t * @returns The normalized number\r\n\t */\r\n\tstatic normalize = (pValue, pMin=0, pMax=100, pRange=1) => {\r\n\t\treturn (pValue - pMin) / (pMax - pMin) * pRange;\r\n\t}\r\n\t/**\r\n\t * The version of the module.\r\n\t */\r\n\tversion = \"VERSION_REPLACE_ME\";\r\n\tconstructor() {\r\n\t\tif (!window.AudioContext && !window.webkitAudioContext) {\r\n\t\t\tthis.logger.prefix('Resonance-Module').error('Your device does not support window.AudioContext || window.webkitAudioContext. This library cannot be used');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n        /** The logger module this module uses to log errors / logs.\r\n         * @private\r\n         * @type {Object}\r\n         */\r\n        this.logger = new Logger();\r\n        this.logger.registerType('Resonance-Module', '#ff6600');\r\n\r\n\t\t// For WebKit- and Blink-based browsers\r\n\t\twindow.AudioContext = window.AudioContext || window.webkitAudioContext;\r\n\t\t// Attach events to start audio through gestures\r\n\t\twindow.addEventListener('mousedown', this.resumeAudioCtx.bind(this));\r\n\t\twindow.addEventListener('touchstart', this.resumeAudioCtx.bind(this));\r\n\t\twindow.addEventListener('load', this.resumeAudioCtx.bind(this));\r\n\t\t// When the window is unfocused, all sounds are paused\r\n\t\twindow.addEventListener('blur', () => {\r\n\t\t\tthis.focused = false;\r\n\t\t\tif (this.soundsPlaying.length) this.pauseAllSounds(true);\r\n\t\t});\r\n\t\t// When the window is focused all sounds are resumed, and queued sounds are played\r\n\t\twindow.addEventListener('focus', () => {\r\n\t\t\tthis.focused = true;\r\n\t\t\tif (this.pausedSounds.length) this.resumeAllSounds(true);\r\n\t\t\tif (this.queuedSoundsToPlay.length || this.queuedSoundsToFade.length) this.playQueuedSounds();\t\t\t\t\r\n\t\t});\r\n\t\t/**\r\n\t\t * The audio context all audio will dervie from\r\n\t\t * \r\n\t\t * @type {AudioContext}\r\n\t\t */\r\n\t\tthis.audioCtx = new AudioContext();\r\n\t\t// For older browser support that has this old API.\r\n\t\tif (!this.audioCtx.createGain && this.audioCtx.createGainNode) this.audioCtx.createGain = this.audioCtx.createGainNode;\r\n\t\t/**\r\n\t\t * Gain node\r\n\t\t * @type {GainNode}\r\n\t\t */\r\n\t\tthis.gainNode = this.audioCtx.createGain();\r\n\t\t// Assign volume to gainNode\r\n\t\tthis.gainNode.gain.value = ResonanceSingleton.normalize(ResonanceSingleton.MAX_VOLUME);\r\n\t\t// Connect gain node to speakers\r\n\t\tthis.gainNode.connect(this.audioCtx.destination);\r\n\t\t/**\r\n\t\t * Array of sounds that are currently playing\r\n\t\t * \r\n\t\t * @type {Array}\r\n\t\t */\r\n\t\tthis.soundsPlaying = [];\r\n\t\t/**\r\n\t\t * Array of sounds that are currently paused\r\n\t\t * \r\n\t\t * @type {Array}\r\n\t\t */\r\n\t\tthis.pausedSounds = [];\r\n\t\t/**\r\n\t\t * Array of sounds that can be resused\r\n\t\t * \r\n\t\t * @type {Array}\r\n\t\t */\r\n\t\tthis.recycledSounds = [];\r\n\t\t/**\r\n\t\t * Array of sounds that are queued for playing\r\n\t\t * \r\n\t\t * @type {Array}\r\n\t\t */\r\n\t\tthis.queuedSoundsToPlay = [];\r\n\t\t/**\r\n\t\t * Array of sounds that are queued for fading\r\n\t\t * \r\n\t\t * @type {Array}\r\n\t\t */\r\n\t\tthis.queuedSoundsToFade = [];\r\n\t\t/**\r\n\t\t * An object that stores the buffer data of a sound so it does not have to be loaded each time\r\n\t\t * \r\n\t\t * @type {Object}\r\n\t\t */\r\n\t\tthis.loadedBuffers = {};\r\n\t\t/**\r\n\t\t * An object that stores fade information\r\n\t\t * \r\n\t\t * @type {Object}\r\n\t\t */\r\n\t\tthis.fader = {};\r\n\t\t/**\r\n\t\t * The master volume \r\n\t\t * \r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis.volume = 100;\r\n\t\t/**\r\n\t\t * Mute status\r\n\t\t * \r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.muted = false;\r\n\t\t/**\r\n\t\t * Current state of the library\r\n\t\t * \r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tthis.state = null;\r\n\t\t/**\r\n\t\t * Whether or Resonance has the window's focus. (Sound are paused when the focus is lost, and resumed when its gained)\r\n\t\t * \r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.focused = true;\r\n\t\t/**\r\n\t\t * The checker function to resolve to true or false denoting if a sound can be played\r\n\t\t * Master control over which sounds can play\r\n\t\t * \r\n\t\t * @type {Function}\r\n\t\t */\r\n\t\tthis.abilityToPlaySound = null;\r\n\t}\r\n\t/**\r\n\t * Function to check whether this library can play a sound at a given moment.\r\n\t * \r\n\t * @returns {boolean} Whether a sound can be played or not.\r\n\t */\r\n\tcanPlaySound() {\r\n\t\tif (this.abilityToPlaySound) {\r\n\t\t\tif (!this.abilityToPlaySound()) return false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\t/**\r\n\t * API for the developer to define when a sound can and cannot be played. Any sound that tries to play while this returns false will not play\r\n\t * Enables a checker to become the master checker over whether a sound can play\r\n\t * If their defined conditions return false, then the sound cannot be played\r\n\t * \r\n\t * @param {Function} pCheckerFunction - The function that will resolve to true or false denoting if a sound can be played\r\n\t * @returns {ResonanceSingleton} This instance\r\n\t */\r\n\tenableChecker(pCheckerFunction) {\r\n\t\tif (typeof(pCheckerFunction) === 'function') {\r\n\t\t\tthis.abilityToPlaySound = pCheckerFunction;\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * Function to adjust master volume\r\n\t * \r\n\t * @param {number} pVolume - The number to change the volume to\r\n\t * @returns {ResonanceSingleton} This instance\r\n\t */\r\n\tadjustVolume(pVolume) {\r\n\t\t// Maybe show a GUI of the volume changing\r\n\t\tthis.volume = ResonanceSingleton.clamp(pVolume, ResonanceSingleton.MIN_VOLUME, ResonanceSingleton.MAX_VOLUME);\r\n\t\tif (this.gainNode) {\r\n\t\t\tthis.gainNode.gain.value = ResonanceSingleton.normalize(this.volume);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * Adds a filter to be applied to sounds.\r\n\t * @param {Sound} pSound - The sound to apply add the filter to.\r\n\t * @param {Object} pFilter - The filter to add.\r\n\t */\r\n\taddFilter(pSound, pFilter) {\r\n\t\tif (pSound instanceof Sound) {\r\n\t\t\tpSound.addFilter(pFilter);\r\n\t\t} else {\r\n\t\t\tthis.logger.prefix('Resonance-Module').error('Invalid pSound! Cannot add filter to non sound.');\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Removes a filter from being applied to sounds.\r\n\t * @param {Sound} pSound - The sound to apply remove the filter from.\r\n\t * @param {Object} pFilter - The filter to remove.\r\n\t */\r\n\tremoveFilter(pSound, pFilter) {\r\n\t\tif (pSound instanceof Sound) {\r\n\t\t\tpSound.removeFilter(pFilter);\r\n\t\t} else {\r\n\t\t\tthis.logger.prefix('Resonance-Module').error('Invalid pSound! Cannot remove filter from non sound.');\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Fades this sound to the specified volume in the specified duration via the specified ease\r\n\t * \r\n\t * @param {number} [pVolume=100] - The volume to fade to\r\n\t * @param {number} [pDuration=5000] - The duration of the fade in ms\r\n\t * @param {function} [pEase='easeOutCubic'] - Easing function\r\n\t * @param {function} pCallback - Callback to be called when the fade is over\r\n\t * @returns {ResonanceSingleton} This instance\r\n\t */\r\n\tfade(pVolume=100, pDuration=5000, pEase='easeOutCubic', pCallback) {\r\n\t\tif (isNaN(pVolume)) return;\r\n\t\tif (isNaN(pDuration)) return;\r\n\t\tif (this.state === 'fading') return;\r\n\t\tpVolume = ResonanceSingleton.clamp(pVolume, ResonanceSingleton.MIN_VOLUME, ResonanceSingleton.MAX_VOLUME);\r\n\t\tif (!Tween[pEase]) {\r\n\t\t\tthis.logger.prefix('Resonance-Module').error('Invalid pEase value. Reverted to default.');\r\n\t\t}\r\n\t\tthis.state = 'fading';\r\n\t\tthis.fader.duration = Math.max(pDuration, 0);\r\n\t\tthis.fader.currentIteration = 0;\r\n\t\tthis.fader.initialValue = this.volume;\r\n\t\tthis.fader.changeInValue = pVolume - this.fader.initialValue;\r\n\t\tthis.fader.totalIterations = this.fader.duration / (1000 / ResonanceSingleton.FRAME_RATE);\r\n\t\tthis.fader.startStamp = null;\r\n\t\tthis.fader.previousTimeStamp = null;\r\n\t\t// This is due to the fact the fader interval is still active, and incrementing the timestamp if the game is not focused\r\n\t\t// When the game is focused, we need to get the value of time that the player was away from the screen and remove it from the current timestamp.\r\n\t\t// The first index holds the alotted time, the second index is used to count the time, when the screen is focused, all the time from the second index gets dumped to the first, and it repeats if neccasary.\r\n\t\tthis.fader.durationOffScreen = [0, 0];\r\n\r\n\t\tconst self = this;\r\n\t\tconst fadeInterval = function(pTimeStamp) {\r\n\t\t\tif (!self.focused) {\r\n\t\t\t\tself.fader.raf = requestAnimationFrame(fadeInterval);\r\n\t\t\t\tself.fader.durationOffScreen[1] = pTimeStamp - self.fader.previousTimeStamp;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (self.fader.startStamp === null) self.fader.startStamp = pTimeStamp;\r\n\t\t\tself.adjustVolume(Tween[pEase](self.fader.currentIteration, self.fader.initialValue, self.fader.changeInValue, self.fader.totalIterations));\r\n\t\t\tif (self.fader.durationOffScreen[1]) {\r\n\t\t\t\tself.fader.durationOffScreen[0] += self.fader.durationOffScreen[1];\r\n\t\t\t\tself.fader.durationOffScreen[1] = 0;\r\n\t\t\t}\t\t\t\r\n\t\t\tconst elapsed = (pTimeStamp - self.fader.durationOffScreen[0]) - self.fader.startStamp;\r\n\t\t\tif (self.fader.currentIteration < self.fader.totalIterations) self.fader.currentIteration++;\r\n\t\t\tif (elapsed < self.fader.duration) {\r\n\t\t\t\tself.fader.previousTimeStamp = pTimeStamp;\r\n\t\t\t} else {\r\n\t\t\t\tcancelAnimationFrame(self.fader.raf);\r\n\t\t\t\tself.fader.duration = self.fader.currentIteration = self.fader.initialValue = self.fader.changeInValue = self.fader.totalIterations = self.fader.startStamp = self.fader.previousTimeStamp = self.fader.durationOffScreen = self.fader.raf = null;\r\n\t\t\t\tself.state = null;\r\n\t\t\t\tself.adjustVolume(pVolume);\r\n\t\t\t\tif (typeof(pCallback) === 'function') pCallback();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tself.fader.raf = requestAnimationFrame(fadeInterval);\r\n\t\t}\r\n\t\tthis.fader.raf = requestAnimationFrame(fadeInterval);\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * Master mute\r\n\t * \r\n\t * @returns {ResonanceSingleton} This instance\r\n\t */\r\n\ttoggleMute() {\r\n\t\tthis.muted = this.muted ? false : true;\r\n\t\tif (this.muted) {\r\n\t\t\tif (this.gainNode) {\r\n\t\t\t\tthis._previousGainNodeValue = this.gainNode.gain.value;\r\n\t\t\t}\r\n\t\t\tthis.gainNode.gain.value = 0;\r\n\t\t} else {\r\n\t\t\tthis.gainNode.gain.value = this._previousGainNodeValue ? this._previousGainNodeValue : 1;\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * Checks if the sound manager is currently muted\r\n\t * \r\n\t * @returns {boolean} Whether the sound manager is muted\r\n\t */\r\n\tisMuted() {\r\n\t\treturn this.muted;\r\n\t}\r\n\t/**\r\n\t * Plays a sound that is not stored. Plays the sound only. You can only kill this sound, no repeat, no changing volume, etc\r\n\t * \r\n\t * @param {string} pSoundPath - The path to the file\r\n\t * @param {number} [pVolume=100] - The volume to play the sound\r\n\t * @param {number} [pStartTime=0] - The start time of this sound (to play a clipped version)\r\n\t * @param {number} [pEndTime=duration] - The end time of this sound (to play a clipped version)\r\n\t * @param {number} [pPlaybackRate=1] - The rate at which the sound is played, Higher numbers for faster playback (MAX 10)\r\n\t * @param {Function} - A callback to call when this sound has finished playing.\r\n\t * @returns {SoundSource } The source to this emitted sound. Call source.kill() to stop this sound while its playing. This is the only API this sound has\r\n\t */\r\n\temit(pSoundPath, pVolume=100, pStartTime=0, pEndTime, pPlaybackRate=1, pCallback) {\r\n\t\tif (!this.canPlaySound()) return\r\n\t\t// a very cheap sound that can be used if certain conditions are met. \r\n\t\t// This sound cannot be referenced and cannot be stopped or configured after creation.\r\n\t\t// If the buffer is loaded, this sound is eligable to play in the background\r\n\t\t// This sound is not going to be saved, this sound is not going to be lopped,\r\n\t\t// and this sound will not use any callbacks. This sound will be very lightweight and will not exist in memory\r\n\t\tconst self = this;\r\n\t\tconst source = self.audioCtx.createBufferSource();\r\n\t\t// Create a function to kill this sound\r\n\t\tsource.kill = function() {\r\n\t\t\tif (!this.buffer) {\r\n\t\t\t\tthis.queuedToStop = true;\r\n\t\t\t} else {\r\n\t\t\t\tthis.stop();\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (typeof(pCallback) === 'function') {\r\n\t\t\tsource.addEventListener('ended', pCallback());\r\n\t\t}\r\n\t\tconst emitSound = function() {\r\n\t\t\tconst gainNode = self.audioCtx.createGain();\r\n\t\t\tgainNode.gain.value = ResonanceSingleton.normalize(ResonanceSingleton.clamp(pVolume, ResonanceSingleton.MIN_VOLUME, ResonanceSingleton.MAX_VOLUME));\r\n\t\t\tgainNode.connect(self.gainNode);\r\n\t\t\tsource.connect(gainNode);\r\n\t\t\tsource.buffer = self.loadedBuffers[pSoundPath];\r\n\t\t\tsource.playbackRate.value = pPlaybackRate;\r\n\t\t\tif (!source.start) source.start = source.noteOn;\r\n\t\t\tsource.start(0, pStartTime, (pEndTime ? pEndTime : source.buffer.duration));\t\t\r\n\t\t}\r\n\t\t// Check if the loaded buffers already contain the loaded sound data for this sound\r\n\t\tif (this.loadedBuffers[pSoundPath]) {\r\n\t\t\temitSound();\r\n\t\t// Otherwise load it\r\n\t\t} else {\r\n\t\t\tconst request = new XMLHttpRequest();\r\n\t\t\trequest.open('GET', pSoundPath);\r\n\t\t\trequest.responseType = 'arraybuffer';\r\n\t\t\trequest.onload = function() {\r\n\t\t\t\tconst audioData = request.response;\r\n\t\t\t\tconst success = (pDecodedData) => {\r\n\t\t\t\t\tself.loadedBuffers[pSoundPath] = pDecodedData;\r\n\t\t\t\t\t// if the user wants to stop the sound before it loads, don't play it\r\n\t\t\t\t\tif (source.queuedToStop) return;\r\n\t\t\t\t\temitSound();\r\n\t\t\t\t}\r\n\t\t\t\tconst error = (pError) => {\r\n\t\t\t\t\tthis.logger.prefix('Resonance-Module').error(`Error with decoding audio data \"${pSoundPath}\"`);\r\n\t\t\t\t}\r\n\t\t\t\tself.audioCtx.decodeAudioData(audioData, success, error);\r\n\t\t\t};\r\n\t\t\trequest.send();\r\n\t\t}\r\n\t\treturn source;\r\n\t}\r\n\t/**\r\n\t * \r\n\t * @param {number} pSoundPath - The path of the sound file\r\n\t * @param {number} [pVolume=100] - The volume of the sound\r\n\t * @param {number} [pStartTime=0] - The start time of this sound (to play a clipped version)\r\n\t * @param {number} [pEndTime=duration] - The end time of this sound (to play a clipped version)\r\n\t * @param {boolean} [pSave=false] - Whether to save this sound, or recycle it when it's completed\r\n\t * @param {boolean} [pPlayUnfocused=false] - If this sound is set to true then it will not be paused automatically when the game screen is not focused\r\n\t * @param {number} [pPlaybackRate=1] - The rate at which the sound is played, Higher numbers for faster playback (MAX 10)\r\n\t * @param {boolean} [pLoop=false] - Whether this sound should loop or not\r\n\t * @returns { Sound } - A sound object that has vast API on controlling it\r\n\t */\r\n\tcreateSound(pSoundPath, pVolume, pStartTime, pEndTime, pSave, pPlayUnfocused, pPlaybackRate, pLoop) {\r\n\t\t// If there is a reusable sound, use that sound rather than create a new one\r\n\t\tif (this.recycledSounds.length) {\r\n\t\t\tconst sound = this.recycledSounds.pop();\r\n\t\t\tsound.build(pSoundPath, pVolume, pStartTime, pEndTime, pSave, pPlayUnfocused, pPlaybackRate, pLoop);\r\n\t\t\treturn sound;\r\n\t\t}\r\n\t\treturn new Sound(pSoundPath, pVolume, pStartTime, pEndTime, pSave, pPlayUnfocused, pPlaybackRate, pLoop);\r\n\t}\r\n\t/**\r\n\t * This effectively stops all sounds in the game except those specified in the pException array\r\n\t * \r\n\t * @param {Array} pException - an array of sounds that should not stop\r\n\t * @returns {ResonanceSingleton} This instance\r\n\t */\r\n\tstopAllSounds(pException) {\r\n\t\tfor (let i = this.soundsPlaying.length - 1; i >= 0; i--) {\r\n\t\t\tconst sound = this.soundsPlaying[i];\r\n\t\t\t// If the sound is not set to be saved it will be killed\r\n\t\t\tif (Array.isArray(pException) && pException.includes(sound)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tsound.stop();\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * This effectively kills all sounds in the game and subjects them to be recycled \r\n\t * \r\n\t * @returns {ResonanceSingleton} This instance\r\n\t */\r\n\tkillAllSounds() {\r\n\t\t// this effectively kills all sounds in the game, and subjects them to be recycled\r\n\t\tfor (let i = this.soundsPlaying.length - 1; i >= 0; i--) {\r\n\t\t\tconst sound = this.soundsPlaying[i];\r\n\t\t\tsound.kill();\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * Pauses all sounds in the game\r\n\t * \r\n\t * @param {boolean} pFocus - If this function was called automatically by the game being unfocused\r\n\t * @returns {ResonanceSingleton} This instance\r\n\t */\r\n\tpauseAllSounds(pFocus) {\r\n\t\tfor (let i = this.soundsPlaying.length - 1; i >= 0; i--) {\r\n\t\t\tconst sound = this.soundsPlaying[i];\r\n\t\t\t// If this sound is set to playUnfocused then it will not be suspended automatically when the game screen is not focused\r\n\t\t\tif (pFocus && sound.canPlayUnfocused()) continue;\r\n\t\t\tsound.pause();\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * Resumes all sounds in games\r\n\t * \r\n\t * @param {boolean} pFocus - If this function was called automatically by the game being focused\r\n\t * @returns {ResonanceSingleton} This instance\r\n\t */\r\n\tresumeAllSounds(pFocus) {\r\n\t\tfor (let i = this.pausedSounds.length - 1; i >= 0; i--) {\r\n\t\t\tconst sound = this.pausedSounds[i];\r\n\t\t\tsound.resume();\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * @private\r\n\t * Finds all queued sounds (sounds that were played when the game was minimized or out of focus and plays them)\r\n\t */\r\n\tplayQueuedSounds() {\r\n\t\tfor (let i = this.queuedSoundsToPlay.length - 1; i >= 0; i--) {\r\n\t\t\tconst sound = this.queuedSoundsToPlay[i];\r\n\t\t\tthis.queuedSoundsToPlay.splice(i, 1);\r\n\t\t\tsound.play();\r\n\t\t}\r\n\r\n\t\tfor (let i = this.queuedSoundsToFade.length - 1; i >= 0; i--) {\r\n\t\t\tconst sound = this.queuedSoundsToFade[i];\r\n\t\t\tthis.queuedSoundsToFade.splice(i, 1);\r\n\t\t\tsound.queuedFade();\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Removes the loaded audio buffer data for this sound\r\n\t * \r\n\t * @param {string} pSoundPath - The path of the sound file\r\n\t * @returns {ResonanceSingleton} This instance\r\n\t */\r\n\tunloadSound(pSoundPath) {\r\n\t\tif (this.loadedBuffers[pSoundPath]) delete this.loadedBuffers[pSoundPath];\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * Recycles the sound for reuse later instead of deleting it. All binding info on the sound is removed\r\n\t * \r\n\t * @private\r\n\t * @param {Sound} pSound - The sound to recycle \r\n\t * @returns {ResonanceSingleton} This instance\r\n\t */\r\n\trecycleSound(pSound) {\r\n\t\tif (!(pSound instanceof Sound)) return this;\r\n\t\tpSound.kill();\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * This will start playing sounds that were initially blocked by not having a user gesture.\r\n\t * This will also restart sounds when a mobile device backs out of an app, and then rejoins the app\r\n\t * @private\r\n\t */\r\n\tresumeAudioCtx() {\r\n\t\tif (this.audioCtx.state !== 'running') {\r\n\t\t\tthis.audioCtx.resume().then(() => {\r\n\t\t\t\t// this.logger.prefix('Resonance-Module').log('Resonance: autostart attempt of audio context worked.');\r\n\t\t\t},\r\n\t\t\t() => {\r\n\t\t\t\t// this.logger.prefix('Resonance-Module').warn('Resonance: autostart attempt of audio context failed.');\r\n\t\t\t});\r\n\t\t}\r\n\t\tthis.ready = true;\r\n\t}\r\n};\r\n\r\nexport const Resonance = new ResonanceSingleton();",
    "static": true,
    "longname": "C:/Users/jared/Documents/Github/Core/src/submodules/Resonance/src/resonance.mjs",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 94,
    "kind": "variable",
    "name": "Resonance",
    "memberof": "src/submodules/Resonance/src/resonance.mjs",
    "static": true,
    "longname": "src/submodules/Resonance/src/resonance.mjs~Resonance",
    "access": "public",
    "export": true,
    "importPath": "core/src/submodules/Resonance/src/resonance.mjs",
    "importStyle": "{Resonance}",
    "description": null,
    "lineNumber": 541,
    "undocument": true,
    "type": {
      "types": [
        "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton"
      ]
    }
  },
  {
    "__docId__": 95,
    "kind": "class",
    "name": "ResonanceSingleton",
    "memberof": "src/submodules/Resonance/src/resonance.mjs",
    "static": true,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "access": "public",
    "export": true,
    "importPath": "core/src/submodules/Resonance/src/resonance.mjs",
    "importStyle": null,
    "description": "Class for managing sounds",
    "lineNumber": 14,
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "ResonanceSingleton  "
      },
      {
        "tagName": "@license",
        "tagValue": "Resonance does not have a license at this time. For licensing contact the author"
      },
      {
        "tagName": "@author",
        "tagValue": "https://github.com/doubleactii\n\nSafari does not support .ogg files, so if you are using safari, do not use .ogg files or this library will not play that sound on safari.\nOtherwise, you can use .ogg on any other platform. Cordova included. This supports mp3, wav, ogg, etc."
      }
    ],
    "interface": false
  },
  {
    "__docId__": 96,
    "kind": "member",
    "name": "MAX_VOLUME",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "static": true,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton.MAX_VOLUME",
    "access": "public",
    "description": "The max volume to be used",
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 97,
    "kind": "member",
    "name": "MIN_VOLUME",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "static": true,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton.MIN_VOLUME",
    "access": "public",
    "description": "The min volume to be used",
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 98,
    "kind": "member",
    "name": "MAX_RECYCLED_SOUNDS",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "static": true,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton.MAX_RECYCLED_SOUNDS",
    "access": "public",
    "description": "The max number of sounds that can be recycled",
    "lineNumber": 32,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 99,
    "kind": "member",
    "name": "MAX_PLAYBACK_RATE",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "static": true,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton.MAX_PLAYBACK_RATE",
    "access": "public",
    "description": "The max speed this sound can be played at",
    "lineNumber": 38,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 100,
    "kind": "member",
    "name": "FRAME_RATE",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "static": true,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton.FRAME_RATE",
    "access": "public",
    "description": "The frame rate at which to fade the sounds",
    "lineNumber": 44,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 101,
    "kind": "member",
    "name": "clamp",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "static": true,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton.clamp",
    "access": "public",
    "description": "",
    "lineNumber": 52,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "The clamped number"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pVal",
        "description": "Value to clamp"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pMin",
        "description": "Minimum value"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pMax",
        "description": "Maximum value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "The clamped number"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 102,
    "kind": "member",
    "name": "normalize",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "static": true,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton.normalize",
    "access": "public",
    "description": "",
    "lineNumber": 63,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "The normalized number"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pValue",
        "description": "The number to normalize within a range"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pMin",
        "description": "The min number"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pMax",
        "description": "The max number"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pRange",
        "description": "The range to normalize within"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "The normalized number"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 103,
    "kind": "member",
    "name": "version",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#version",
    "access": "public",
    "description": "The version of the module.",
    "lineNumber": 69,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 104,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true
  },
  {
    "__docId__": 105,
    "kind": "member",
    "name": "logger",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#logger",
    "access": "private",
    "description": "The logger module this module uses to log errors / logs.",
    "lineNumber": 80,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 106,
    "kind": "member",
    "name": "focused",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#focused",
    "access": "public",
    "description": null,
    "lineNumber": 91,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 108,
    "kind": "member",
    "name": "audioCtx",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#audioCtx",
    "access": "public",
    "description": "The audio context all audio will dervie from",
    "lineNumber": 105,
    "type": {
      "nullable": null,
      "types": [
        "AudioContext"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 109,
    "kind": "member",
    "name": "gainNode",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#gainNode",
    "access": "public",
    "description": "Gain node",
    "lineNumber": 112,
    "type": {
      "nullable": null,
      "types": [
        "GainNode"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 110,
    "kind": "member",
    "name": "soundsPlaying",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#soundsPlaying",
    "access": "public",
    "description": "Array of sounds that are currently playing",
    "lineNumber": 122,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 111,
    "kind": "member",
    "name": "pausedSounds",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#pausedSounds",
    "access": "public",
    "description": "Array of sounds that are currently paused",
    "lineNumber": 128,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 112,
    "kind": "member",
    "name": "recycledSounds",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#recycledSounds",
    "access": "public",
    "description": "Array of sounds that can be resused",
    "lineNumber": 134,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 113,
    "kind": "member",
    "name": "queuedSoundsToPlay",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#queuedSoundsToPlay",
    "access": "public",
    "description": "Array of sounds that are queued for playing",
    "lineNumber": 140,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 114,
    "kind": "member",
    "name": "queuedSoundsToFade",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#queuedSoundsToFade",
    "access": "public",
    "description": "Array of sounds that are queued for fading",
    "lineNumber": 146,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 115,
    "kind": "member",
    "name": "loadedBuffers",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#loadedBuffers",
    "access": "public",
    "description": "An object that stores the buffer data of a sound so it does not have to be loaded each time",
    "lineNumber": 152,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 116,
    "kind": "member",
    "name": "fader",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#fader",
    "access": "public",
    "description": "An object that stores fade information",
    "lineNumber": 158,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 117,
    "kind": "member",
    "name": "volume",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#volume",
    "access": "public",
    "description": "The master volume ",
    "lineNumber": 164,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 118,
    "kind": "member",
    "name": "muted",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#muted",
    "access": "public",
    "description": "Mute status",
    "lineNumber": 170,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 119,
    "kind": "member",
    "name": "state",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#state",
    "access": "public",
    "description": "Current state of the library",
    "lineNumber": 176,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 121,
    "kind": "member",
    "name": "abilityToPlaySound",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#abilityToPlaySound",
    "access": "public",
    "description": "The checker function to resolve to true or false denoting if a sound can be played\nMaster control over which sounds can play",
    "lineNumber": 189,
    "type": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 122,
    "kind": "method",
    "name": "canPlaySound",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#canPlaySound",
    "access": "public",
    "description": "Function to check whether this library can play a sound at a given moment.",
    "lineNumber": 196,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} Whether a sound can be played or not."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Whether a sound can be played or not."
    },
    "params": []
  },
  {
    "__docId__": 123,
    "kind": "method",
    "name": "enableChecker",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#enableChecker",
    "access": "public",
    "description": "API for the developer to define when a sound can and cannot be played. Any sound that tries to play while this returns false will not play\nEnables a checker to become the master checker over whether a sound can play\nIf their defined conditions return false, then the sound cannot be played",
    "lineNumber": 210,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ResonanceSingleton} This instance"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "pCheckerFunction",
        "description": "The function that will resolve to true or false denoting if a sound can be played"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ResonanceSingleton"
      ],
      "spread": false,
      "description": "This instance"
    }
  },
  {
    "__docId__": 125,
    "kind": "method",
    "name": "adjustVolume",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#adjustVolume",
    "access": "public",
    "description": "Function to adjust master volume",
    "lineNumber": 222,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ResonanceSingleton} This instance"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pVolume",
        "description": "The number to change the volume to"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ResonanceSingleton"
      ],
      "spread": false,
      "description": "This instance"
    }
  },
  {
    "__docId__": 127,
    "kind": "method",
    "name": "addFilter",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#addFilter",
    "access": "public",
    "description": "Adds a filter to be applied to sounds.",
    "lineNumber": 235,
    "params": [
      {
        "nullable": null,
        "types": [
          "Sound"
        ],
        "spread": false,
        "optional": false,
        "name": "pSound",
        "description": "The sound to apply add the filter to."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pFilter",
        "description": "The filter to add."
      }
    ],
    "return": null
  },
  {
    "__docId__": 128,
    "kind": "method",
    "name": "removeFilter",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#removeFilter",
    "access": "public",
    "description": "Removes a filter from being applied to sounds.",
    "lineNumber": 247,
    "params": [
      {
        "nullable": null,
        "types": [
          "Sound"
        ],
        "spread": false,
        "optional": false,
        "name": "pSound",
        "description": "The sound to apply remove the filter from."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pFilter",
        "description": "The filter to remove."
      }
    ],
    "return": null
  },
  {
    "__docId__": 129,
    "kind": "method",
    "name": "fade",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#fade",
    "access": "public",
    "description": "Fades this sound to the specified volume in the specified duration via the specified ease",
    "lineNumber": 263,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ResonanceSingleton} This instance"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "100",
        "defaultRaw": 100,
        "name": "pVolume",
        "description": "The volume to fade to"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "5000",
        "defaultRaw": 5000,
        "name": "pDuration",
        "description": "The duration of the fade in ms"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'easeOutCubic'",
        "defaultRaw": "'easeOutCubic'",
        "name": "pEase",
        "description": "Easing function"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "pCallback",
        "description": "Callback to be called when the fade is over"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ResonanceSingleton"
      ],
      "spread": false,
      "description": "This instance"
    }
  },
  {
    "__docId__": 131,
    "kind": "method",
    "name": "toggleMute",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#toggleMute",
    "access": "public",
    "description": "Master mute",
    "lineNumber": 319,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ResonanceSingleton} This instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ResonanceSingleton"
      ],
      "spread": false,
      "description": "This instance"
    },
    "params": []
  },
  {
    "__docId__": 133,
    "kind": "member",
    "name": "_previousGainNodeValue",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#_previousGainNodeValue",
    "access": "private",
    "description": null,
    "lineNumber": 323,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 134,
    "kind": "method",
    "name": "isMuted",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#isMuted",
    "access": "public",
    "description": "Checks if the sound manager is currently muted",
    "lineNumber": 336,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} Whether the sound manager is muted"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Whether the sound manager is muted"
    },
    "params": []
  },
  {
    "__docId__": 135,
    "kind": "method",
    "name": "emit",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#emit",
    "access": "public",
    "description": "Plays a sound that is not stored. Plays the sound only. You can only kill this sound, no repeat, no changing volume, etc",
    "lineNumber": 350,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{SoundSource } The source to this emitted sound. Call source.kill() to stop this sound while its playing. This is the only API this sound has"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pSoundPath",
        "description": "The path to the file"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "100",
        "defaultRaw": 100,
        "name": "pVolume",
        "description": "The volume to play the sound"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "pStartTime",
        "description": "The start time of this sound (to play a clipped version)"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "duration",
        "defaultRaw": "duration",
        "name": "pEndTime",
        "description": "The end time of this sound (to play a clipped version)"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1",
        "defaultRaw": 1,
        "name": "pPlaybackRate",
        "description": "The rate at which the sound is played, Higher numbers for faster playback (MAX 10)"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "-",
        "description": "A callback to call when this sound has finished playing."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SoundSource "
      ],
      "spread": false,
      "description": "The source to this emitted sound. Call source.kill() to stop this sound while its playing. This is the only API this sound has"
    }
  },
  {
    "__docId__": 136,
    "kind": "member",
    "name": "queuedToStop",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#queuedToStop",
    "access": "public",
    "description": null,
    "lineNumber": 362,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 137,
    "kind": "method",
    "name": "createSound",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#createSound",
    "access": "public",
    "description": "",
    "lineNumber": 417,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Sound } - A sound object that has vast API on controlling it"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pSoundPath",
        "description": "The path of the sound file"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "100",
        "defaultRaw": 100,
        "name": "pVolume",
        "description": "The volume of the sound"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "pStartTime",
        "description": "The start time of this sound (to play a clipped version)"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "duration",
        "defaultRaw": "duration",
        "name": "pEndTime",
        "description": "The end time of this sound (to play a clipped version)"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "pSave",
        "description": "Whether to save this sound, or recycle it when it's completed"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "pPlayUnfocused",
        "description": "If this sound is set to true then it will not be paused automatically when the game screen is not focused"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1",
        "defaultRaw": 1,
        "name": "pPlaybackRate",
        "description": "The rate at which the sound is played, Higher numbers for faster playback (MAX 10)"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "pLoop",
        "description": "Whether this sound should loop or not"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Sound "
      ],
      "spread": false,
      "description": "A sound object that has vast API on controlling it"
    }
  },
  {
    "__docId__": 138,
    "kind": "method",
    "name": "stopAllSounds",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#stopAllSounds",
    "access": "public",
    "description": "This effectively stops all sounds in the game except those specified in the pException array",
    "lineNumber": 432,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ResonanceSingleton} This instance"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "pException",
        "description": "an array of sounds that should not stop"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ResonanceSingleton"
      ],
      "spread": false,
      "description": "This instance"
    }
  },
  {
    "__docId__": 139,
    "kind": "method",
    "name": "killAllSounds",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#killAllSounds",
    "access": "public",
    "description": "This effectively kills all sounds in the game and subjects them to be recycled ",
    "lineNumber": 448,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ResonanceSingleton} This instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ResonanceSingleton"
      ],
      "spread": false,
      "description": "This instance"
    },
    "params": []
  },
  {
    "__docId__": 140,
    "kind": "method",
    "name": "pauseAllSounds",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#pauseAllSounds",
    "access": "public",
    "description": "Pauses all sounds in the game",
    "lineNumber": 462,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ResonanceSingleton} This instance"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "pFocus",
        "description": "If this function was called automatically by the game being unfocused"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ResonanceSingleton"
      ],
      "spread": false,
      "description": "This instance"
    }
  },
  {
    "__docId__": 141,
    "kind": "method",
    "name": "resumeAllSounds",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#resumeAllSounds",
    "access": "public",
    "description": "Resumes all sounds in games",
    "lineNumber": 477,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ResonanceSingleton} This instance"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "pFocus",
        "description": "If this function was called automatically by the game being focused"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ResonanceSingleton"
      ],
      "spread": false,
      "description": "This instance"
    }
  },
  {
    "__docId__": 142,
    "kind": "method",
    "name": "playQueuedSounds",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#playQueuedSounds",
    "access": "private",
    "description": "",
    "lineNumber": 488,
    "params": [],
    "return": null
  },
  {
    "__docId__": 143,
    "kind": "method",
    "name": "unloadSound",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#unloadSound",
    "access": "public",
    "description": "Removes the loaded audio buffer data for this sound",
    "lineNumber": 507,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ResonanceSingleton} This instance"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pSoundPath",
        "description": "The path of the sound file"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ResonanceSingleton"
      ],
      "spread": false,
      "description": "This instance"
    }
  },
  {
    "__docId__": 144,
    "kind": "method",
    "name": "recycleSound",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#recycleSound",
    "access": "private",
    "description": "Recycles the sound for reuse later instead of deleting it. All binding info on the sound is removed",
    "lineNumber": 518,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ResonanceSingleton} This instance"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Sound"
        ],
        "spread": false,
        "optional": false,
        "name": "pSound",
        "description": "The sound to recycle"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ResonanceSingleton"
      ],
      "spread": false,
      "description": "This instance"
    }
  },
  {
    "__docId__": 145,
    "kind": "method",
    "name": "resumeAudioCtx",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#resumeAudioCtx",
    "access": "private",
    "description": "This will start playing sounds that were initially blocked by not having a user gesture.\nThis will also restart sounds when a mobile device backs out of an app, and then rejoins the app",
    "lineNumber": 528,
    "params": [],
    "return": null
  },
  {
    "__docId__": 146,
    "kind": "member",
    "name": "ready",
    "memberof": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton",
    "static": false,
    "longname": "src/submodules/Resonance/src/resonance.mjs~ResonanceSingleton#ready",
    "access": "public",
    "description": null,
    "lineNumber": 537,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 147,
    "kind": "file",
    "name": "src/submodules/Resonance/src/sound.mjs",
    "content": "import { Resonance } from \"./resonance.mjs\";\r\n/**\r\n * A small class to represent a sound. Has useful API to handle the sound.\r\n * \r\n * @class Sound\r\n */\r\nclass Sound {\r\n    /**\r\n     * The path of the sound.\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    soundPath = null;\r\n    /**\r\n     * The start time of this sound.\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    startTime = null;\r\n    /**\r\n     * The end time of ththise sound.\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    endTime = null;\r\n    /**\r\n     * Whether to save this sound or not.\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    save = null;\r\n    /**\r\n     * The duration of this sound.\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    duration = null;\r\n    /**\r\n     * The source of this sound.\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    source = null;\r\n    /**\r\n     * The gain node of this sound.\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    gainNode = null;\r\n    /**\r\n     * Whether this sound is loaded.\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    loaded = false;\r\n    /**\r\n     * If this sound is to play after it is loaded.\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    playAfterLoad = false;\r\n    /**\r\n     * If this sound is muted.\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    muted = false;\r\n    /**\r\n     * The state of this sound.\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    state = null;\r\n    /**\r\n     * The start timestamp of this sound.\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    startedTimeStamp = null;\r\n    /**\r\n     * The timestamp of this sound when it was paused so it can be resumed at the same timestamp.\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    pausedTimeStamp = 0;\r\n    /**\r\n     * If this sound plays without window focus.\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    playUnfocused = null;\r\n    /**\r\n     * Object holding the fading information for this sound.\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    fader = {};\r\n    /**\r\n     * Events tied to this sound. start | end | pause | resume\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    events = {};\r\n    /**\r\n     * Array of filters that are currently applied on this sound.\r\n     * @private\r\n     * @type {Array}\r\n     */\r\n    _filters = [];\r\n    /**\r\n     * Whether this sound was sent a stop signal.\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    stopSignal = false;\r\n    /**\r\n     * If this sound is to loop.\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    _loop = false;\r\n    /**\r\n     * The playback rate of this sound.\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    _playbackRate = 1;\r\n    /**\r\n     * The volume of this sound.\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    _volume = 100;\r\n    /**\r\n     * Info tied to this sound.\r\n     * @private\r\n     * @property {string} soundPath - The path this sound uses for its source\r\n     * @property {number} duration - The duration of this sound\r\n     * @type {boolean}\r\n     */\r\n    _info = { 'soundPath': null, 'duration': null };\r\n    /**\r\n     * @param {number} pSoundPath - The path of the sound file\r\n     * @param {number} pVolume - The volume of the sound\r\n     * @param {number} pStartTime - The start time of this sound (to play a clipped version)\r\n     * @param {number} pEndTime - The end time of this sound (to play a clipped version)\r\n     * @param {boolean} pSave - Whether to save this sound, or recycle it when it's completed\r\n     * @param {boolean} pPlayUnfocused - If this sound is set to playUnfocused then it will not be played automatically when the game screen is not focused\r\n     * @param {number} pPlaybackRate - The rate at which the sound is played, Higher numbers for faster playback (MAX 10)\r\n     * @param {boolean} pLoop - Whether this sound should loop or not\r\n     * @returns { Sound } - A sound object that has vast API on controlling it\r\n     */\r\n    constructor(pSoundPath, pVolume, pStartTime, pEndTime, pSave, pPlayUnfocused, pPlaybackRate, pLoop) {\r\n        this.build(pSoundPath, pVolume, pStartTime, pEndTime, pSave, pPlayUnfocused, pPlaybackRate, pLoop);\r\n    }\r\n    /**\r\n     * Gets the current volume of this sound\r\n     * \r\n     * @returns {number} The current volume of this sound\r\n     */\r\n    get volume() {\r\n        return this._volume;\r\n    }\r\n    /**\r\n     * Sets the volume of this sound\r\n     * \r\n     * @param {number} pNewVolume - The volume to set\r\n     */\r\n    set volume(pNewVolume) {\r\n        this._volume = Resonance.constructor.clamp(pNewVolume, Resonance.constructor.MIN_VOLUME, Resonance.constructor.MAX_VOLUME) * Resonance.constructor.normalize(Resonance.volume);\r\n        if (this.loaded && this.gainNode) {\r\n            this.gainNode.gain.value = Resonance.constructor.normalize(this._volume);\r\n        }\r\n    }\r\n    /**\r\n     * Attaches a callback to the specified event.\r\n     * @param {Object} pEvent - The event to attach the callback to\r\n     * @param {Function} pCallback - The function to be called when the event is triggered\r\n     * @return {this} The Sound instance\r\n     */\r\n    on(pEvent, pCallback) {\r\n        if (typeof(pCallback) === \"function\") {\r\n            switch (pEvent) {\r\n                case \"start\":\r\n                case \"stop\":\r\n                case \"end\":\r\n                case \"pause\":\r\n                case \"resume\":\r\n                    this.events[pEvent] = pCallback;\r\n                    break;\r\n                default:\r\n                    Resonance.logger.prefix('Resonance-Module').error(`The event \"${pEvent}\" is not supported.`);\r\n            }\r\n        } else {\r\n            Resonance.logger.prefix('Resonance-Module').error(`The callback for event \"${pEvent}\" is not a function.`);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Toggleable mute feature for this sound. Flips between muted and unmuted\r\n     * \r\n     * @returns {this} This sound instance\r\n     */\r\n    toggleMute() {\r\n        if (!this.loaded || !this.source) return;\r\n        this.muted = this.muted ? false : true;\r\n        if (this.muted) {\r\n            if (this.gainNode) {\r\n                this.gainNode.gain.value = 0;\r\n            }\r\n        } else {\r\n            if (this.gainNode) {\r\n                this.gainNode.gain.value = Resonance.constructor.normalize(this._volume);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Get the loop status of this sound\r\n     * \r\n     * @returns {boolean} Whether this sound is set to loop or not\r\n     */\r\n    get loop() {\r\n        return this._loop;\r\n    }\r\n    /**\r\n     * Set the loop status of this sound\r\n     * \r\n     * @param {boolean} pLoopValue - The value which to set the loop status to. Truthy values resolve to true, and falsely values resovle to false\r\n     */\r\n    set loop(pLoopValue) {\r\n        this._loop = pLoopValue ? true : false;\r\n        if (this.source) this.source.loop = this._loop;\r\n    }\r\n    /**\r\n     * Toggleable loop feature for this sound. Flips between loop and unlooped\r\n     * \r\n     * @returns {this} This sound instance\r\n     */\r\n    toggleLoop() {\r\n        this._loop = this._loop ? false : true;\r\n        if (this.source) this.source.loop = this._loop;\r\n        return this;\r\n    }\r\n    /**\r\n     * Get the playback status of this sound\r\n     * \r\n     * @returns {number} The playback rate of this sound\r\n     */\r\n    get playbackRate() {\r\n        return this._playbackRate;\r\n    }\r\n    /**\r\n     * Set the playback status of this sound\r\n     * \r\n     * @param {number} pNewPlaybackRate - The value which to set the playback status to. Clamped to 10\r\n     */\t\r\n    set playbackRate(pNewPlaybackRate) {\r\n        this._playbackRate = Resonance.constructor.clamp(pNewPlaybackRate, 1, Resonance.constructor.MAX_PLAYBACK_RATE);\r\n        if (this.source) this.source.playbackRate.value = this._playbackRate;\r\n    }\r\n    /**\r\n     * Set the info of this sound\r\n     * The new value is not used, as this is a \"read-only\" variable. So any attempts to set it will not work\r\n     * \r\n     * @param {Object} pNewInfo - The new value\r\n     */\t\r\n    set info(pNewInfo) {\r\n        // makes this variable read only basically\r\n        this._info = this._info;\r\n    }\r\n    /**\r\n     * Get the info object of this sound\r\n     * \r\n     * @returns {Objecct} The info object of this sound\r\n     */\r\n    get info() {\r\n        if (this.loaded) {\r\n            if (this.source) {\r\n                this._info.duration = this.duration;\r\n            }\r\n            this._info.soundPath = this.soundPath;\r\n        } else {\r\n            this._info.soundPath = this.soundPath;\r\n        }\r\n        return { ...this._info };\r\n    }\r\n    /**\r\n     * \r\n     * @param {number} pSoundPath - The path of the sound file\r\n     * @param {number} pVolume - The volume of the sound\r\n     * @param {number} pStartTime - The start time of this sound (to play a clipped version)\r\n     * @param {number} pEndTime - The end time of this sound (to play a clipped version)\r\n     * @param {boolean} pSave - Whether to save this sound, or recycle it when it's completed\r\n     * @param {boolean} pPlayUnfocused - If this sound is set to true then it will not be paused automatically when the game screen is not focused\r\n     * @param {number} pPlaybackRate - The rate at which the sound is played, Higher numbers for faster playback (MAX 10)\r\n     * @param {boolean} pLoop - Whether this sound should loop or not\r\n     * @returns { Sound } - A sound object that has vast API on controlling it\r\n     */\r\n    build(pSoundPath, pVolume=100, pStartTime=0, pEndTime=0, pSave=false, pPlayUnfocused=false, pPlaybackRate=1, pLoop=false) {\r\n        this.soundPath = pSoundPath;\r\n        this.startTime = Math.max(pStartTime, 0);\r\n        this.endTime = Math.max(pEndTime, 0);\r\n        this.save = pLoop ? true : pSave;\r\n        this._playbackRate = Resonance.constructor.clamp(pPlaybackRate, 1, Resonance.constructor.MAX_PLAYBACK_RATE);\r\n        this.playUnfocused = pPlayUnfocused ? true : false;\r\n        this.state = null;\r\n        this._loop = pLoop ? true : false;\r\n        this._volume = Resonance.constructor.clamp(pVolume, Resonance.constructor.MIN_VOLUME, Resonance.constructor.MAX_VOLUME) * Resonance.constructor.normalize(Resonance.volume);\r\n        // If this sound will use a buffer that is already stored, do not load it, there is no need, when going to play\r\n        // this sound, it will just use the buffer data of the previous sound that had it.\r\n        if (!Resonance.loadedBuffers[this.soundPath]) {\r\n            this.load();\r\n        } else {\r\n            this.loaded = true;\r\n        }\r\n    }\r\n    /**\r\n     * Loads this sound and stores its data so future sounds can use the same buffer\r\n     * @private\r\n     */\r\n    load() {\r\n        const request = new XMLHttpRequest();\r\n        const self = this;\r\n        request.open('GET', self.soundPath);\r\n        request.responseType = 'arraybuffer';\r\n        request.onload = function() {\r\n            const audioData = request.response;\r\n            const success = (pDecodedData) => {\r\n                self.loaded = true;\r\n                Resonance.loadedBuffers[self.soundPath] = pDecodedData;\r\n                // The developer attempted to play the sound while it was still loading,\r\n                // This has been set so that the sound will play once it's finished loading now\r\n                if (self.playAfterLoad) {\r\n                    // A signal to stop this sound was sent, but the sound wasn't loaded to play at that time, don't allow a sound that is signaled to stop to play\r\n                    if (self.stopSignal) {\r\n                        self.stopSignal = false;\r\n                        return;\r\n                    } else {\r\n                        self.play();\r\n                    }\r\n                }\r\n            }\r\n            const error = (pError) => {\r\n                self.loaded = false;\r\n                Resonance.logger.prefix('Resonance-Module').error(`Error with decoding audio data \"${self.soundPath}\" This sound has been killed.`);\r\n                self.kill();\r\n            }\r\n            Resonance.audioCtx.decodeAudioData(audioData, success, error);\r\n        };\r\n        request.send();\r\n    }\r\n    /**\r\n     * Pauses this sound\r\n     * \r\n     * @returns {this} This sound instance\r\n     */\r\n    pause() {\r\n        if (!this.loaded) return;\r\n        this.stop('suspended');\r\n        this.state = 'suspended';\r\n        this.pausedTimeStamp = Resonance.audioCtx.currentTime - this.startedTimeStamp;\r\n        // This sound is no longer considered to be playing, so remove it from the array\r\n        if (Resonance.soundsPlaying.includes(this)) Resonance.soundsPlaying.splice(Resonance.soundsPlaying.indexOf(this), 1);\r\n        // If this sound is not apart of the suspended sounds array add it\r\n        if (!Resonance.pausedSounds.includes(this)) Resonance.pausedSounds.push(this);\r\n        if (typeof(this.events.pause) === 'function') this.events.pause();\r\n        return this;\r\n    }\r\n    /**\r\n     * Resumes playing this sound\r\n     * \r\n     * @returns {this} This sound instance\r\n     */\r\n    resume() {\r\n        if (!this.loaded) return;\r\n        // This sound is no longer considered to be suspended, so remove it from the array\r\n        if (Resonance.pausedSounds.includes(this)) Resonance.pausedSounds.splice(Resonance.pausedSounds.indexOf(this), 1);\r\n        // This sound is no longer suspended and is now playing again, add it to the playing array\r\n        if (!Resonance.soundsPlaying.includes(this)) Resonance.soundsPlaying.push(this);\r\n        // this will use the this.pausedTimeStamp value to resume\r\n        this.play(true);\r\n        this.state = this.fader.raf ? 'fading' : 'playing';\r\n        if (typeof(this.events.resume) === 'function') this.events.resume();\r\n        return this;\r\n    }\r\n    /**\r\n     * Stops this sound from playing. If any filters are utilized on this sound they are removed.\r\n     * \r\n     * @param {string} pState - The current state of this sound. It's used to figure out if a callback should be dispatched\r\n     * @returns {this} This sound instance\r\n     */\r\n    stop(pState) {\r\n        // The sound isn't loaded yet, but the developer wants to stop this sound, so we send out a stopSignal, so that when the sound is loaded and attempted to play, it will not play.\r\n        if (!this.source) {\r\n            this.stopSignal = true;\r\n            return;\r\n        }\r\n        const wasPlaying = (this.state === 'playing' || this.state === 'fading' || this.state === 'suspended') ? true : false;\r\n        // This sound is no longer considered to be playing, so remove it from the array\r\n        if (Resonance.soundsPlaying.includes(this)) Resonance.soundsPlaying.splice(Resonance.soundsPlaying.indexOf(this), 1);\r\n        if (this.source) {\r\n            if (!this.source.stop) this.source.stop = this.source.noteOff;\r\n            this.source.stop();\r\n            this.removeAllFilters();\r\n            this.source.disconnect();\r\n            this.gainNode.disconnect();\r\n            this.source = null;\r\n            this.gainNode = null;\r\n        }\r\n        this.state = pState ? pState : 'stopped';\r\n        if (this.state === 'stopped' && wasPlaying && typeof(this.events.stop) === 'function') this.events.stop();\r\n        return this;\r\n    }\r\n    /**\r\n     * Plays this sound\r\n     * \r\n     * @param {boolean} pResume - If this is being played from a paused state\r\n     * @returns {this} This sound instance\r\n     */\r\n    play(pResume) {\r\n        // A sound cannot be played if it's sound name is not referencable, \r\n        // a sound that is recycled has no sound information to be played\r\n        // and if the game's API doesn't allow a sound to be played at it's current time, then it can't play.\r\n        if (!this.soundPath || this.state === 'recycled' || !Resonance.canPlaySound()) return;\r\n        // If this sound is not loaded, it cannot be played, however there is a chance that a sound with the same buffer\r\n        // information has been played before and stored. In this case it does not need to wait to load, it instead checks to see\r\n        // if that buffer information is avaiable, and if it is, it allows the sound to be played with that data.\r\n        if (!this.loaded && !Resonance.loadedBuffers[this.soundPath]) {\r\n            this.playAfterLoad = true;\r\n            return;\r\n        }\r\n        // The game does not have focus at the moment, this sound will be automatically queued and played when the screen gets focus again if it is not already preset to play even when focus is lost\r\n        if (!Resonance.focused && !this.canPlayUnfocused()) {\r\n            if (!Resonance.queuedSoundsToPlay.includes(this)) Resonance.queuedSoundsToPlay.push(this);\r\n            return;\r\n        }\r\n        // if you already have a soure and a gainNode, disconnect them and let them be garbage collected.\r\n        /**\r\n         * @todo Investigate if this is needed. Doesn't seem like you have to create a new source and gain node each time.\r\n         */\r\n        if (this.source) {\r\n            this.removeAllFilters();\r\n            this.source.disconnect();\r\n            this.gainNode.disconnect();\r\n            this.source = null;\r\n            this.gainNode = null;\r\n        }\r\n        if (Resonance.pausedSounds.includes(this)) Resonance.pausedSounds.splice(Resonance.pausedSounds.indexOf(this), 1);\r\n        const source = Resonance.audioCtx.createBufferSource();\r\n        const gainNode = Resonance.audioCtx.createGain();\r\n        const self = this;\r\n        gainNode.gain.value = Resonance.constructor.normalize(this._volume);\r\n        gainNode.connect(Resonance.gainNode);\r\n        source.connect(gainNode); \r\n        Resonance.gainNode.connect(Resonance.audioCtx.destination);\r\n        source.buffer = Resonance.loadedBuffers[this.soundPath];\r\n        source.playbackRate.value = this._playbackRate;\r\n        // sound.stop() calls this as well\r\n        source.onended = function() {\r\n            // if this sound was stopped, and it is a sound that will be saved return early\r\n            if (self.state === 'stopped' && self.save) {\r\n                return;\r\n            } else if (self.state === 'restart') {\r\n                // since the sound is restarting we don't want it to fire off the `onEnded` event.\r\n                self.play();\r\n                return;\r\n            } else if (self.state === 'suspended') {\r\n                return;\r\n            }\r\n            if (self.state !== 'stopped' && typeof(self.events.end) === 'function') self.events.end();\r\n            if (self._loop) {\r\n                self.play();\r\n                return;\r\n            }\r\n            /*\r\n                If this is a one use sound, it will be recycled or killed.\r\n                A developer may still hold a reference to this sound but will not be able to do anything to it.\r\n                If you are using a one use sound, it is best to play a sound on its creation without storing it.\r\n                Resonance.createSound('soundPath', volume, startTime, endTime, playrate, loop).play()\r\n            */\r\n            if (!self.save) self.kill();\r\n        };\r\n        this.source = source;\r\n        this.gainNode = gainNode;\r\n        this.duration = source.buffer.duration;\r\n        this.playAfterLoad = null;\r\n        if (!source.start) source.start = source.noteOn;\r\n        source.start(0, (this.pausedTimeStamp ? this.pausedTimeStamp * this._playbackRate: this.startTime), this.endTime ? this.endTime : this.duration);\r\n/* \t\t\t\t\r\n        // This works, however it is commented out because manually looping is alot easier to do, and easier to stuff callbacks into it when done manually.\r\n        source.loop = this._loop;\r\n        source.loopStart = this.startTime;\r\n        source.loopEnd = this.endTime ? this.endTime : source.buffer.duration; \r\n*/\r\n        this.state = 'playing';\r\n        this.startedTimeStamp = Resonance.audioCtx.currentTime - (this.pausedTimeStamp ? this.pausedTimeStamp : this.startTime);\r\n        this.pausedTimeStamp = 0;\r\n        /**\r\n         * Adds a filter to this sound. This is in the case of a sound that has been looped.\r\n         * @todo Allow more than one filter.\r\n         */\r\n        if (this._filters.length) {\r\n            this.addFilter(this._filters.pop());\r\n        }\r\n        if (!Resonance.soundsPlaying.includes(this)) Resonance.soundsPlaying.push(this);\r\n        if (!pResume && typeof(this.events.start) === 'function') this.events.start();\r\n        return this;\r\n    }\r\n    /**\r\n     * Restarts this sound\r\n     * @private\r\n     * @returns {this} This sound instance\r\n     */\r\n    restart() {\r\n        this.stop('restart');\r\n        return this;\r\n    }\r\n    /**\r\n     * Get whether this sound will play when the window is unfocused\r\n     * @private\r\n     * @returns {boolean} Whether or not this sound will play when the window is unfocused\r\n     */\r\n    canPlayUnfocused() {\r\n        return this.playUnfocused ? true : false;\r\n    }\r\n    /**\r\n     * Kills this sound. Wipes it, and recycles it if the recycle manager isn't full.\r\n     * If the recycle manager is full, this sound will become an empty class instance.\r\n     * @private\r\n     */\r\n    kill() {\r\n        this.wipe();\r\n        if (Resonance.recycledSounds.length < Resonance.constructor.MAX_RECYCLED_SOUNDS)  {\r\n            Resonance.recycledSounds.push(this);\r\n        } else {\r\n            // remove all properties from this sound object, since it no longer will be used.\r\n            // any references to this should be removed so that it can be garbage collected\r\n            for (const variable in this) delete this[variable];\r\n        }\r\n    }\r\n\t/**\r\n\t * Adds a filter to be applied to this sound.\r\n     * @todo Allow more than one filter. Loop through the filters array and connect all filters after disconnecting.\r\n\t * @param {Object} pFilter - The filter to add.\r\n\t */\r\n\taddFilter(pFilter) {\r\n        const source = this.source;\r\n        if (source) {\r\n            // Add the filter to the sound's tracked array.\r\n            if (!this._filters.includes(pFilter)) {\r\n                this._filters.push(pFilter);\r\n                // Disconnect from the gain node.\r\n                source.disconnect();\r\n                // Connect the filter\r\n                source.connect(pFilter);\r\n                pFilter.connect(this.gainNode);\r\n            }\r\n        } else {\r\n            Resonance.logger.prefix('Resonance-Module').error('Invalid sound! No source found on this sound.');\r\n        }\r\n\t}\r\n\t/**\r\n\t * Removes a filter from being applied to this sound.\r\n\t * @param {Object} pFilter - The filter to remove.\r\n\t */\r\n\tremoveFilter(pFilter) {\r\n        const source = this.source;\r\n        if (source) {\r\n            // Remove the filter from being stored on the sound.\r\n            if (this._filters.includes(pFilter)) {\r\n                this._filters.splice(this._filters.indexOf(pFilter), 1);\r\n                // Disconnect from the gain node.\r\n                source.disconnect();\r\n                // Disconnect the filter from the gain node\r\n                pFilter.disconnect(this.gainNode);\r\n                // Connect back to the gain node\r\n                source.connect(this.gainNode);\r\n            }\r\n        } else {\r\n            Resonance.logger.prefix('Resonance-Module').error('Invalid sound! No source found on this sound.');\r\n        }\r\n\t}\r\n    /**\r\n     * Removes all filters from this sound.\r\n     */\r\n    removeAllFilters() {\r\n        // Remove all filters from this sound.\r\n        this._filters.forEach((pElement) => {\r\n            pElement.disconnect(this.gainNode);\r\n            this.source.connect(this.gainNode);\r\n        });\r\n    }\r\n    /**\r\n     * Resets this sound to default state\r\n     * @private\r\n     */\r\n    wipe() {\r\n        this.onStarted = null;\r\n        this.onStopped = null;\r\n        this.onEnded = null;\r\n        this.onSuspended = null;\r\n        this.onResumed = null;\r\n        this.stop('wipe');\r\n        cancelAnimationFrame(this.fader.raf);\r\n        if (this.source) {\r\n            this.removeAllFilters();\r\n            this.source.disconnect();\r\n            this.gainNode.disconnect();\r\n        }\r\n        // Remove all filters. This is in the case no source is found.\r\n        this._filters.length = 0;\r\n        this.soundPath = null;\r\n        this.startTime = null;\r\n        this.endTime = null;\r\n        this.save = null;\r\n        this.duration = null;\r\n        this._playbackRate = 1;\r\n        this.source = null;\r\n        this.gainNode = null;\r\n        this.loaded = false;\r\n        this.playAfterLoad = null;\r\n        this.state = 'recycled';\r\n        this.startedTimeStamp = null;\r\n        this.pausedTimeStamp = 0;\r\n        this.playUnfocused = null;\r\n        this.fader.duration = this.fader.currentIteration = this.fader.initialValue = this.fader.changeInValue = this.fader.totalIterations = this.fader.startStamp = this.fader.previousTimeStamp = this.fader.durationOffScreen = this.fader.queue = this.fader.raf = null;\r\n        this.stopSignal = false;\r\n        this._loop = false;\r\n        this._volume = 100 * Resonance.constructor.normalize(Resonance.volume);\r\n        this._info.soundPath = this._info.duration = null;\r\n        for (const prop in this.events) {\r\n            delete this.events[prop];\r\n        }\r\n        if (Resonance.soundsPlaying.includes(this)) Resonance.soundsPlaying.splice(Resonance.soundsPlaying.indexOf(this), 1);\r\n        if (Resonance.pausedSounds.includes(this)) Resonance.pausedSounds.splice(Resonance.pausedSounds.indexOf(this), 1);\r\n        if (Resonance.queuedSoundsToPlay.includes(this)) Resonance.queuedSoundsToPlay.splice(Resonance.queuedSoundsToPlay.indexOf(this), 1);\r\n        if (Resonance.queuedSoundsToFade.includes(this)) Resonance.queuedSoundsToFade.splice(Resonance.queuedSoundsToFade.indexOf(this), 1);\r\n    }\r\n    /**\r\n     * Get the current timestamp of the sound playing\r\n     * \r\n     * @returns {number} The current timestamp into the sound\r\n     */\r\n    getCurrentTime() {\r\n        if (this.pausedTimeStamp) {\r\n            return this.pausedTimeStamp * this._playbackRate;\r\n        } else if (this.startedTimeStamp) {\r\n            return Resonance.audioCtx.currentTime - this.startedTimeStamp;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n    /**\r\n     * Fades this sound to the specified volume in the specified duration via the specified ease\r\n     * \r\n     * @param {number} [pVolume=100] - The volume to fade to\r\n     * @param {number} [pDuration=5000] - The duration of the fade in ms\r\n     * @param {function} [pEase='easeOutCubic'] - Easing function\r\n     * @param {function} pCallback - Callback to be called when the fade is over\r\n     * @returns {this} This sound instance\r\n     */\r\n    fade(pVolume=100, pDuration=5000, pEase='easeOutCubic', pCallback) {\r\n        if (isNaN(pVolume)) return;\r\n        if (isNaN(pDuration)) return;\r\n        // If a sound is not playing, it cannot be faded.\r\n        if (this.state !== 'playing' && Resonance.focused) return;\r\n        // The game does not have focus at the moment, this sound will be automatically queued and faded when the screen gets focus again if it is not already preset to play/fade even when the screen has no focus\r\n        if (!Resonance.focused && !this.canPlayUnfocused()) {\r\n            // If this sound is already queued to fade, then just exit out\r\n            if (Resonance.queuedSoundsToFade.includes(this)) return;\r\n            this.fader.queue = {\r\n                'volume': pVolume,\r\n                'duration': pDuration,\r\n                'ease': pEase,\r\n                'callback': pCallback\r\n            }\r\n            Resonance.queuedSoundsToFade.push(this);\r\n            return;\r\n        }\r\n        if (!Tween[pEase]) {\r\n            pEase = 'easeOutCubic';\r\n            Resonance.logger.prefix('Resonance-Module').warn('Resonance: Invalid pEase value. Reverted to default.');\r\n        }\r\n        // Get rid of the queue information if it exists, it is no longer needed\r\n        if (this.fader.queue) this.fader.queue = null;\r\n        pVolume = Resonance.constructor.clamp(pVolume, Resonance.constructor.MIN_VOLUME, Resonance.constructor.MAX_VOLUME);\r\n        this.fader.duration = Math.max(pDuration, 0);\r\n        this.fader.currentIteration = 0;\r\n        this.fader.initialValue = this._volume;\r\n        this.fader.changeInValue = pVolume - this.fader.initialValue;\r\n        this.fader.totalIterations = this.fader.duration / (1000 / Resonance.constructor.FRAME_RATE);\r\n        this.fader.startStamp = null;\r\n        this.fader.previousTimeStamp = null;\r\n        // This is due to the fact the fader interval is still active, and incrementing the timestamp if the game is not focused\r\n        // When the game is focused, we need to get the value of time that the player was away from the screen and remove it from the current timestamp.\r\n        // The first index holds the alotted time, the second index is used to count the time, when the screen is focused, all the time from the second index gets dumped to the first, and it repeats if neccasary.\r\n        this.fader.durationOffScreen = [0, 0];\r\n        this.state = 'fading';\r\n\r\n        const self = this;\r\n        const fadeInterval = function(pTimeStamp) {\r\n            if (!Resonance.focused) {\r\n                self.fader.raf = requestAnimationFrame(fadeInterval);\r\n                self.fader.durationOffScreen[1] = pTimeStamp - self.fader.previousTimeStamp;\r\n                return;\r\n            }\r\n            if (self.fader.startStamp === null) self.fader.startStamp = pTimeStamp;\r\n            self.volume = Tween[pEase](self.fader.currentIteration, self.fader.initialValue, self.fader.changeInValue, self.fader.totalIterations);\r\n            if (self.fader.durationOffScreen[1]) {\r\n                self.fader.durationOffScreen[0] += self.fader.durationOffScreen[1];\r\n                self.fader.durationOffScreen[1] = 0;\r\n            }\r\n            const elapsed = (pTimeStamp - self.fader.durationOffScreen[0]) - self.fader.startStamp;\r\n            if (self.fader.currentIteration < self.fader.totalIterations) self.fader.currentIteration++;\r\n            if (elapsed < self.fader.duration) {\r\n                self.fader.previousTimeStamp = pTimeStamp;\r\n            } else {\r\n                cancelAnimationFrame(self.fader.raf);\r\n                self.fader.duration = self.fader.currentIteration = self.fader.initialValue = self.fader.changeInValue = self.fader.totalIterations = self.fader.startStamp = self.fader.previousTimeStamp = self.fader.durationOffScreen = self.fader.queue = self.fader.raf = null;\r\n                // When a sound is faded down to `0` or any other value. Just because it may be muted, does not mean it is stopped. \r\n                // The state of the sound is still considered to be playing after its done fading\r\n                self.state = 'playing';\t\t\t\t\t\t\r\n                self.volume = pVolume;\r\n                if (typeof(pCallback) === 'function') pCallback();\r\n                return;\r\n            }\r\n            self.fader.raf = requestAnimationFrame(fadeInterval);\r\n        }\r\n        this.fader.raf = requestAnimationFrame(fadeInterval);\r\n        return this;\r\n    }\r\n    /**\r\n     * Start the queued fade\r\n     */\r\n    queuedFade() {\r\n        if (this.fader.queue) this.fade(this.fader.queue.volume, this.fader.queue.duration, this.fader.queue.ease, this.fader.queue.callback);\r\n    }\r\n}\r\n\r\nexport { Sound };",
    "static": true,
    "longname": "C:/Users/jared/Documents/Github/Core/src/submodules/Resonance/src/sound.mjs",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 148,
    "kind": "class",
    "name": "Sound",
    "memberof": "src/submodules/Resonance/src/sound.mjs",
    "static": true,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound",
    "access": "public",
    "export": true,
    "importPath": "core/src/submodules/Resonance/src/sound.mjs",
    "importStyle": "{Sound}",
    "description": "A small class to represent a sound. Has useful API to handle the sound.",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Sound"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 149,
    "kind": "member",
    "name": "soundPath",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#soundPath",
    "access": "private",
    "description": "The path of the sound.",
    "lineNumber": 13,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 150,
    "kind": "member",
    "name": "startTime",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#startTime",
    "access": "private",
    "description": "The start time of this sound.",
    "lineNumber": 19,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 151,
    "kind": "member",
    "name": "endTime",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#endTime",
    "access": "private",
    "description": "The end time of ththise sound.",
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 152,
    "kind": "member",
    "name": "save",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#save",
    "access": "private",
    "description": "Whether to save this sound or not.",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 153,
    "kind": "member",
    "name": "duration",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#duration",
    "access": "private",
    "description": "The duration of this sound.",
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 154,
    "kind": "member",
    "name": "source",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#source",
    "access": "private",
    "description": "The source of this sound.",
    "lineNumber": 43,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 155,
    "kind": "member",
    "name": "gainNode",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#gainNode",
    "access": "private",
    "description": "The gain node of this sound.",
    "lineNumber": 49,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 156,
    "kind": "member",
    "name": "loaded",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#loaded",
    "access": "private",
    "description": "Whether this sound is loaded.",
    "lineNumber": 55,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 157,
    "kind": "member",
    "name": "playAfterLoad",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#playAfterLoad",
    "access": "private",
    "description": "If this sound is to play after it is loaded.",
    "lineNumber": 61,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 158,
    "kind": "member",
    "name": "muted",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#muted",
    "access": "private",
    "description": "If this sound is muted.",
    "lineNumber": 67,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 159,
    "kind": "member",
    "name": "state",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#state",
    "access": "private",
    "description": "The state of this sound.",
    "lineNumber": 73,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 160,
    "kind": "member",
    "name": "startedTimeStamp",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#startedTimeStamp",
    "access": "private",
    "description": "The start timestamp of this sound.",
    "lineNumber": 79,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 161,
    "kind": "member",
    "name": "pausedTimeStamp",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#pausedTimeStamp",
    "access": "private",
    "description": "The timestamp of this sound when it was paused so it can be resumed at the same timestamp.",
    "lineNumber": 85,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 162,
    "kind": "member",
    "name": "playUnfocused",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#playUnfocused",
    "access": "private",
    "description": "If this sound plays without window focus.",
    "lineNumber": 91,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 163,
    "kind": "member",
    "name": "fader",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#fader",
    "access": "private",
    "description": "Object holding the fading information for this sound.",
    "lineNumber": 97,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 164,
    "kind": "member",
    "name": "events",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#events",
    "access": "private",
    "description": "Events tied to this sound. start | end | pause | resume",
    "lineNumber": 103,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 165,
    "kind": "member",
    "name": "_filters",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#_filters",
    "access": "private",
    "description": "Array of filters that are currently applied on this sound.",
    "lineNumber": 109,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 166,
    "kind": "member",
    "name": "stopSignal",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#stopSignal",
    "access": "private",
    "description": "Whether this sound was sent a stop signal.",
    "lineNumber": 115,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 167,
    "kind": "member",
    "name": "_loop",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#_loop",
    "access": "private",
    "description": "If this sound is to loop.",
    "lineNumber": 121,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 168,
    "kind": "member",
    "name": "_playbackRate",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#_playbackRate",
    "access": "private",
    "description": "The playback rate of this sound.",
    "lineNumber": 127,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 169,
    "kind": "member",
    "name": "_volume",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#_volume",
    "access": "private",
    "description": "The volume of this sound.",
    "lineNumber": 133,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 170,
    "kind": "member",
    "name": "_info",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#_info",
    "access": "private",
    "description": "Info tied to this sound.",
    "lineNumber": 141,
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "soundPath",
        "description": "The path this sound uses for its source"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "duration",
        "description": "The duration of this sound"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 171,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 153,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Sound } - A sound object that has vast API on controlling it"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pSoundPath",
        "description": "The path of the sound file"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pVolume",
        "description": "The volume of the sound"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pStartTime",
        "description": "The start time of this sound (to play a clipped version)"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pEndTime",
        "description": "The end time of this sound (to play a clipped version)"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "pSave",
        "description": "Whether to save this sound, or recycle it when it's completed"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "pPlayUnfocused",
        "description": "If this sound is set to playUnfocused then it will not be played automatically when the game screen is not focused"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pPlaybackRate",
        "description": "The rate at which the sound is played, Higher numbers for faster playback (MAX 10)"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "pLoop",
        "description": "Whether this sound should loop or not"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Sound "
      ],
      "spread": false,
      "description": "A sound object that has vast API on controlling it"
    }
  },
  {
    "__docId__": 172,
    "kind": "get",
    "name": "volume",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#volume",
    "access": "public",
    "description": "Gets the current volume of this sound",
    "lineNumber": 161,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} The current volume of this sound"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The current volume of this sound"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 173,
    "kind": "set",
    "name": "volume",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#volume",
    "access": "public",
    "description": "Sets the volume of this sound",
    "lineNumber": 169,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pNewVolume",
        "description": "The volume to set"
      }
    ]
  },
  {
    "__docId__": 175,
    "kind": "method",
    "name": "on",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#on",
    "access": "public",
    "description": "Attaches a callback to the specified event.",
    "lineNumber": 181,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pEvent",
        "description": "The event to attach the callback to"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "pCallback",
        "description": "The function to be called when the event is triggered"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "this"
      ],
      "spread": false,
      "description": "The Sound instance"
    }
  },
  {
    "__docId__": 176,
    "kind": "method",
    "name": "toggleMute",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#toggleMute",
    "access": "public",
    "description": "Toggleable mute feature for this sound. Flips between muted and unmuted",
    "lineNumber": 204,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{this} This sound instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "this"
      ],
      "spread": false,
      "description": "This sound instance"
    },
    "params": []
  },
  {
    "__docId__": 178,
    "kind": "get",
    "name": "loop",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#loop",
    "access": "public",
    "description": "Get the loop status of this sound",
    "lineNumber": 223,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} Whether this sound is set to loop or not"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Whether this sound is set to loop or not"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 179,
    "kind": "set",
    "name": "loop",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#loop",
    "access": "public",
    "description": "Set the loop status of this sound",
    "lineNumber": 231,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "pLoopValue",
        "description": "The value which to set the loop status to. Truthy values resolve to true, and falsely values resovle to false"
      }
    ]
  },
  {
    "__docId__": 181,
    "kind": "method",
    "name": "toggleLoop",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#toggleLoop",
    "access": "public",
    "description": "Toggleable loop feature for this sound. Flips between loop and unlooped",
    "lineNumber": 240,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{this} This sound instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "this"
      ],
      "spread": false,
      "description": "This sound instance"
    },
    "params": []
  },
  {
    "__docId__": 183,
    "kind": "get",
    "name": "playbackRate",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#playbackRate",
    "access": "public",
    "description": "Get the playback status of this sound",
    "lineNumber": 250,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} The playback rate of this sound"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The playback rate of this sound"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 184,
    "kind": "set",
    "name": "playbackRate",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#playbackRate",
    "access": "public",
    "description": "Set the playback status of this sound",
    "lineNumber": 258,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pNewPlaybackRate",
        "description": "The value which to set the playback status to. Clamped to 10"
      }
    ]
  },
  {
    "__docId__": 186,
    "kind": "set",
    "name": "info",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#info",
    "access": "public",
    "description": "Set the info of this sound\nThe new value is not used, as this is a \"read-only\" variable. So any attempts to set it will not work",
    "lineNumber": 268,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pNewInfo",
        "description": "The new value"
      }
    ]
  },
  {
    "__docId__": 188,
    "kind": "get",
    "name": "info",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#info",
    "access": "public",
    "description": "Get the info object of this sound",
    "lineNumber": 277,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Objecct} The info object of this sound"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Objecct"
      ],
      "spread": false,
      "description": "The info object of this sound"
    },
    "type": {
      "types": [
        "{...undefined: Object}"
      ]
    }
  },
  {
    "__docId__": 189,
    "kind": "method",
    "name": "build",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#build",
    "access": "public",
    "description": "",
    "lineNumber": 300,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ Sound } - A sound object that has vast API on controlling it"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pSoundPath",
        "description": "The path of the sound file"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pVolume",
        "description": "The volume of the sound"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pStartTime",
        "description": "The start time of this sound (to play a clipped version)"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pEndTime",
        "description": "The end time of this sound (to play a clipped version)"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "pSave",
        "description": "Whether to save this sound, or recycle it when it's completed"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "pPlayUnfocused",
        "description": "If this sound is set to true then it will not be paused automatically when the game screen is not focused"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pPlaybackRate",
        "description": "The rate at which the sound is played, Higher numbers for faster playback (MAX 10)"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "pLoop",
        "description": "Whether this sound should loop or not"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        " Sound "
      ],
      "spread": false,
      "description": "A sound object that has vast API on controlling it"
    }
  },
  {
    "__docId__": 200,
    "kind": "method",
    "name": "load",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#load",
    "access": "private",
    "description": "Loads this sound and stores its data so future sounds can use the same buffer",
    "lineNumber": 322,
    "params": [],
    "return": null
  },
  {
    "__docId__": 201,
    "kind": "method",
    "name": "pause",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#pause",
    "access": "public",
    "description": "Pauses this sound",
    "lineNumber": 358,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{this} This sound instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "this"
      ],
      "spread": false,
      "description": "This sound instance"
    },
    "params": []
  },
  {
    "__docId__": 204,
    "kind": "method",
    "name": "resume",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#resume",
    "access": "public",
    "description": "Resumes playing this sound",
    "lineNumber": 375,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{this} This sound instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "this"
      ],
      "spread": false,
      "description": "This sound instance"
    },
    "params": []
  },
  {
    "__docId__": 206,
    "kind": "method",
    "name": "stop",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#stop",
    "access": "public",
    "description": "Stops this sound from playing. If any filters are utilized on this sound they are removed.",
    "lineNumber": 393,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{this} This sound instance"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pState",
        "description": "The current state of this sound. It's used to figure out if a callback should be dispatched"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "this"
      ],
      "spread": false,
      "description": "This sound instance"
    }
  },
  {
    "__docId__": 211,
    "kind": "method",
    "name": "play",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#play",
    "access": "public",
    "description": "Plays this sound",
    "lineNumber": 421,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{this} This sound instance"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "pResume",
        "description": "If this is being played from a paused state"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "this"
      ],
      "spread": false,
      "description": "This sound instance"
    }
  },
  {
    "__docId__": 222,
    "kind": "method",
    "name": "restart",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#restart",
    "access": "private",
    "description": "Restarts this sound",
    "lineNumber": 515,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{this} This sound instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "this"
      ],
      "spread": false,
      "description": "This sound instance"
    },
    "params": []
  },
  {
    "__docId__": 223,
    "kind": "method",
    "name": "canPlayUnfocused",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#canPlayUnfocused",
    "access": "private",
    "description": "Get whether this sound will play when the window is unfocused",
    "lineNumber": 524,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} Whether or not this sound will play when the window is unfocused"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Whether or not this sound will play when the window is unfocused"
    },
    "params": []
  },
  {
    "__docId__": 224,
    "kind": "method",
    "name": "kill",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#kill",
    "access": "private",
    "description": "Kills this sound. Wipes it, and recycles it if the recycle manager isn't full.\nIf the recycle manager is full, this sound will become an empty class instance.",
    "lineNumber": 532,
    "params": [],
    "return": null
  },
  {
    "__docId__": 225,
    "kind": "method",
    "name": "addFilter",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#addFilter",
    "access": "public",
    "description": "Adds a filter to be applied to this sound.",
    "lineNumber": 547,
    "todo": [
      "Allow more than one filter. Loop through the filters array and connect all filters after disconnecting."
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pFilter",
        "description": "The filter to add."
      }
    ],
    "return": null
  },
  {
    "__docId__": 226,
    "kind": "method",
    "name": "removeFilter",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#removeFilter",
    "access": "public",
    "description": "Removes a filter from being applied to this sound.",
    "lineNumber": 567,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pFilter",
        "description": "The filter to remove."
      }
    ],
    "return": null
  },
  {
    "__docId__": 227,
    "kind": "method",
    "name": "removeAllFilters",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#removeAllFilters",
    "access": "public",
    "description": "Removes all filters from this sound.",
    "lineNumber": 587,
    "params": [],
    "return": null
  },
  {
    "__docId__": 228,
    "kind": "method",
    "name": "wipe",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#wipe",
    "access": "private",
    "description": "Resets this sound to default state",
    "lineNumber": 598,
    "params": [],
    "return": null
  },
  {
    "__docId__": 229,
    "kind": "member",
    "name": "onStarted",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#onStarted",
    "access": "public",
    "description": null,
    "lineNumber": 599,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 230,
    "kind": "member",
    "name": "onStopped",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#onStopped",
    "access": "public",
    "description": null,
    "lineNumber": 600,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 231,
    "kind": "member",
    "name": "onEnded",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#onEnded",
    "access": "public",
    "description": null,
    "lineNumber": 601,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 232,
    "kind": "member",
    "name": "onSuspended",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#onSuspended",
    "access": "public",
    "description": null,
    "lineNumber": 602,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 233,
    "kind": "member",
    "name": "onResumed",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#onResumed",
    "access": "public",
    "description": null,
    "lineNumber": 603,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 251,
    "kind": "method",
    "name": "getCurrentTime",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#getCurrentTime",
    "access": "public",
    "description": "Get the current timestamp of the sound playing",
    "lineNumber": 645,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} The current timestamp into the sound"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The current timestamp into the sound"
    },
    "params": []
  },
  {
    "__docId__": 252,
    "kind": "method",
    "name": "fade",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#fade",
    "access": "public",
    "description": "Fades this sound to the specified volume in the specified duration via the specified ease",
    "lineNumber": 663,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{this} This sound instance"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "100",
        "defaultRaw": 100,
        "name": "pVolume",
        "description": "The volume to fade to"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "5000",
        "defaultRaw": 5000,
        "name": "pDuration",
        "description": "The duration of the fade in ms"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'easeOutCubic'",
        "defaultRaw": "'easeOutCubic'",
        "name": "pEase",
        "description": "Easing function"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "pCallback",
        "description": "Callback to be called when the fade is over"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "this"
      ],
      "spread": false,
      "description": "This sound instance"
    }
  },
  {
    "__docId__": 254,
    "kind": "method",
    "name": "queuedFade",
    "memberof": "src/submodules/Resonance/src/sound.mjs~Sound",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Resonance/src/sound.mjs~Sound#queuedFade",
    "access": "public",
    "description": "Start the queued fade",
    "lineNumber": 736,
    "params": [],
    "return": null
  },
  {
    "__docId__": 255,
    "kind": "file",
    "name": "src/submodules/StateManager/src/state-manager.mjs",
    "content": "import { Logger } from './vendor/logger.min.mjs';\r\n/**\r\n * A class representing a state machine manager.\r\n * \r\n * @class StateManager  \r\n * @license StateManager does not have a license at this time. For licensing contact the author\r\n * @author https://github.com/doubleactii\r\n */\r\nclass StateManager {\r\n\t/**\r\n\t * An object containing all the registered states.\r\n\t * \r\n\t * @private\r\n\t * @type {Object<string, State>}\r\n\t */\r\n\tstates = {};\r\n\t/**\r\n\t * The current state of the state machine.\r\n\t * \r\n\t * @private\r\n\t * @type {State|null}\r\n\t */\r\n\tcurrentState = null;\r\n\t/**\r\n\t * The version of the module.\r\n\t */\r\n\tversion = \"VERSION_REPLACE_ME\";\r\n\t/**\r\n\t * Creates a new state machine manager.\r\n\t * \r\n\t * @param {Object<State>} pStates - Array of state objects to register.\r\n\t */\r\n\tconstructor(pStates) {\r\n        /** The logger module this module uses to log errors / logs.\r\n         * @private\r\n         * @type {Object}\r\n         */\r\n        this.logger = new Logger();\r\n        this.logger.registerType('StateManager-Module', '#ff6600');\r\n\t\t// Loop passed states and register them. {'name': foo, 'state': state}\r\n\t\tif (typeof (pStates) === 'object' && !Array.isArray(pStates)) {\r\n\t\t\tfor (const state in pStates) {\r\n\t\t\t\tthis.registerState();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a new state with the state machine.\r\n\t * \r\n\t * @param {string} pName - The name of the state.\r\n\t * @param {State} pState - The state object.\r\n\t */\r\n\tregisterState(pName, pState) {\r\n\t\tif (typeof (pName) === 'string') {\r\n\t\t\tif (pState instanceof State) {\r\n\t\t\t\tpState.name = pName;\r\n\t\t\t\tthis.states[pName] = pState;\r\n\t\t\t\tpState.manager = this;\r\n\t\t\t} else {\r\n\t\t\t\tthis.logger.prefix('StateManager-Module').error(`${pState} is not a valid state.`);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.logger.prefix('StateManager-Module').error('Invalid name for state.');\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the current state of the state machine.\r\n\t * \r\n\t * @param {string} pName - The name of the state to set.\r\n\t * @param {*} pRest - The arguments that were passed when setting this state.\r\n\t */\r\n\tsetState(pName, ...pRest) {\r\n\t\tconst state = this.states[pName];\r\n\t\tif (!state) {\r\n\t\t\tthis.logger.prefix('StateManager-Module').warn(`State ${pName} not found.`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.currentState) {\r\n\t\t\tthis.currentState.exit();\r\n\t\t}\r\n\r\n\t\tthis.currentState = state;\r\n\t\tthis.currentState.enter(...pRest);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the current state.\r\n\t */\r\n\tgetCurrentState() {\r\n\t\treturn this.currentState ? this.currentState.name : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current state of the state machine.\r\n\t * \r\n\t * @param {number} pDelta - The delta time since the last update in seconds.\r\n\t */\r\n\tupdate(pDelta) {\r\n\t\tif (this.currentState) {\r\n\t\t\tthis.currentState.update(pDelta);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * A class representing a state.\r\n */\r\nclass State {\r\n\t/**\r\n\t * Called when entering the state.\r\n\t */\r\n\tenter() { }\r\n\r\n\t/**\r\n\t * Called when executing the state.\r\n\t * \r\n\t * @param {number} pDelta - The delta time since the last update in seconds.\r\n\t */\r\n\tupdate(pDelta) { }\r\n\r\n\t/**\r\n\t * Called when exiting the state.\r\n\t */\r\n\texit() { }\r\n}\r\n\r\nexport { StateManager, State };",
    "static": true,
    "longname": "C:/Users/jared/Documents/Github/Core/src/submodules/StateManager/src/state-manager.mjs",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 256,
    "kind": "class",
    "name": "StateManager",
    "memberof": "src/submodules/StateManager/src/state-manager.mjs",
    "static": true,
    "longname": "src/submodules/StateManager/src/state-manager.mjs~StateManager",
    "access": "public",
    "export": true,
    "importPath": "core/src/submodules/StateManager/src/state-manager.mjs",
    "importStyle": "{StateManager}",
    "description": "A class representing a state machine manager.",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "StateManager  "
      },
      {
        "tagName": "@license",
        "tagValue": "StateManager does not have a license at this time. For licensing contact the author"
      },
      {
        "tagName": "@author",
        "tagValue": "https://github.com/doubleactii"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 257,
    "kind": "member",
    "name": "states",
    "memberof": "src/submodules/StateManager/src/state-manager.mjs~StateManager",
    "static": false,
    "longname": "src/submodules/StateManager/src/state-manager.mjs~StateManager#states",
    "access": "private",
    "description": "An object containing all the registered states.",
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "Object<string, State>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 258,
    "kind": "member",
    "name": "currentState",
    "memberof": "src/submodules/StateManager/src/state-manager.mjs~StateManager",
    "static": false,
    "longname": "src/submodules/StateManager/src/state-manager.mjs~StateManager#currentState",
    "access": "private",
    "description": "The current state of the state machine.",
    "lineNumber": 23,
    "type": {
      "nullable": null,
      "types": [
        "State",
        "null"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 259,
    "kind": "member",
    "name": "version",
    "memberof": "src/submodules/StateManager/src/state-manager.mjs~StateManager",
    "static": false,
    "longname": "src/submodules/StateManager/src/state-manager.mjs~StateManager#version",
    "access": "public",
    "description": "The version of the module.",
    "lineNumber": 27,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 260,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/submodules/StateManager/src/state-manager.mjs~StateManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/StateManager/src/state-manager.mjs~StateManager#constructor",
    "access": "public",
    "description": "Creates a new state machine manager.",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object<State>"
        ],
        "spread": false,
        "optional": false,
        "name": "pStates",
        "description": "Array of state objects to register."
      }
    ]
  },
  {
    "__docId__": 261,
    "kind": "member",
    "name": "logger",
    "memberof": "src/submodules/StateManager/src/state-manager.mjs~StateManager",
    "static": false,
    "longname": "src/submodules/StateManager/src/state-manager.mjs~StateManager#logger",
    "access": "private",
    "description": "The logger module this module uses to log errors / logs.",
    "lineNumber": 38,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 262,
    "kind": "method",
    "name": "registerState",
    "memberof": "src/submodules/StateManager/src/state-manager.mjs~StateManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/StateManager/src/state-manager.mjs~StateManager#registerState",
    "access": "public",
    "description": "Registers a new state with the state machine.",
    "lineNumber": 54,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pName",
        "description": "The name of the state."
      },
      {
        "nullable": null,
        "types": [
          "State"
        ],
        "spread": false,
        "optional": false,
        "name": "pState",
        "description": "The state object."
      }
    ],
    "return": null
  },
  {
    "__docId__": 263,
    "kind": "method",
    "name": "setState",
    "memberof": "src/submodules/StateManager/src/state-manager.mjs~StateManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/StateManager/src/state-manager.mjs~StateManager#setState",
    "access": "public",
    "description": "Sets the current state of the state machine.",
    "lineNumber": 74,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pName",
        "description": "The name of the state to set."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "pRest",
        "description": "The arguments that were passed when setting this state."
      }
    ],
    "return": null
  },
  {
    "__docId__": 265,
    "kind": "method",
    "name": "getCurrentState",
    "memberof": "src/submodules/StateManager/src/state-manager.mjs~StateManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/StateManager/src/state-manager.mjs~StateManager#getCurrentState",
    "access": "public",
    "description": "Gets the current state.",
    "lineNumber": 92,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 266,
    "kind": "method",
    "name": "update",
    "memberof": "src/submodules/StateManager/src/state-manager.mjs~StateManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/StateManager/src/state-manager.mjs~StateManager#update",
    "access": "public",
    "description": "Updates the current state of the state machine.",
    "lineNumber": 101,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pDelta",
        "description": "The delta time since the last update in seconds."
      }
    ],
    "return": null
  },
  {
    "__docId__": 267,
    "kind": "class",
    "name": "State",
    "memberof": "src/submodules/StateManager/src/state-manager.mjs",
    "static": true,
    "longname": "src/submodules/StateManager/src/state-manager.mjs~State",
    "access": "public",
    "export": true,
    "importPath": "core/src/submodules/StateManager/src/state-manager.mjs",
    "importStyle": "{State}",
    "description": "A class representing a state.",
    "lineNumber": 111,
    "interface": false
  },
  {
    "__docId__": 268,
    "kind": "method",
    "name": "enter",
    "memberof": "src/submodules/StateManager/src/state-manager.mjs~State",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/StateManager/src/state-manager.mjs~State#enter",
    "access": "public",
    "description": "Called when entering the state.",
    "lineNumber": 115,
    "params": [],
    "return": null
  },
  {
    "__docId__": 269,
    "kind": "method",
    "name": "update",
    "memberof": "src/submodules/StateManager/src/state-manager.mjs~State",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/StateManager/src/state-manager.mjs~State#update",
    "access": "public",
    "description": "Called when executing the state.",
    "lineNumber": 122,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pDelta",
        "description": "The delta time since the last update in seconds."
      }
    ],
    "return": null
  },
  {
    "__docId__": 270,
    "kind": "method",
    "name": "exit",
    "memberof": "src/submodules/StateManager/src/state-manager.mjs~State",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/StateManager/src/state-manager.mjs~State#exit",
    "access": "public",
    "description": "Called when exiting the state.",
    "lineNumber": 127,
    "params": [],
    "return": null
  },
  {
    "__docId__": 271,
    "kind": "file",
    "name": "src/submodules/Tween/src/tween.mjs",
    "content": "import { Logger } from './vendor/logger.min.mjs';\r\n\r\n/**\r\n* Class for creating a tweening animation\r\n* @class Tween  \r\n* @license Tween does not have a license at this time. For licensing contact the author\r\n* @author https://github.com/doubleactii\r\n*/\r\nclass Tween {\r\n    /**\r\n     * @param {Object} [pOtions={}] - The options for the tween animation\r\n     * @param {Object} [pOtions.start={}] - The starting properties of the animation\r\n     * @param {Object} [pOtions.end={}] - The end properties of the animation\r\n     * @param {number} [pOtions.duration=1000] - The duration of the animation in milliseconds\r\n     * @param {string} [pOtions.easing=\"linear\"] - The easing function to use for the animation\r\n     */\r\n    constructor({ start = {}, end = {}, duration = 1000, easing = Tween.linear } = {}) {\r\n        this._build(start, end, duration, easing);\r\n    }\r\n\r\n    // Robert Penner's easing functions\r\n    static linear(t, b, c, d) {\r\n        return c * t / d + b;\r\n    }\r\n    static easeInQuad(t, b, c, d) {\r\n        return c * (t /= d) * t + b;\r\n    }\r\n    static easeOutQuad(t, b, c, d) {\r\n        return -c * (t /= d) * (t - 2) + b;\r\n    }\r\n    static easeInOutQuad(t, b, c, d) {\r\n        if ((t /= d / 2) < 1) return c / 2 * t * t + b;\r\n        return -c / 2 * ((--t) * (t - 2) - 1) + b;\r\n    }\r\n    static easeInSine(t, b, c, d) {\r\n        return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\r\n    }\r\n    static easeOutSine(t, b, c, d) {\r\n        return c * Math.sin(t / d * (Math.PI / 2)) + b;\r\n    }\r\n    static easeInOutSine(t, b, c, d) {\r\n        return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\r\n    }\r\n    static easeInExpo(t, b, c, d) {\r\n        return (t == 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\r\n    }\r\n    static easeOutExpo(t, b, c, d) {\r\n        return (t == d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\r\n    }\r\n    static easeInOutExpo(t, b, c, d) {\r\n        if (t == 0) return b;\r\n        if (t == d) return b + c;\r\n        if ((t /= d / 2) < 1) return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\r\n        return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\r\n    }\r\n    static easeInCirc(t, b, c, d) {\r\n        return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\r\n    }\r\n    static easeOutCirc(t, b, c, d) {\r\n        return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\r\n    }\r\n    static easeInOutCirc(t, b, c, d) {\r\n        if ((t /= d / 2) < 1) return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\r\n        return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\r\n    }\r\n    static easeInCubic(t, b, c, d) {\r\n        return c * (t /= d) * t * t + b;\r\n    }\r\n    static easeOutCubic(t, b, c, d) {\r\n        return c * ((t = t / d - 1) * t * t + 1) + b;\r\n    }\r\n    static easeInOutCubic(t, b, c, d) {\r\n        if ((t /= d / 2) < 1) return c / 2 * t * t * t + b;\r\n        return c / 2 * ((t -= 2) * t * t + 2) + b;\r\n    }\r\n    static easeInQuart(t, b, c, d) {\r\n        return c * (t /= d) * t * t * t + b;\r\n    }\r\n    static easeOutQuart(t, b, c, d) {\r\n        return -c * ((t = t / d - 1) * t * t * t - 1) + b;\r\n    }\r\n    static easeInOutQuart(t, b, c, d) {\r\n        if ((t /= d / 2) < 1) return c / 2 * t * t * t * t + b;\r\n        return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\r\n    }\r\n    static easeInQuint(t, b, c, d) {\r\n        return c * (t /= d) * t * t * t * t + b;\r\n    }\r\n    static easeOutQuint(t, b, c, d) {\r\n        return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\r\n    }\r\n    static easeInOutQuint(t, b, c, d) {\r\n        if ((t /= d / 2) < 1) return c / 2 * t * t * t * t * t + b;\r\n        return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\r\n    }\r\n    static easeInElastic(t, b, c, d) {\r\n        var s = 1.70158;\r\n        var p = 0;\r\n        var a = c;\r\n        if (t == 0) return b;\r\n        if ((t /= d) == 1) return b + c;\r\n        if (!p) p = d * .3;\r\n        if (a < Math.abs(c)) {\r\n            a = c;\r\n            var s = p / 4;\r\n        } else {\r\n\t\t\t// Handle the Math.asin(0 / 0) case\r\n\t\t\tif (c === 0 && a === 0) {\r\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1);\r\n\t\t\t} else {\r\n\t\t\t\tvar s = p / (2 * Math.PI) * Math.asin(c / a);\r\n\t\t\t}\r\n\t\t}\r\n        return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\r\n    }\r\n    static easeOutElastic(t, b, c, d) {\r\n        var s = 1.70158;\r\n        var p = 0;\r\n        var a = c;\r\n        if (t == 0) return b;\r\n        if ((t /= d) == 1) return b + c;\r\n        if (!p) p = d * .3;\r\n        if (a < Math.abs(c)) {\r\n            a = c;\r\n            var s = p / 4;\r\n        } else {\r\n\t\t\t// Handle the Math.asin(0 / 0) case\r\n\t\t\tif (c === 0 && a === 0) {\r\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1);\r\n\t\t\t} else {\r\n\t\t\t\tvar s = p / (2 * Math.PI) * Math.asin(c / a);\r\n\t\t\t}\r\n\t\t}\r\n        return a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + c + b;\r\n    }\r\n    static easeInOutElastic(t, b, c, d) {\r\n        var s = 1.70158;\r\n        var p = 0;\r\n        var a = c;\r\n        if (t == 0) return b;\r\n        if ((t /= d / 2) == 2) return b + c;\r\n        if (!p) p = d * (.3 * 1.5);\r\n        if (a < Math.abs(c)) {\r\n            a = c;\r\n            var s = p / 4;\r\n        } else {\r\n\t\t\t// Handle the Math.asin(0 / 0) case\r\n\t\t\tif (c === 0 && a === 0) {\r\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1);\r\n\t\t\t} else {\r\n\t\t\t\tvar s = p / (2 * Math.PI) * Math.asin(c / a);\r\n\t\t\t}\r\n\t\t}\r\n        if (t < 1) return -.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\r\n        return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p) * .5 + c + b;\r\n    }\r\n    static easeInBack(t, b, c, d) {\r\n        var s = 1.70158;\r\n        return c * (t /= d) * t * ((s + 1) * t - s) + b;\r\n    }\r\n    static easeOutBack(t, b, c, d) {\r\n        var s = 1.70158;\r\n        return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\r\n    }\r\n    static easeInOutBack(t, b, c, d) {\r\n        var s = 1.70158;\r\n        if ((t /= d / 2) < 1) return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\r\n        return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\r\n    }\r\n\r\n    static easeInBounce(t, b, c, d) {\r\n        return c - Tween.easeOutBounce(d - t, 0, c, d) + b;\r\n    }\r\n\r\n    static easeOutBounce(t, b, c, d) {\r\n        t /= d;\r\n        if (t < 1/2.75) {\r\n            return c * 7.5625 * t * t + b;\r\n        }\r\n        \r\n        if (t < 2/2.75) {\r\n            t -= 1.5/2.75;\r\n            return c * (7.5625 * t * t + 0.75) + b;\r\n        }\r\n        \r\n        if (t < 2.5/2.75) {\r\n            t -= 2.25/2.75;\r\n            return c * (7.5625 * t * t + 0.9375) + b;\r\n        } else {\r\n            t -= 2.625/2.75;\r\n            return c * (7.5625 * t * t + 0.984375) + b;\r\n        }\r\n    }\r\n\r\n    static easeInOutBounce(t, b, c, d) {\r\n        if (t < d*0.5) {\r\n            return (Tween.easeInBounce(t*2, 0, c, d)*0.5 + b);\r\n        }\r\n        return (Tween.easeOutBounce(t*2 - d, 0, c, d)*0.5 + c*0.5 + b);\r\n    }\r\n\t/**\r\n\t * @param {number} pNumber - The number to clamp\r\n\t * @param {number} pMin - The minimum number \r\n\t * @param {number} pMax - The maximum number\r\n\t * @returns {number} The number clamped between the minimum and maximum values\r\n\t */\r\n\tstatic _clamp(pNumber, pMin = 0, pMax = 1) {\r\n\t\treturn Math.max(pMin, Math.min(pNumber, pMax));\r\n\t}\r\n\t/**\r\n\t * Converts an Hex color value to an array of [r, g, b].\r\n\t *\r\n\t * @private\r\n\t * @param {string} pHex - The Hex color in the form \"#fff\" or \"#ffffff\" or tagless.\r\n\t * @return {Array} The array [r, g, b].\r\n\t */\r\n\tstatic _hexToRgb(pHex) {\r\n\t\tpHex = pHex.replace('#', '');\r\n\t\tif (pHex.length === 3) {\r\n\t\t\tpHex = pHex.replace(new RegExp('(.)', 'g'), '$1$1');\r\n\t\t}\r\n\t\tpHex = pHex.match(new RegExp('..', 'g'));\r\n\t\tconst r = Tween._clamp(parseInt(pHex[0], 16), 0, 255);\r\n\t\tconst g = Tween._clamp(parseInt(pHex[1], 16), 0, 255);\r\n\t\tconst b = Tween._clamp(parseInt(pHex[2], 16), 0, 255);\r\n\t\treturn [r, g, b];\r\n\t}\r\n\t/**\r\n\t * Converts an array of [r, g, b] to an Hex color code.\r\n\t * \r\n\t * @private\r\n\t * @param {Array} pColorArray - The rgb color array to convert into a hex\r\n\t * return {string} The hex color\r\n\t */\r\n\tstatic _rgbToHex(pColorArray) {\r\n\t\tif (Array.isArray(pColorArray)) {\r\n\t\t\treturn '#' + pColorArray.map((pColor) => Math.abs(Math.round(pColor)).toString(16).padStart(2, '0')).join('');\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * The version of the module.\r\n\t */\r\n\tversion = \"VERSION_REPLACE_ME\";\r\n    /**\r\n     * Builds/Rebuilds the tween object with new info\r\n     * @param {Object} pStart - The start object containing the start values\r\n     * @param {Object} pEnd - The end object containing the end values\r\n     * @param {number} pDuration -  The duration of the effect\r\n     * @param {function} pEasing - The easing function to use\r\n     */\r\n    _build(pStart, pEnd, pDuration, pEasing) {\r\n        this.start = pStart;\r\n        this.end = pEnd;\r\n        this.duration = pDuration;\r\n        this.easing = typeof(pEasing) === 'function' ? pEasing : Tween.linear;\r\n        this.events = {};\r\n        this.exportedValues = {};\r\n        this.tweening = false;\r\n        this.update = null;\r\n        this.paused = false;\r\n\t\tthis.lastTime = 0;\r\n        this.elapsed = 0;\r\n    }\r\n    /**\r\n     * @param {Object} [pOtions={}] - The options for the tween animation\r\n     * @param {Object} [pOtions.start={}] - The starting properties of the animation\r\n     * @param {Object} [pOtions.end={}] - The end properties of the animation\r\n     * @param {number} [pOtions.duration=1000] - The duration of the animation in milliseconds\r\n     * @param {string} [pOtions.easing=\"linear\"] - The easing function to use for the animation\r\n     */\r\n    build({ start = {}, end = {}, duration = 1000, easing = Tween.linear } = {}) {\r\n        this._build(start, end, duration, easing);\r\n        return this;\r\n    }\r\n    /**\r\n     * Attaches a callback to the specified event.\r\n     * @param {Object} pEvent - The event to attach the callback to\r\n     * @param {Function} pCallback - The function to be called when the event is triggered\r\n     * @return {Tween} The Tween instance\r\n     */\r\n    on(pEvent, pCallback) {\r\n        if (typeof(pCallback) === \"function\") {\r\n            switch (pEvent) {\r\n                case \"start\":\r\n                case \"end\":\r\n                case \"pause\":\r\n                case \"resume\":\r\n                    this.events[pEvent] = pCallback;\r\n                    break;\r\n                default:\r\n                    logger.prefix('Tween-Module').error(`The event \"${pEvent}\" is not supported.`);\r\n            }\r\n        } else {\r\n            logger.prefix('Tween-Module').error(`The callback for event \"${pEvent}\" is not a function.`);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Update each frame.\r\n     */\r\n    animationFrame = () => {\r\n        if (!this.tweening || this.paused) return;\r\n\t\tconst now = Date.now();\r\n\t\tif (!this.lastTime) this.lastTime = now;\r\n        this.elapsed += now - this.lastTime;\r\n        let progress = this.elapsed / this.duration;\r\n        \r\n        if (this.oscillating) {\r\n            progress = (1 - Math.cos(progress * Math.PI)) / 2;\r\n        }\r\n        \r\n        if (progress > 1) {\r\n            progress = 1;\r\n        }\r\n\r\n\t\tfor (let key in this.end) {\r\n\t\t\tlet startValue = this.start[key];\r\n\t\t\tlet endValue = this.end[key];\r\n\t\t\tif (typeof(startValue) === \"string\" && (startValue.length === 3 || startValue.length === 6) || startValue.length === 4 || startValue.length === 7) {\r\n\t\t\t\tstartValue = Tween._hexToRgb(startValue);\r\n\t\t\t\tendValue = Tween._hexToRgb(endValue);\r\n\t\t\t\tconst currentRGB = [\r\n\t\t\t\t\tthis.easing(progress, startValue[0], endValue[0] - startValue[0], 1),\r\n\t\t\t\t\tthis.easing(progress, startValue[1], endValue[1] - startValue[1], 1),\r\n\t\t\t\t\tthis.easing(progress, startValue[2], endValue[2] - startValue[2], 1)\r\n\t\t\t\t];\r\n\t\t\t\tthis.exportedValues[key] = Tween._rgbToHex(currentRGB);\r\n\t\t\t} else {\r\n\t\t\t\tthis.exportedValues[key] = this.easing(progress, startValue, endValue - startValue, 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n        this.update(this.exportedValues);\r\n\r\n        if (progress === 1 && !this.oscillating) {\r\n            this.stop();\r\n            if (this.events.end) {\r\n                this.events.end();\r\n            }\r\n        } else {\r\n            requestAnimationFrame(this.animationFrame);\r\n        }\r\n\t\tthis.lastTime = now;\r\n    }\r\n    /**\r\n     * Animates the tween by oscillating between the start and end properties.\r\n     * @param {function} pUpdate - A callback function to update the values during the oscillation.\r\n     * @param {boolean} [pOscillate=false] - A flag to indicate if the tween should oscillate.\r\n     * @return {Tween} - Returns the Tween instance for method chaining.\r\n     */\r\n    animate(pUpdate, pOscillate = false) {\r\n        if (typeof(pUpdate) !== \"function\") {\r\n            logger.prefix('Tween-Module').error(\"The pUpdate parameter passed to animate is not a function.\");\r\n            return;\r\n        }\r\n        if (this.tweening) return;\r\n        let startProperties = Object.keys(this.start);\r\n        let endProperties = Object.keys(this.end);\r\n\r\n        if (!startProperties.length || !endProperties.length) {\r\n            logger.prefix('Tween-Module').error(\"The start object or the end object has no properties.\");\r\n            return;\r\n        }\r\n\r\n        if (!startProperties.every(prop => endProperties.includes(prop))) {\r\n            logger.prefix('Tween-Module').error(\"The end object is missing properties that the start object has.\");\r\n            return;\r\n        }\r\n\r\n        this.update = pUpdate;\r\n        this.tweening = true;\r\n\t\tthis.elapsed = 0;\r\n        this.oscillating = pOscillate;\r\n\r\n        if (this.events.start) {\r\n            this.events.start();\r\n        }\r\n        requestAnimationFrame(this.animationFrame);\r\n        return this;\r\n    }\r\n    /**\r\n     * Resumes the tween animation\r\n     * @returns {Tween} The instance of the Tween object\r\n     */\r\n    resume() {\r\n        if (this.paused) {\r\n            this.lastTime = Date.now();\r\n            this.paused = false;\r\n            if (this.events.resume) {\r\n                this.events.resume();\r\n            }\r\n            requestAnimationFrame(this.animationFrame);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Pauses the tween animation\r\n     * @returns {Tween} The instance of the Tween object\r\n     */\r\n    pause() {\r\n        if (!this.paused) {\r\n            this.paused = true;\r\n            if (this.events.pause) {\r\n                this.events.pause();\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Stops the tween and clears all data.\r\n     */\r\n    stop() {\r\n        this.tweening = false;\r\n        this.oscillating = false;\r\n        this.update = null;\r\n        this.elapsed = 0;\r\n\t\tthis.lastTime = 0;\r\n        this.paused = false;\r\n        for (const prop in this.exportedValues) {\r\n            if (this.exportedValues.hasOwnProperty(prop)) {\r\n                delete this.exportedValues[prop];\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * The logger for this module.\r\n * @ignore\r\n */\r\nconst logger = new Logger();\r\nlogger.registerType('Tween-Module', '#ff6600');\r\n\r\nexport { Tween };",
    "static": true,
    "longname": "C:/Users/jared/Documents/Github/Core/src/submodules/Tween/src/tween.mjs",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 272,
    "kind": "variable",
    "name": "logger",
    "memberof": "src/submodules/Tween/src/tween.mjs",
    "static": true,
    "longname": "src/submodules/Tween/src/tween.mjs~logger",
    "access": "public",
    "export": false,
    "importPath": "core/src/submodules/Tween/src/tween.mjs",
    "importStyle": null,
    "description": "The logger for this module.",
    "lineNumber": 431,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 273,
    "kind": "class",
    "name": "Tween",
    "memberof": "src/submodules/Tween/src/tween.mjs",
    "static": true,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween",
    "access": "public",
    "export": true,
    "importPath": "core/src/submodules/Tween/src/tween.mjs",
    "importStyle": "{Tween}",
    "description": "Class for creating a tweening animation",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Tween  "
      },
      {
        "tagName": "@license",
        "tagValue": "Tween does not have a license at this time. For licensing contact the author"
      },
      {
        "tagName": "@author",
        "tagValue": "https://github.com/doubleactii"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 274,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "pOtions",
        "description": "The options for the tween animation"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "pOtions.start",
        "description": "The starting properties of the animation"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "pOtions.end",
        "description": "The end properties of the animation"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1000",
        "defaultRaw": 1000,
        "name": "pOtions.duration",
        "description": "The duration of the animation in milliseconds"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "\"linear\"",
        "defaultRaw": "linear",
        "name": "pOtions.easing",
        "description": "The easing function to use for the animation"
      }
    ]
  },
  {
    "__docId__": 275,
    "kind": "method",
    "name": "linear",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween.linear",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      },
      {
        "name": "c",
        "types": [
          "*"
        ]
      },
      {
        "name": "d",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 276,
    "kind": "method",
    "name": "easeInQuad",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween.easeInQuad",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "params": [
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      },
      {
        "name": "c",
        "types": [
          "*"
        ]
      },
      {
        "name": "d",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 277,
    "kind": "method",
    "name": "easeOutQuad",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween.easeOutQuad",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "params": [
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      },
      {
        "name": "c",
        "types": [
          "*"
        ]
      },
      {
        "name": "d",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 278,
    "kind": "method",
    "name": "easeInOutQuad",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween.easeInOutQuad",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      },
      {
        "name": "c",
        "types": [
          "*"
        ]
      },
      {
        "name": "d",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 279,
    "kind": "method",
    "name": "easeInSine",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween.easeInSine",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      },
      {
        "name": "c",
        "types": [
          "*"
        ]
      },
      {
        "name": "d",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 280,
    "kind": "method",
    "name": "easeOutSine",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween.easeOutSine",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "params": [
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      },
      {
        "name": "c",
        "types": [
          "*"
        ]
      },
      {
        "name": "d",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 281,
    "kind": "method",
    "name": "easeInOutSine",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween.easeInOutSine",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "params": [
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      },
      {
        "name": "c",
        "types": [
          "*"
        ]
      },
      {
        "name": "d",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 282,
    "kind": "method",
    "name": "easeInExpo",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween.easeInExpo",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "params": [
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      },
      {
        "name": "c",
        "types": [
          "*"
        ]
      },
      {
        "name": "d",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 283,
    "kind": "method",
    "name": "easeOutExpo",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween.easeOutExpo",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "params": [
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      },
      {
        "name": "c",
        "types": [
          "*"
        ]
      },
      {
        "name": "d",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 284,
    "kind": "method",
    "name": "easeInOutExpo",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween.easeInOutExpo",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "params": [
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      },
      {
        "name": "c",
        "types": [
          "*"
        ]
      },
      {
        "name": "d",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 285,
    "kind": "method",
    "name": "easeInCirc",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween.easeInCirc",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "params": [
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      },
      {
        "name": "c",
        "types": [
          "*"
        ]
      },
      {
        "name": "d",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 286,
    "kind": "method",
    "name": "easeOutCirc",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween.easeOutCirc",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "params": [
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      },
      {
        "name": "c",
        "types": [
          "*"
        ]
      },
      {
        "name": "d",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 287,
    "kind": "method",
    "name": "easeInOutCirc",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween.easeInOutCirc",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "params": [
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      },
      {
        "name": "c",
        "types": [
          "*"
        ]
      },
      {
        "name": "d",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 288,
    "kind": "method",
    "name": "easeInCubic",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween.easeInCubic",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "params": [
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      },
      {
        "name": "c",
        "types": [
          "*"
        ]
      },
      {
        "name": "d",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 289,
    "kind": "method",
    "name": "easeOutCubic",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween.easeOutCubic",
    "access": "public",
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "params": [
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      },
      {
        "name": "c",
        "types": [
          "*"
        ]
      },
      {
        "name": "d",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 290,
    "kind": "method",
    "name": "easeInOutCubic",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween.easeInOutCubic",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "params": [
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      },
      {
        "name": "c",
        "types": [
          "*"
        ]
      },
      {
        "name": "d",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 291,
    "kind": "method",
    "name": "easeInQuart",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween.easeInQuart",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "params": [
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      },
      {
        "name": "c",
        "types": [
          "*"
        ]
      },
      {
        "name": "d",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 292,
    "kind": "method",
    "name": "easeOutQuart",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween.easeOutQuart",
    "access": "public",
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "params": [
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      },
      {
        "name": "c",
        "types": [
          "*"
        ]
      },
      {
        "name": "d",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 293,
    "kind": "method",
    "name": "easeInOutQuart",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween.easeInOutQuart",
    "access": "public",
    "description": null,
    "lineNumber": 82,
    "undocument": true,
    "params": [
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      },
      {
        "name": "c",
        "types": [
          "*"
        ]
      },
      {
        "name": "d",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 294,
    "kind": "method",
    "name": "easeInQuint",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween.easeInQuint",
    "access": "public",
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "params": [
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      },
      {
        "name": "c",
        "types": [
          "*"
        ]
      },
      {
        "name": "d",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 295,
    "kind": "method",
    "name": "easeOutQuint",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween.easeOutQuint",
    "access": "public",
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "params": [
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      },
      {
        "name": "c",
        "types": [
          "*"
        ]
      },
      {
        "name": "d",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 296,
    "kind": "method",
    "name": "easeInOutQuint",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween.easeInOutQuint",
    "access": "public",
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "params": [
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      },
      {
        "name": "c",
        "types": [
          "*"
        ]
      },
      {
        "name": "d",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 297,
    "kind": "method",
    "name": "easeInElastic",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween.easeInElastic",
    "access": "public",
    "description": null,
    "lineNumber": 96,
    "undocument": true,
    "params": [
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      },
      {
        "name": "c",
        "types": [
          "*"
        ]
      },
      {
        "name": "d",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 298,
    "kind": "method",
    "name": "easeOutElastic",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween.easeOutElastic",
    "access": "public",
    "description": null,
    "lineNumber": 116,
    "undocument": true,
    "params": [
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      },
      {
        "name": "c",
        "types": [
          "*"
        ]
      },
      {
        "name": "d",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 299,
    "kind": "method",
    "name": "easeInOutElastic",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween.easeInOutElastic",
    "access": "public",
    "description": null,
    "lineNumber": 136,
    "undocument": true,
    "params": [
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      },
      {
        "name": "c",
        "types": [
          "*"
        ]
      },
      {
        "name": "d",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 300,
    "kind": "method",
    "name": "easeInBack",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween.easeInBack",
    "access": "public",
    "description": null,
    "lineNumber": 157,
    "undocument": true,
    "params": [
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      },
      {
        "name": "c",
        "types": [
          "*"
        ]
      },
      {
        "name": "d",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 301,
    "kind": "method",
    "name": "easeOutBack",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween.easeOutBack",
    "access": "public",
    "description": null,
    "lineNumber": 161,
    "undocument": true,
    "params": [
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      },
      {
        "name": "c",
        "types": [
          "*"
        ]
      },
      {
        "name": "d",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 302,
    "kind": "method",
    "name": "easeInOutBack",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween.easeInOutBack",
    "access": "public",
    "description": null,
    "lineNumber": 165,
    "undocument": true,
    "params": [
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      },
      {
        "name": "c",
        "types": [
          "*"
        ]
      },
      {
        "name": "d",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 303,
    "kind": "method",
    "name": "easeInBounce",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween.easeInBounce",
    "access": "public",
    "description": null,
    "lineNumber": 171,
    "undocument": true,
    "params": [
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      },
      {
        "name": "c",
        "types": [
          "*"
        ]
      },
      {
        "name": "d",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 304,
    "kind": "method",
    "name": "easeOutBounce",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween.easeOutBounce",
    "access": "public",
    "description": null,
    "lineNumber": 175,
    "undocument": true,
    "params": [
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      },
      {
        "name": "c",
        "types": [
          "*"
        ]
      },
      {
        "name": "d",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 305,
    "kind": "method",
    "name": "easeInOutBounce",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween.easeInOutBounce",
    "access": "public",
    "description": null,
    "lineNumber": 195,
    "undocument": true,
    "params": [
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      },
      {
        "name": "c",
        "types": [
          "*"
        ]
      },
      {
        "name": "d",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 306,
    "kind": "method",
    "name": "_clamp",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween._clamp",
    "access": "private",
    "description": "",
    "lineNumber": 207,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} The number clamped between the minimum and maximum values"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pNumber",
        "description": "The number to clamp"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pMin",
        "description": "The minimum number"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pMax",
        "description": "The maximum number"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The number clamped between the minimum and maximum values"
    }
  },
  {
    "__docId__": 307,
    "kind": "method",
    "name": "_hexToRgb",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween._hexToRgb",
    "access": "private",
    "description": "Converts an Hex color value to an array of [r, g, b].",
    "lineNumber": 217,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pHex",
        "description": "The Hex color in the form \"#fff\" or \"#ffffff\" or tagless."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "The array [r, g, b]."
    }
  },
  {
    "__docId__": 308,
    "kind": "method",
    "name": "_rgbToHex",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween._rgbToHex",
    "access": "private",
    "description": "Converts an array of [r, g, b] to an Hex color code.",
    "lineNumber": 235,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "pColorArray",
        "description": "The rgb color array to convert into a hex\nreturn {string} The hex color"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 309,
    "kind": "member",
    "name": "version",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "static": false,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween#version",
    "access": "public",
    "description": "The version of the module.",
    "lineNumber": 243,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 310,
    "kind": "method",
    "name": "_build",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween#_build",
    "access": "private",
    "description": "Builds/Rebuilds the tween object with new info",
    "lineNumber": 251,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pStart",
        "description": "The start object containing the start values"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pEnd",
        "description": "The end object containing the end values"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pDuration",
        "description": "The duration of the effect"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "pEasing",
        "description": "The easing function to use"
      }
    ],
    "return": null
  },
  {
    "__docId__": 311,
    "kind": "member",
    "name": "start",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "static": false,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween#start",
    "access": "public",
    "description": null,
    "lineNumber": 252,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 312,
    "kind": "member",
    "name": "end",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "static": false,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween#end",
    "access": "public",
    "description": null,
    "lineNumber": 253,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 313,
    "kind": "member",
    "name": "duration",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "static": false,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween#duration",
    "access": "public",
    "description": null,
    "lineNumber": 254,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 314,
    "kind": "member",
    "name": "easing",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "static": false,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween#easing",
    "access": "public",
    "description": null,
    "lineNumber": 255,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 315,
    "kind": "member",
    "name": "events",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "static": false,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween#events",
    "access": "public",
    "description": null,
    "lineNumber": 256,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 316,
    "kind": "member",
    "name": "exportedValues",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "static": false,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween#exportedValues",
    "access": "public",
    "description": null,
    "lineNumber": 257,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 317,
    "kind": "member",
    "name": "tweening",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "static": false,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween#tweening",
    "access": "public",
    "description": null,
    "lineNumber": 258,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 318,
    "kind": "member",
    "name": "update",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "static": false,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween#update",
    "access": "public",
    "description": null,
    "lineNumber": 259,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 319,
    "kind": "member",
    "name": "paused",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "static": false,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween#paused",
    "access": "public",
    "description": null,
    "lineNumber": 260,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 320,
    "kind": "member",
    "name": "lastTime",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "static": false,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween#lastTime",
    "access": "public",
    "description": null,
    "lineNumber": 261,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 321,
    "kind": "member",
    "name": "elapsed",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "static": false,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween#elapsed",
    "access": "public",
    "description": null,
    "lineNumber": 262,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 322,
    "kind": "method",
    "name": "build",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween#build",
    "access": "public",
    "description": "",
    "lineNumber": 271,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "pOtions",
        "description": "The options for the tween animation"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "pOtions.start",
        "description": "The starting properties of the animation"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "pOtions.end",
        "description": "The end properties of the animation"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1000",
        "defaultRaw": 1000,
        "name": "pOtions.duration",
        "description": "The duration of the animation in milliseconds"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "\"linear\"",
        "defaultRaw": "linear",
        "name": "pOtions.easing",
        "description": "The easing function to use for the animation"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 323,
    "kind": "method",
    "name": "on",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween#on",
    "access": "public",
    "description": "Attaches a callback to the specified event.",
    "lineNumber": 281,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pEvent",
        "description": "The event to attach the callback to"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "pCallback",
        "description": "The function to be called when the event is triggered"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Tween"
      ],
      "spread": false,
      "description": "The Tween instance"
    }
  },
  {
    "__docId__": 324,
    "kind": "member",
    "name": "animationFrame",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "static": false,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween#animationFrame",
    "access": "public",
    "description": "Update each frame.",
    "lineNumber": 301,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 328,
    "kind": "method",
    "name": "animate",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween#animate",
    "access": "public",
    "description": "Animates the tween by oscillating between the start and end properties.",
    "lineNumber": 351,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "pUpdate",
        "description": "A callback function to update the values during the oscillation."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "pOscillate",
        "description": "A flag to indicate if the tween should oscillate."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Tween"
      ],
      "spread": false,
      "description": "Returns the Tween instance for method chaining."
    }
  },
  {
    "__docId__": 332,
    "kind": "member",
    "name": "oscillating",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "static": false,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween#oscillating",
    "access": "public",
    "description": null,
    "lineNumber": 373,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 333,
    "kind": "method",
    "name": "resume",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween#resume",
    "access": "public",
    "description": "Resumes the tween animation",
    "lineNumber": 385,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Tween} The instance of the Tween object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Tween"
      ],
      "spread": false,
      "description": "The instance of the Tween object"
    },
    "params": []
  },
  {
    "__docId__": 336,
    "kind": "method",
    "name": "pause",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween#pause",
    "access": "public",
    "description": "Pauses the tween animation",
    "lineNumber": 400,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Tween} The instance of the Tween object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Tween"
      ],
      "spread": false,
      "description": "The instance of the Tween object"
    },
    "params": []
  },
  {
    "__docId__": 338,
    "kind": "method",
    "name": "stop",
    "memberof": "src/submodules/Tween/src/tween.mjs~Tween",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Tween/src/tween.mjs~Tween#stop",
    "access": "public",
    "description": "Stops the tween and clears all data.",
    "lineNumber": 412,
    "params": [],
    "return": null
  },
  {
    "__docId__": 345,
    "kind": "file",
    "name": "src/submodules/Utils/src/utils.mjs",
    "content": "import { Logger } from './vendor/logger.min.mjs';\r\n\r\n/**\r\n* A utilities class\r\n* @class UtilsSingleton\r\n* @license Utils is free software, available under the terms of a MIT style License.\r\n* @author https://github.com/doubleactii\r\n*/\r\nclass UtilsSingleton {\r\n\t/**\r\n\t * Object storing all color objects being transitioned at the moment\r\n\t * @private\r\n\t * @type {Object}\r\n\t */\r\n\ttransitions = {};\r\n\t/**\r\n\t * An array storing all the reserved unique IDS\r\n\t * @private\r\n\t * @type {Array}\r\n\t */\r\n\tstoredIDs = [];\r\n\t/**\r\n\t * The version of the module.\r\n\t */\r\n\tversion = \"VERSION_REPLACE_ME\";\r\n\tconstructor() {\r\n        // Create a logger\r\n        /** The logger module this module uses to log errors / logs\r\n         * @private\r\n         * @type {Object}\r\n         */\r\n        this.logger = new Logger();\r\n        this.logger.registerType('Utils-Module', '#ff6600');\r\n\t}\r\n\t/**\r\n\t * Generates a random decimal number between two numbers with a specified number of decimal places.\r\n\t * \r\n\t * @param {number} pNum1 - The first number to use for generating the random decimal number.\r\n\t * @param {number} pNum2 - The second number to use for generating the random decimal number.\r\n\t * @param {number} [pPlaces=1] - The number of decimal places to include in the generated random decimal number. Defaults to 1 if not provided.\r\n\t * @returns {number} A random decimal number between the two numbers with the specified number of decimal places.\r\n\t */\r\n\tdecimalRand(pNum1, pNum2, pPlaces = 1) {\r\n\t\tconst result = Number((Math.random() * (pNum1 - pNum2) + pNum2).toFixed(pPlaces));\r\n\t\treturn result;\r\n\t}\r\n\t/**\r\n\t * Generates a random decimal number between two numbers with a specified number of decimal places.\r\n\t * \r\n\t * @param {number} pNum1 - The first number to use for generating the random decimal number.\r\n\t * @param {number} pNum2 - The second number to use for generating the random decimal number.\r\n\t * @returns {number} A random decimal number between the two numbers with the specified number of decimal places.\r\n\t */\r\n\trand(pNum1, pNum2) {\r\n\t\tconst result = Number((Math.random() * (pNum1 - pNum2) + pNum2));\r\n\t\treturn Math.round(result);\r\n\t}\r\n\t/**\r\n\t * Calculates the percentage of a value relative to a total value.\r\n\t * \r\n\t * @param {number} pValue - The value to calculate the percentage of.\r\n\t * @param {number} pTotalValue - The total value to calculate the percentage relative to.\r\n\t * @returns {number} The percentage of the value relative to the total value.\r\n\t */\r\n\tgetPercentage(pValue, pTotalValue) {\r\n\t\treturn (100 * pValue) / pTotalValue;\r\n\t}\r\n\t/**\r\n\t * Clamps a number between a minimum and maximum value.\r\n\t * \r\n\t * @param {number} pNumber - The number to clamp.\r\n\t * @param {number} [pMin=0] - The minimum value to clamp the number to. Defaults to 0 if not provided.\r\n\t * @param {number} [pMax=1] - The maximum value to clamp the number to. Defaults to 1 if not provided.\r\n\t * @returns {number} The clamped number between the minimum and maximum values.\r\n\t */\r\n\tclamp(pNumber, pMin = 0, pMax = 1) {\r\n\t\treturn Math.max(pMin, Math.min(pNumber, pMax));\r\n\t}\r\n\t/**\r\n\t * Linearly interpolates between two values by a specified amount.\r\n\t * \r\n\t * @param {number} pStart - The start value to interpolate from.\r\n\t * @param {number} pEnd - The end value to interpolate to.\r\n\t * @param {number} pAmount - The amount to interpolate between the start and end values.\r\n\t * @returns {number} The interpolated value between the start and end values based on the specified amount.\r\n\t */\r\n\tlerp(pStart, pEnd, pAmount) {\r\n\t\treturn (1-pAmount)*pStart+pAmount*pEnd;\r\n\t}\r\n\t/**\r\n\t * Linearly interpolates between two values by a specified amount and returns the result as a floored integer.\r\n\t * \r\n\t * @param {number} pStart - The start value to interpolate from.\r\n\t * @param {number} pEnd - The end value to interpolate to.\r\n\t * @param {number} pAmount - The amount to interpolate between the start and end values.\r\n\t * @returns {number} The interpolated value between the start and end values based on the specified amount, rounded down to the nearest integer.\r\n\t */\r\n\tflooredLerp(pStart, pEnd, pAmount) {\r\n\t\treturn Math.floor(this.lerp(pStart, pEnd, pAmount));\r\n\t}\r\n\t/**\r\n\t * Rounds a number to a specified number of decimal places.\r\n\t * \r\n\t * @param {number} pNumber - The number to round.\r\n\t * @param {number} [pPlace=1] - The number of decimal places to round to. Defaults to 1 if not provided.\r\n\t * @returns {number} The rounded number to the specified number of decimal places.\r\n\t */\r\n\tround(pNumber, pPlace=1) {\r\n\t\treturn Math.round(pPlace * pNumber) / pPlace;\r\n\t}\r\n\t/**\r\n\t * Normalizes a value between a minimum and maximum value.\r\n\t * \r\n\t * @param {number} pVal - The value to normalize.\r\n\t * @param {number} pMin - The minimum value for normalization.\r\n\t * @param {number} pMax - The maximum value for normalization.\r\n\t * @returns {number} The normalized value between 0 and 1 based on the input value's position between the minimum and maximum values.\r\n\t * If the difference between pMax and pMin is 0, returns 1 to avoid dividing by zero.\r\n\t */\r\n\tnormalize(pVal, pMin, pMax) {\r\n\t\tif (pMax - pMin === 0) return 1;\r\n\t\treturn (pVal - pMin) / (pMax - pMin);\r\n\t}\r\n\t/**\r\n\t * Normalizes a value between a minimum and maximum value, clamped to the range of -1 to 1.\r\n\t *\r\n\t * @param {number} pVal - The value to normalize.\r\n\t * @param {number} pMin - The minimum value for normalization.\r\n\t * @param {number} pMax - The maximum value for normalization.\r\n\t * @returns {number} The normalized and clamped value between -1 and 1 based on the input value's\r\n\t * position between the minimum and maximum values. If the difference between pMax and pMin is 0,\r\n\t * returns 1 to avoid dividing by zero.\r\n\t */\r\n\tnormalizeRanged(pVal, pMin, pMax) {\r\n\t\tif (pMax - pMin === 0) return 1;\r\n\t\tconst normalizedValue = -((2 * this.normalize(pVal, pMin, pMax)) - 1);\r\n\t\t// Clamp the normalized value to the range of -1 to 1\r\n\t\treturn this.clamp(normalizedValue, -1, 1);\r\n\t};\r\n\t/**\r\n\t * Checks if a value is within a range of minimum and maximum values (inclusive).\r\n\t * \r\n\t * @param {number} pVal - The value to check.\r\n\t * @param {number} pMin - The minimum value of the range to check against.\r\n\t * @param {number} pMax - The maximum value of the range to check against.\r\n\t * @returns {boolean} True if the value is within the range (inclusive), false otherwise.\r\n\t */\r\n\twithin(pVal, pMin, pMax) {\r\n\t\treturn pVal >= pMin && pVal <= pMax;\r\n\t}\r\n\t/**\r\n\t * Formats a number by rounding it to the nearest integer and adding commas to separate thousands places.\r\n\t * \r\n\t * @param {number} pNum - The number to format.\r\n\t * @returns {string} A string representation of the formatted number.\r\n\t */\r\n\tformatIntegerWithCommas(pNum) {\r\n\t\treturn pNum.toFixed().toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\r\n\t}\r\n\t/**\r\n\t * Converts degrees to radians.\r\n\t * \r\n\t * @param {number} pDegrees - The angle in degrees.\r\n\t * @returns {number} The angle in radians.\r\n\t */\r\n\ttoRadians(pDegrees) {\r\n\t\treturn pDegrees * (Math.PI / 180);\r\n\t}\r\n\t/**\r\n\t * Converts radians to degrees.\r\n\t * \r\n\t * @param {number} pRadians - The angle in radians.\r\n\t * @returns {number} The angle in degrees.\r\n\t */\r\n\ttoDegrees(pRadians) {\r\n\t\treturn pRadians * (180 / Math.PI);\r\n\t}\r\n\t/**\r\n\t * Returns a random element from the given array.\r\n\t * \r\n\t * @param {Array} pArray - The input array.\r\n\t * @returns {*} A random element from the array.\r\n\t */\r\n\tpick(pArray) {\r\n\t\tconst randomIndex = Math.floor(Math.random() * pArray.length);\r\n\t\treturn pArray[randomIndex];\r\n\t}\r\n\t/**\r\n\t * Removes properties from an object except those listed in the exclude array.\r\n\t * \r\n\t * @param {object} pObject - The object to remove properties from.\r\n\t * @param {Array} pExclude - The array of property names to exclude from removal.\r\n\t*/\r\n\tremoveProperties(pObject, pExclude) {\r\n\t\tif (typeof(pObject) === 'object') {\r\n\t\t\tfor (const prop in pObject) {\r\n\t\t\t\t// Do not reset these properties.\r\n\t\t\t\tif (Array.isArray(pExclude) && pExclude.includes(prop)) continue;\r\n\t\t\t\tif (pObject.hasOwnProperty(prop)) {\r\n\t\t\t\t\tdelete pObject[prop];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\t\r\n\t}\r\n\t/**\r\n\t * Returns true with probability proportional to the given number.\r\n\t * The higher the number, the higher the chance of returning true.\r\n\t * \r\n\t * @param {number} pChance - The probability value, between 0 and 100 (inclusive).\r\n\t * @returns {boolean} - Returns true or false, based on the probability value.\r\n\t */\r\n\tprob(pChance) {\r\n\t\tif (pChance <= 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (pChance >= 100) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tconst randomNumber = Math.floor(Math.random() * 100) + 1;\r\n\t\treturn randomNumber <= pChance;\r\n\t}\r\n\t/**\r\n\t * Gets the inverse direction of the direction passed\r\n\t * \r\n\t * @param {string} pDirection - The direction to get the inverse of.\r\n\t * @returns {string} The inverse direction\r\n\t */\r\n\tgetInverseDirection(pDirection) {\r\n\t\tswitch (pDirection) {\r\n\t\t\tcase 'north':\r\n\t\t\t\treturn 'south';\r\n\t\t\tcase 'south':\r\n\t\t\t\treturn 'north';\r\n\t\t\tcase 'east':\r\n\t\t\t\treturn 'west';\r\n\t\t\tcase 'west':\r\n\t\t\t\treturn 'east';\r\n\t\t\tcase 'northeast':\r\n\t\t\t\treturn 'southwest';\r\n\t\t\tcase 'northwest':\r\n\t\t\t\treturn 'southeast';\r\n\t\t\tcase 'southeast':\r\n\t\t\t\treturn 'northwest';\r\n\t\t\tcase 'southwest':\r\n\t\t\t\treturn 'northeast';\r\n\t\t\tdefault:\r\n\t\t\t\tthis.logger.prefix('Utils-Module').error(`The direction ${pDirection} is not supported.`);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Calculates the angle (in radians) from a given direction.\r\n\t * \r\n\t * @param {string} pDirection - The direction to calculate the angle from.\r\n\t * @returns {number} The angle (in radians) associated with the given direction.\r\n\t * @throws {Error} Throws an error if the direction is not recognized.\r\n\t */\r\n\tgetAngleFromDirection(pDirection) {\r\n\t\tswitch (pDirection) {\r\n\t\t\tcase 'north':\r\n\t\t\t\treturn Math.PI / 2;\r\n\t\t\tcase 'south':\r\n\t\t\t\treturn (Math.PI * 3) / 2; // Corrected to 270 degrees in radians\r\n\t\t\tcase 'east':\r\n\t\t\t\treturn 0;\r\n\t\t\tcase 'west':\r\n\t\t\t\treturn Math.PI;\r\n\t\t\tcase 'northwest':\r\n\t\t\t\treturn (Math.PI * 3) / 4;\r\n\t\t\tcase 'northeast':\r\n\t\t\t\treturn Math.PI / 4;\r\n\t\t\tcase 'southwest':\r\n\t\t\t\treturn (Math.PI * 5) / 4;\r\n\t\t\tcase 'southeast':\r\n\t\t\t\treturn (Math.PI * 7) / 4;\r\n\t\t\tdefault:\r\n\t\t\t\tthis.logger.prefix('Utils-Module').error(`The direction ${pDirection} is not supported.`);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Centers a rectangle (defined by its dimensions) within a parent rectangle.\r\n\t *\r\n\t * @param {number} pChildWidth - The width of the child rectangle.\r\n\t * @param {number} pChildHeight - The height of the child rectangle.\r\n\t * @param {number} pParentWidth - The width of the parent rectangle.\r\n\t * @param {number} pParentHeight - The height of the parent rectangle.\r\n\t * @param {number} pParentX - The x-coordinate of the parent rectangle.\r\n\t * @param {number} pParentY - The y-coordinate of the parent rectangle.\r\n\t * @returns {Object} An object representing the new coordinates of the centered rectangle: { x: centerX, y: centerY }.\r\n\t *\r\n\t * @example\r\n\t * const childWidth = 50;\r\n\t * const childHeight = 30;\r\n\t * const parentWidth = 100;\r\n\t * const parentHeight = 80;\r\n\t * const parentX = 20;\r\n\t * const parentY = 10;\r\n\t * const centeredCoordinates = centerRectangleOnParent(childWidth, childHeight, parentWidth, parentHeight, parentX, parentY);\r\n\t * // Returns {x: 45, y: 35}\r\n\t */\r\n\tcenterRectangleOnParent(pChildWidth, pChildHeight, pParentWidth, pParentHeight, pParentX, pParentY) {\r\n\t\tconst centerX = pParentX + ((pParentWidth - pChildWidth) / 2);\r\n\t\tconst centerY = pParentY + ((pParentHeight - pChildHeight) / 2);\r\n\t\treturn { x: centerX, y: centerY };\r\n\t}\r\n\t/**\r\n\t * Generates a random angle in radians.\r\n\t * @returns {number} A random angle in radians.\r\n\t */\r\n\tgetRandomAngle() {\r\n\t\treturn Math.random() * (Math.PI * 2); // Random value between 0 and 2*pi (360 degrees)\r\n\t}\r\n\t/**\r\n\t * Gets the angle between two points\r\n\t * \r\n\t * @param {Object} pStartPoint - The starting point\r\n\t * @param {Object} pEndPoint - The ending point\r\n\t * @returns {number} The angle between the starting point and the ending point\r\n\t */\r\n\tgetAngle(pStartPoint, pEndPoint) {\r\n\t\tconst y = pStartPoint.y - pEndPoint.y;\r\n\t\tconst x = pStartPoint.x - pEndPoint.x;\r\n\t\treturn Math.atan2(y, x);\r\n\t}\r\n\t/**\r\n\t * Gets the angle between two points but in VYLO / PIXI coordinate space. Removes 180 degrees from a raw angle\r\n\t * \r\n\t * @param {Object} pStartPoint - The starting point\r\n\t * @param {Object} pEndPoint - The ending point\r\n\t * @returns {number} The angle between the starting point and the ending point\r\n\t */\r\n\tgetAngle2(pStartPoint, pEndPoint) {\r\n\t\tconst y = pStartPoint.y - pEndPoint.y;\r\n\t\tconst x = pStartPoint.x - pEndPoint.x;\r\n\t\treturn (Math.atan2(y, x) - Math.PI) * -1;\r\n\t}\r\n\t/**\r\n\t * Converts a raw angle to be the proper angle in Vylocity. By removing 180 degrees\r\n\t * @param {number} pAngle - The angle to convert.\r\n\t * @returns The converted angle\r\n\t */\r\n\tconvertRaWAngleToVyloCoords(pAngle) {\r\n\t\treturn (pAngle - Math.PI) * -1;\r\n\t}\r\n\t/**\r\n\t * Calculates the Euclidean distance between two points in a two-dimensional space.\r\n\t *\r\n\t * @param {Object} pStartPoint - The starting point with x and y coordinates.\r\n\t * @param {number} pStartPoint.x - The x-coordinate of the starting point.\r\n\t * @param {number} pStartPoint.y - The y-coordinate of the starting point.\r\n\t * @param {Object} pEndPoint - The ending point with x and y coordinates.\r\n\t * @param {number} pEndPoint.x - The x-coordinate of the ending point.\r\n\t * @param {number} pEndPoint.y - The y-coordinate of the ending point.\r\n\t * @returns {number} The Euclidean distance between the two points.\r\n\t *\r\n\t * @example\r\n\t * const startPoint = { x: 1, y: 2 };\r\n\t * const endPoint = { x: 4, y: 6 };\r\n\t * const distance = getDistance(startPoint, endPoint); // 5\r\n\t * // Returns the Euclidean distance between the points (1, 2) and (4, 6).\r\n\t */\r\n\tgetDistance(pStartPoint, pEndPoint) {\r\n\t\tconst y = (pStartPoint.y - pEndPoint.y);\r\n\t\tconst x = (pStartPoint.x - pEndPoint.x);\r\n\t\treturn Math.sqrt((x * x) + (y * y));\r\n\t}\r\n\t/**\r\n\t * Calculates the new position of a point based on distance and angle.\r\n\t *\r\n\t * @param {Object} pPoint - The initial position of the point with x and y coordinates.\r\n\t * @param {number} pPoint.x - The initial x-coordinate of the point.\r\n\t * @param {number} pPoint.y - The initial y-coordinate of the point.\r\n\t * @param {number} pDistance - The distance by which to move the point.\r\n\t * @param {number} pAngle - The angle (in radians) at which to move the point.\r\n\t * @returns {Object} The new position of the point after moving by the specified distance and angle.\r\n\t *\r\n\t * @example\r\n\t * const initialPosition = { x: 10, y: 20 };\r\n\t * const distance = 5;\r\n\t * const angleInRadians = 0.785398; // 45 degrees\r\n\t * const newPosition = calculateNewPositionFromDistanceAndAngle(initialPosition, distance, angleInDegrees);\r\n\t * // Returns the new position of the point after moving by 5 units at a 45-degree angle.\r\n\t */\r\n\tcalculateNewPositionFromDistanceAndAngle(pPoint, pDistance, pAngle) {\r\n\t\tconst newPosition = { x: 0, y: 0 };\r\n\t\tnewPosition.x = pPoint.x - pDistance * Math.cos(pAngle);\r\n\t\tnewPosition.y = pPoint.y - pDistance * Math.sin(pAngle);\r\n\t\treturn newPosition;\r\n\t};\r\n\t/**\r\n\t * Calculates the proportional length based on a current value, a maximum value, and a specified total length.\r\n\t *\r\n\t * @param {number} pCurrent - The current value to be scaled.\r\n\t * @param {number} pMax - The maximum value for scaling.\r\n\t * @param {number} pTotalLength - The specified total length.\r\n\t * @returns {number} The proportional length based on the current value, maximum value, and total length.\r\n\t *\r\n\t * @example\r\n\t * const current = 25;\r\n\t * const max = 50;\r\n\t * const totalLength = 100;\r\n\t * const proportionalLength = calculateProportionalLength(current, max, totalLength); // 50\r\n\t * // Returns the proportional length based on the current value, maximum value, and total length.\r\n\t */\r\n\tcalculateProportionalLength(pCurrent, pMax, pTotalLength) {\r\n\t\treturn (pCurrent / pMax) * pTotalLength;\r\n\t}\r\n\t/**\r\n\t * Calculates the compass direction based on the given angle.\r\n\t *\r\n\t * @param {number} pAngle - The angle in radians.\r\n\t * @returns {string} The compass direction (e.g., 'east', 'southeast', 'south', etc.).\r\n\t *\r\n\t * @example\r\n\t * const angle = Math.PI / 4; // 45 degrees in radians\r\n\t * const direction = getDirection(angle); // Returns 'northeast'\r\n\t */\r\n\tgetDirection(pAngle) {\r\n\t\tconst degree = Math.abs(Math.floor(((pAngle * (180 / Math.PI)) / 45) + 0.5));\r\n\t\t// 0 or 360 degrees: 'east'\r\n\t\t// 45 degrees: 'northeast'\r\n\t\t// 90 degrees: 'north'\r\n\t\t// 135 degrees: 'northwest'\r\n\t\t// 180 degrees: 'west'\r\n\t\t// 225 degrees: 'southwest'\r\n\t\t// 270 degrees: 'south'\r\n\t\t// 315 degrees: 'southeast'\r\n\t\tconst compassDirections = ['east', 'northeast', 'north', 'northwest', 'west', 'southwest', 'south', 'southeast'];\r\n\t\treturn compassDirections[(degree % 8)];\r\n\t}\r\n\t/**\r\n\t * Calculates the linear decay of a variable over time.\r\n\t *\r\n\t * @param {number} pInitialValue - The initial value of the variable.\r\n\t * @param {number} pCurrentTime - The current time at which to calculate the variable value.\r\n\t * @param {number} pMaxTime - The maximum time for the decay process.\r\n\t * @param {number} [pDecayRate=0.5] - The decay rate (default is 0.5).\r\n\t * @returns {number} The remaining value of the variable after linear decay.\r\n\t *\r\n\t * @example\r\n\t * const initialValue = 100;\r\n\t * const currentTime = 50;\r\n\t * const maxTime = 1000;\r\n\t * const decayRate = 0.3;\r\n\t * const remainingValue = linearDecay(initialValue, currentTime, maxTime, decayRate);\r\n\t * // Returns the remaining value after linear decay.\r\n\t */\r\n\tlinearDecay(pInitialValue, pCurrentTime, pMaxTime, pDecayRate = 0.5) {\r\n\t\t// Calculate the variable value at the current time\r\n\t\tconst proportionOfTimePassed = pCurrentTime / pMaxTime;\r\n\t\tconst remainingValue = Math.max(pInitialValue * (1 - (proportionOfTimePassed * pDecayRate)), 1);\r\n\t\treturn remainingValue;\r\n\t}\r\n\t/**\r\n\t * Generates a unique id\r\n\t * \r\n\t * @param {string} pIDLength - The length of the ID to create \r\n\t * @returns A unique ID\r\n\t */\r\n\tgenerateID(pIDLength = 7) {\r\n\t\tconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\t\tconst makeID = function() {\r\n\t\t\tlet ID = '';\r\n\t\t\tfor (let i = 0; i < pIDLength; i++) {\r\n\t\t\t\tID += chars.charAt(Math.floor(Math.random() * chars.length));\r\n\t\t\t}\r\n\t\t\treturn ID;\r\n\t\t}\r\n\t\tlet ID = makeID();\r\n\t\twhile(this.storedIDs.includes(ID)) {\r\n\t\t\tID = makeID();\r\n\t\t}\r\n\t\tthis.storedIDs.push(ID);\r\n\t\treturn ID;\r\n\t}\r\n\t/**\r\n\t * Converts a color in decimal format into hex format\r\n\t * \r\n\t * @param {number} pDecimal - The color in decimal format\r\n\t * @param {number} pChars - The length to make the hex string\r\n\t * @returns The decimal color converted into hex format\r\n\t */\r\n\tdecimalToHex(pDecimal, pChars = 6) {\r\n\t\treturn '#' + (pDecimal + Math.pow(16, pChars)).toString(16).slice(-pChars).toUpperCase();\r\n\t}\r\n\t/**\r\n\t * Add intensity to this color to get a brighter or dimmer effect\r\n\t * \r\n\t * @param {string|number} pColor - Color in hex format or decimal format\r\n\t * @param {number} pPercent - The percent of brightness to add to this color\r\n\t * @returns \r\n\t */\r\n\taddIntensity(pColor, pPercent) {\r\n\t\tconst rgb = this.grabColor(pColor).rgbArray;\r\n\t\tconst r = rgb[0];\r\n\t\tconst g = rgb[1];\r\n\t\tconst b = rgb[2];\r\n\t\tlet rr = 0;\r\n\t\tlet rg = 0;\r\n\t\tlet rb = 0;\r\n\t\tconst black = (r === 0 && g === 0 && b === 0) ? true : false;\r\n\t\tif (r || black) rr = r + Math.floor((255 * pPercent) / 100);\r\n\t\tif (g || black) rg = g + Math.floor((255 * pPercent) / 100);\r\n\t\tif (b || black) rb = b + Math.floor((255 * pPercent) / 100);\r\n\t\treturn this.grabColor(this.clamp(rr, 0, 255), this.clamp(rg, 0, 255), this.clamp(rb, 0, 255)).hex\r\n\t}\r\n\t/**\r\n\t * Converts an RGB color value to a hexadecimal color value.\r\n\t * \r\n\t * @param {number} pR - The red component of the RGB color value (0-255).\r\n\t * @param {number} pG - The green component of the RGB color value (0-255).\r\n\t * @param {number} pB - The blue component of the RGB color value (0-255).\r\n\t*/\r\n\trgbToHex(pR, pG, pB) {\r\n\t\tconst r = this.clamp(pR, 0, 255);\r\n\t\tconst g = this.clamp(pG, 0, 255);\r\n\t\tconst b = this.clamp(pB, 0, 255);\r\n\t\tconst craftString = function(pColor) {\r\n\t\t\treturn pColor.toString(16).padStart(2, '0');\r\n\t\t}\r\n\t\tconst hex = '#' + [r, g, b].map(craftString).join('');\r\n\t\treturn hex;\t\t\r\n\t}\r\n\t/**\r\n\t * Converts a hexadecimal color value to an RGB color value.\r\n\t * \r\n\t * @param {string} pHex - The hexadecimal color value to convert (e.g. \"#FF0000\" for red).\r\n\t * @returns {Array} - An array containing the red, green, and blue components of the RGB color value.\r\n\t*/\r\n\thexToRgb(pHex) {\r\n\t\tpHex = pHex.replace('#', '');\r\n\t\tif (pHex.length === 3) {\r\n\t\t\tpHex = pHex.replace(new RegExp('(.)', 'g'), '$1$1');\r\n\t\t}\r\n\t\tpHex = pHex.match(new RegExp('..', 'g'));\r\n\t\tconst r = this.clamp(parseInt(pHex[0], 16), 0, 255);\r\n\t\tconst g = this.clamp(parseInt(pHex[1], 16), 0, 255);\r\n\t\tconst b = this.clamp(parseInt(pHex[2], 16), 0, 255);\r\n\t\treturn [r, g, b];\r\n\t}\r\n\t/**\r\n\t * Converts RGB color values to a decimal value.\r\n\t * \r\n\t * @param {number} pR - The red component of the RGB color value (0-255).\r\n\t * @param {number} pG - The green component of the RGB color value (0-255).\r\n\t * @param {number} pB - The blue component of the RGB color value (0-255).\r\n\t*/\r\n\trgbToDecimal(pR, pG, pB) {\r\n\t\treturn (pR << 16 | pG << 8 | pB);\r\n\t}\r\n\t/**\r\n\t * Converts a hexadecimal color value to a decimal value.\r\n\t * \r\n\t * @param {string} pHex - The hexadecimal color value to convert (e.g. \"#FF0000\" for red).\r\n\t * @returns {number} - The decimal representation of the hexadecimal color value.\r\n\t*/\r\n\thexToDecimal(pHex) {\r\n\t\tpHex = pHex.replace('#', '');\r\n\t\treturn parseInt(pHex, 16);\r\n\t}\r\n\t/**\r\n\t * Convert a color to different formats or get a random color\r\n\t * \r\n\t * @param {string|number} pSwitch - A hex string representing a color (with or without the tag)\r\n\t * A color formatted in the decimal format. Or the r value of a rgb color.\r\n\t * @param {number} [g] g value of a rgb color\r\n\t * @param {number} [b] b value of a rgb color\r\n\t * @returns {ColorObject} A color object with various different export options.\r\n\t * hex, hexTagless, rgb, rgbArray, rgbObject, rgbNormal, decimal formats.\r\n\t */\r\n\tgrabColor(pSwitch = this.getRandomColor(), pG, pB) {\r\n\t\tlet hex, rgb;\r\n\t\t// Convert rgb to hex\r\n\t\tif (typeof(pSwitch) === 'number' && typeof(pG) === 'number' && typeof(pB) === 'number') {\r\n\t\t\thex = this.rgbToHex(pSwitch, pG, pB);\r\n\t\t} else {\r\n\t\t\t// Convert decimal to hex\r\n\t\t\tif (typeof(pSwitch) === 'number') {\r\n\t\t\t\tpSwitch = this.decimalToHex(pSwitch);\r\n\t\t\t}\r\n\t\t\thex = pSwitch;\r\n\t\t\t// Convert hex to rgb\r\n\t\t\trgb = this.hexToRgb(hex);\r\n\t\t}\r\n\t\treturn { \r\n\t\t\t'hex': hex.toLowerCase(), \r\n\t\t\t'hexTagless': hex.replace('#', '').toLowerCase(), \r\n\t\t\t'rgb': 'rgb('+rgb[0]+','+rgb[1]+','+rgb[2]+')', \r\n\t\t\t'rgbArray': rgb, \r\n\t\t\t'rgbObject': { 'r': rgb[0], 'g': rgb[1], 'b': rgb[2] }, \r\n\t\t\t'rgbNormal': [Math.round(rgb[0]/255 * 100) / 100, Math.round(rgb[1]/255 * 100) / 100, Math.round(rgb[2]/255 * 100) / 100], \r\n\t\t\t'decimal': this.hexToDecimal(hex) \r\n\t\t};\r\n\t}\r\n\t/**\r\n\t * Gets a random color\r\n\t * \r\n\t * @returns {string} A random color in the hex format\r\n\t */\r\n\tgetRandomColor() {\r\n\t\tconst chars = '0123456789ABCDEF';\r\n\t\tlet color = '#';\r\n\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\tcolor += chars[Math.floor(Math.random() * 16)];\r\n\t\t}\r\n\t\treturn color;\r\n\t}\r\n\t/**\r\n\t * Gets a random color between two colors\r\n\t * \r\n\t * @param {number|string} pColor1 - The first color to get a color between\r\n\t * @param {number|string} pColor2 - The second color to get a color between\r\n\t * @param {number} [pAmount=0.5] - The closer the random color will be to either input colors on a range of 0-1\r\n\t * 0 to 0.5 (closer to pColor1)\r\n\t * 0.5 to 1 (closer to pColor2)\r\n\t * @returns {string} A random color in the decimal format\r\n\t */\r\n\tgetRandomColorBetween(pColor1, pColor2, pAmount = 0.5) {\r\n\t\t// u is the amount of the lerp 0-1\r\n\t\treturn this.flooredLerp(this.grabColor(pColor1).decimal, this.grabColor(pColor2).decimal, pAmount);\r\n\t}\r\n\t/**\r\n\t * Transition a color to another color in pDuration time.\r\n\t * \r\n\t * @param {Object} pInstance - The instance to transition it's color property.\r\n\t * pInstance's color will be transitioned either via pInstance.color = newColor\r\n\t * or\r\n\t * pInstance.color.tint = newColor (if the color is defined as an object)\r\n\t * @param {string|number} pStartColor - The start color\r\n\t * @param {string|number} pEndColor - The end color\r\n\t * @param {number} pDuration - The duration of the transition\r\n\t * @param {Function} pIterativeCallback - Callback to call every tick of the transition\r\n\t * @param {Function} pEndCallback - Callback to call at the end of the transition\r\n\t * @returns An ID that references this transition to be passed to cancelTransition to stop an ongoing transition.\r\n\t */\r\n\ttransitionColor(pInstance, pStartColor='#000', pEndColor='#fff', pDuration=1000, pIterativeCallback, pEndCallback) {\r\n\t\t// Cannot use this API on the server\r\n\t\tif (!globalThis.window) return;\r\n\t\tconst iterativeCallback = typeof(pIterativeCallback) === 'function' ? pIterativeCallback : null;\r\n\t\tconst endCallback = typeof(pEndCallback) === 'function' ? pEndCallback : null;\r\n\t\tlet id;\r\n\t\tlet isParticle;\r\n\t\tlet isTintObject;\r\n\r\n\t\tif (pInstance) {\r\n\t\t\tid = pInstance.id ? pInstance.id : this.generateID();\r\n\t\t\tisParticle = (pInstance.type === 'GeneratedParticle');\r\n\t\t\tisTintObject = (typeof(pInstance.color) === 'object' && pInstance.color.constructor === Object ? true : false);\r\n\t\t\tif (this.transitions[id]) this.cancelTransitionColor(id);\r\n\t\t} else {\r\n\t\t\tid = this.generateID();\r\n\t\t}\r\n\t\t\t\r\n\t\tthis.transitions[id] = {\r\n\t\t\t'duration': pDuration,\r\n\t\t\t'timeTracker': isParticle ? pInstance.info.lifetime : 0\r\n\t\t};\r\n\r\n\t\tconst rgbStartColor = this.grabColor(pStartColor).rgbArray;\r\n\t\tconst rgbEndColor = this.grabColor(pEndColor).rgbArray;\r\n\r\n\t\tconst self = this;\r\n\t\tthis.transitions[id].step = (pTimeStamp) => {\r\n\t\t\tif (self.transitions[id]) {\r\n\t\t\t\tif (isParticle) {\r\n\t\t\t\t\tif (pInstance.info) {\r\n\t\t\t\t\t\tif (pInstance.info.owner) {\r\n\t\t\t\t\t\t\tif (pInstance.info.owner.settings.paused) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (self.transitions[id]) this.cancelTransitionColor(id);\r\n\t\t\t\t\t\treturn;\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst now = pTimeStamp;\r\n\t\t\t\tif (!self.transitions[id].lastTime) self.transitions[id].lastTime = now;\r\n\t\t\t\tconst elapsed = now - self.transitions[id].lastTime;\r\n\t\t\t\t// Time tracker is used rather than lastStamp - startStamp because this currently takes into account particles passed in (this will be removed in the future and use the former method)\r\n\t\t\t\tself.transitions[id].timeTracker += elapsed;\r\n\t\t\t\t// The max value of percentage is 1, so we clamp it at 1\r\n\t\t\t\tconst percentage = Math.min(self.transitions[id].timeTracker / self.transitions[id].duration, 1);\r\n\t\t\t\t\r\n\t\t\t\tconst r = parseInt(self.lerp(rgbStartColor[0], rgbEndColor[0], percentage), 10);\r\n\t\t\t\tconst g = parseInt(self.lerp(rgbStartColor[1], rgbEndColor[1], percentage), 10);\r\n\t\t\t\tconst b = parseInt(self.lerp(rgbStartColor[2], rgbEndColor[2], percentage), 10);\r\n\t\t\t\tconst color = self.grabColor(r, g, b);\r\n\r\n\t\t\t\tif (iterativeCallback) iterativeCallback(color);\r\n\r\n\t\t\t\tif (pInstance) {\r\n\t\t\t\t\tif (isTintObject) {\r\n\t\t\t\t\t\tpInstance.color.tint = color.decimal;\r\n\t\t\t\t\t\tpInstance.color = pInstance.color;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpInstance.color = color.hex;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (percentage >= 1 || self.transitions[id].timeTracker >= pDuration) {\r\n\t\t\t\t\tif (self.transitions[id]) this.cancelTransitionColor(id);\r\n\t\t\t\t\tif (endCallback) endCallback(color);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tself.transitions[id].req = globalThis.requestAnimationFrame(self.transitions[id].step);\r\n\t\t\t\tself.transitions[id].lastTime = now;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.transitions[id].req = globalThis.requestAnimationFrame(this.transitions[id].step);\r\n\t\treturn id;\r\n\t}\r\n\t/**\r\n\t * Cancels an ongoing transition\r\n\t * \r\n\t * @param {string} pID - The ID of the ongoing transition to cancel\r\n\t */\r\n\tcancelTransitionColor(pID) {\r\n\t\tif (this.transitions[pID]) {\r\n\t\t\tglobalThis.cancelAnimationFrame(this.transitions[pID].req);\r\n\t\t\tdelete this.transitions[pID];\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Calculates the position of a point after rotating it around a center point by a given angle.\r\n\t * \r\n\t * @param {object} pRect - The rectangle object to rotate the point around.\r\n\t * pRect.anchor.x and pRecent.anchor.y is used to control the \"center\" of the rectangle.\r\n\t * @param {number} pTheta - The angle (in radians) to rotate the point by.\r\n\t * @param {object} pPoint - The point object to rotate around the center of the rectangle.\r\n\t * @param {number} pPoint.x - The x-coordinate of the point to rotate.\r\n\t * @param {number} pPoint.y - The y-coordinate of the point to rotate.\r\n\t * @returns {object} An object with the rotated point's new x and y coordinates.\r\n\t */\r\n\tgetPointRotated(pRect, pTheta, pPoint) {\r\n\t\t// cx, cy - center of square coordinates\r\n\t\t// x, y - coordinates of a corner point of the square\r\n\t\t// theta is the angle of rotation\r\n\t\tconst cx = pRect.x + pRect.width * (typeof(pRect.anchor) === 'object' && pRect.anchor.x ? pRect.anchor.x : 0.5);\r\n\t\tconst cy = pRect.y + pRect.height * (typeof(pRect.anchor) === 'object' && pRect.anchor.y ? pRect.anchor.y : 0.5);\r\n\r\n\t\t// translate point to origin\r\n\t\tconst tempX = pPoint.x - cx;\r\n\t\tconst tempY = pPoint.y - cy;\r\n\r\n\t\t// now apply rotation\r\n\t\tconst rotatedX = tempX*Math.cos(pTheta) - tempY*(-Math.sin(pTheta));\r\n\t\tconst rotatedY = tempX*(-Math.sin(pTheta)) + tempY*Math.cos(pTheta);\r\n\r\n\t\t// translate back\r\n\t\tconst x = rotatedX + cx;\r\n\t\tconst y = rotatedY + cy;\r\n\t\treturn { 'x': x, 'y': y };\r\n\t}\r\n\t/**\r\n\t * Calculates the position of a rectangle's corner points and center point after rotating it around a center point by a given angle.\r\n\t * \r\n\t * @param {object} pRect - The rectangle object to rotate the point around.\r\n\t * pRect.anchor.x and pRecent.anchor.y is used to control the \"center\" of the rectangle.\r\n\t * @param {number} pTheta - The angle (in radians) to rotate the point by.\r\n\t * @returns {object} An object with the rotated rectangle's new corner points and center points.\r\n\t */\r\n\tgetPointsOfRotatedRect(pRect, pTheta) {\r\n\t\tconst tl = this.getPointRotated(pRect, pTheta, { 'x': pRect.x, 'y': pRect.y });\r\n\t\tconst tr = this.getPointRotated(pRect, pTheta, { 'x': pRect.x + pRect.width, 'y': pRect.y });\r\n\t\tconst bl = this.getPointRotated(pRect, pTheta, { 'x': pRect.x, 'y': pRect.y + pRect.height });\r\n\t\tconst br = this.getPointRotated(pRect, pTheta, { 'x': pRect.x + pRect.width, 'y': pRect.y + pRect.height });\r\n\t\tconst center = this.getPointRotated(pRect, pTheta, { 'x': pRect.x + pRect.width / 2, 'y': pRect.y + pRect.height / 2 });\r\n\t\treturn { 'tl': tl, 'tr': tr, 'bl': bl, 'br': br, 'center': center };\r\n\t}\r\n\t/**\r\n\t * Calculate the icon offset to compensate for a non-zero anchor.\r\n\t *\r\n\t * @param {Object} [pIconSize] - The size of the icon with properties `.x` and `.y`.\r\n\t * @param {number} [pIconSize.width=32] - The size of the icon's width.\r\n\t * @param {number} [pIconSize.height=32] - The size of the icon's height'.\r\n\t * @param {Object} [pAnchor] - The anchor point with properties `.x` and `.y`.\r\n\t * @param {number} [pAnchor.x=0.5] - The anchor's x value.\r\n\t * @param {number} [pAnchor.y=0.5] - The anchor's y value.\r\n\t * @param {Object} [pScale] - The scale factor applied to the object with properties `.x` and `.y`.\r\n\t * @param {number} [pScale.x=1] - The scale's y value.\r\n\t * @param {number} [pScale.y=1] - The scale's y value.\r\n\t * @returns {Object} - The calculated icon offset with properties `.x` and `.y`.\r\n\t */\r\n\tcalculateIconOffset(pIconSize = { width: 32, height: 32 }, pAnchor = { x: 0.5, y: 0.5 }, pScale= { x: 1, y: 1}) {\r\n\t\tconst scaledSize = {\r\n\t\t\tx: pIconSize.width * pScale.x,\r\n\t\t\ty: pIconSize.height * pScale.y,\r\n\t\t};\r\n\r\n\t\tconst offset = {\r\n\t\t\tx: pAnchor.x * (scaledSize.x - pIconSize.width),\r\n\t\t\ty: pAnchor.y * (scaledSize.y - pIconSize.height),\r\n\t\t};\r\n\r\n\t\treturn {\r\n\t\t\tx: offset.x,\r\n\t\t\ty: offset.y,\r\n\t\t};\r\n\t}\r\n}\r\nexport const Utils = new UtilsSingleton();\r\n",
    "static": true,
    "longname": "C:/Users/jared/Documents/Github/Core/src/submodules/Utils/src/utils.mjs",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 346,
    "kind": "variable",
    "name": "Utils",
    "memberof": "src/submodules/Utils/src/utils.mjs",
    "static": true,
    "longname": "src/submodules/Utils/src/utils.mjs~Utils",
    "access": "public",
    "export": true,
    "importPath": "core/src/submodules/Utils/src/utils.mjs",
    "importStyle": "{Utils}",
    "description": null,
    "lineNumber": 803,
    "undocument": true,
    "type": {
      "types": [
        "src/submodules/Utils/src/utils.mjs~UtilsSingleton"
      ]
    }
  },
  {
    "__docId__": 347,
    "kind": "class",
    "name": "UtilsSingleton",
    "memberof": "src/submodules/Utils/src/utils.mjs",
    "static": true,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "access": "public",
    "export": true,
    "importPath": "core/src/submodules/Utils/src/utils.mjs",
    "importStyle": null,
    "description": "A utilities class",
    "lineNumber": 9,
    "pseudoExport": true,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "UtilsSingleton"
      },
      {
        "tagName": "@license",
        "tagValue": "Utils is free software, available under the terms of a MIT style License."
      },
      {
        "tagName": "@author",
        "tagValue": "https://github.com/doubleactii"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 348,
    "kind": "member",
    "name": "transitions",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#transitions",
    "access": "private",
    "description": "Object storing all color objects being transitioned at the moment",
    "lineNumber": 15,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 349,
    "kind": "member",
    "name": "storedIDs",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#storedIDs",
    "access": "private",
    "description": "An array storing all the reserved unique IDS",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 350,
    "kind": "member",
    "name": "version",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#version",
    "access": "public",
    "description": "The version of the module.",
    "lineNumber": 25,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 351,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 352,
    "kind": "member",
    "name": "logger",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#logger",
    "access": "private",
    "description": "The logger module this module uses to log errors / logs",
    "lineNumber": 32,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 353,
    "kind": "method",
    "name": "decimalRand",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#decimalRand",
    "access": "public",
    "description": "Generates a random decimal number between two numbers with a specified number of decimal places.",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} A random decimal number between the two numbers with the specified number of decimal places."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pNum1",
        "description": "The first number to use for generating the random decimal number."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pNum2",
        "description": "The second number to use for generating the random decimal number."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1",
        "defaultRaw": 1,
        "name": "pPlaces",
        "description": "The number of decimal places to include in the generated random decimal number. Defaults to 1 if not provided."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "A random decimal number between the two numbers with the specified number of decimal places."
    }
  },
  {
    "__docId__": 354,
    "kind": "method",
    "name": "rand",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#rand",
    "access": "public",
    "description": "Generates a random decimal number between two numbers with a specified number of decimal places.",
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} A random decimal number between the two numbers with the specified number of decimal places."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pNum1",
        "description": "The first number to use for generating the random decimal number."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pNum2",
        "description": "The second number to use for generating the random decimal number."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "A random decimal number between the two numbers with the specified number of decimal places."
    }
  },
  {
    "__docId__": 355,
    "kind": "method",
    "name": "getPercentage",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#getPercentage",
    "access": "public",
    "description": "Calculates the percentage of a value relative to a total value.",
    "lineNumber": 65,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} The percentage of the value relative to the total value."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pValue",
        "description": "The value to calculate the percentage of."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pTotalValue",
        "description": "The total value to calculate the percentage relative to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The percentage of the value relative to the total value."
    }
  },
  {
    "__docId__": 356,
    "kind": "method",
    "name": "clamp",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#clamp",
    "access": "public",
    "description": "Clamps a number between a minimum and maximum value.",
    "lineNumber": 76,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} The clamped number between the minimum and maximum values."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pNumber",
        "description": "The number to clamp."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "pMin",
        "description": "The minimum value to clamp the number to. Defaults to 0 if not provided."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1",
        "defaultRaw": 1,
        "name": "pMax",
        "description": "The maximum value to clamp the number to. Defaults to 1 if not provided."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The clamped number between the minimum and maximum values."
    }
  },
  {
    "__docId__": 357,
    "kind": "method",
    "name": "lerp",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#lerp",
    "access": "public",
    "description": "Linearly interpolates between two values by a specified amount.",
    "lineNumber": 87,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} The interpolated value between the start and end values based on the specified amount."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pStart",
        "description": "The start value to interpolate from."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pEnd",
        "description": "The end value to interpolate to."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pAmount",
        "description": "The amount to interpolate between the start and end values."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The interpolated value between the start and end values based on the specified amount."
    }
  },
  {
    "__docId__": 358,
    "kind": "method",
    "name": "flooredLerp",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#flooredLerp",
    "access": "public",
    "description": "Linearly interpolates between two values by a specified amount and returns the result as a floored integer.",
    "lineNumber": 98,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} The interpolated value between the start and end values based on the specified amount, rounded down to the nearest integer."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pStart",
        "description": "The start value to interpolate from."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pEnd",
        "description": "The end value to interpolate to."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pAmount",
        "description": "The amount to interpolate between the start and end values."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The interpolated value between the start and end values based on the specified amount, rounded down to the nearest integer."
    }
  },
  {
    "__docId__": 359,
    "kind": "method",
    "name": "round",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#round",
    "access": "public",
    "description": "Rounds a number to a specified number of decimal places.",
    "lineNumber": 108,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} The rounded number to the specified number of decimal places."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pNumber",
        "description": "The number to round."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1",
        "defaultRaw": 1,
        "name": "pPlace",
        "description": "The number of decimal places to round to. Defaults to 1 if not provided."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The rounded number to the specified number of decimal places."
    }
  },
  {
    "__docId__": 360,
    "kind": "method",
    "name": "normalize",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#normalize",
    "access": "public",
    "description": "Normalizes a value between a minimum and maximum value.",
    "lineNumber": 120,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} The normalized value between 0 and 1 based on the input value's position between the minimum and maximum values.\nIf the difference between pMax and pMin is 0, returns 1 to avoid dividing by zero."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pVal",
        "description": "The value to normalize."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pMin",
        "description": "The minimum value for normalization."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pMax",
        "description": "The maximum value for normalization."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The normalized value between 0 and 1 based on the input value's position between the minimum and maximum values.\nIf the difference between pMax and pMin is 0, returns 1 to avoid dividing by zero."
    }
  },
  {
    "__docId__": 361,
    "kind": "method",
    "name": "normalizeRanged",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#normalizeRanged",
    "access": "public",
    "description": "Normalizes a value between a minimum and maximum value, clamped to the range of -1 to 1.",
    "lineNumber": 134,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} The normalized and clamped value between -1 and 1 based on the input value's\nposition between the minimum and maximum values. If the difference between pMax and pMin is 0,\nreturns 1 to avoid dividing by zero."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pVal",
        "description": "The value to normalize."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pMin",
        "description": "The minimum value for normalization."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pMax",
        "description": "The maximum value for normalization."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The normalized and clamped value between -1 and 1 based on the input value's\nposition between the minimum and maximum values. If the difference between pMax and pMin is 0,\nreturns 1 to avoid dividing by zero."
    }
  },
  {
    "__docId__": 362,
    "kind": "method",
    "name": "within",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#within",
    "access": "public",
    "description": "Checks if a value is within a range of minimum and maximum values (inclusive).",
    "lineNumber": 148,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} True if the value is within the range (inclusive), false otherwise."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pVal",
        "description": "The value to check."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pMin",
        "description": "The minimum value of the range to check against."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pMax",
        "description": "The maximum value of the range to check against."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "True if the value is within the range (inclusive), false otherwise."
    }
  },
  {
    "__docId__": 363,
    "kind": "method",
    "name": "formatIntegerWithCommas",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#formatIntegerWithCommas",
    "access": "public",
    "description": "Formats a number by rounding it to the nearest integer and adding commas to separate thousands places.",
    "lineNumber": 157,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} A string representation of the formatted number."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pNum",
        "description": "The number to format."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "A string representation of the formatted number."
    }
  },
  {
    "__docId__": 364,
    "kind": "method",
    "name": "toRadians",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#toRadians",
    "access": "public",
    "description": "Converts degrees to radians.",
    "lineNumber": 166,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} The angle in radians."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pDegrees",
        "description": "The angle in degrees."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The angle in radians."
    }
  },
  {
    "__docId__": 365,
    "kind": "method",
    "name": "toDegrees",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#toDegrees",
    "access": "public",
    "description": "Converts radians to degrees.",
    "lineNumber": 175,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} The angle in degrees."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pRadians",
        "description": "The angle in radians."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The angle in degrees."
    }
  },
  {
    "__docId__": 366,
    "kind": "method",
    "name": "pick",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#pick",
    "access": "public",
    "description": "Returns a random element from the given array.",
    "lineNumber": 184,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*} A random element from the array."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "pArray",
        "description": "The input array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "A random element from the array."
    }
  },
  {
    "__docId__": 367,
    "kind": "method",
    "name": "removeProperties",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#removeProperties",
    "access": "public",
    "description": "Removes properties from an object except those listed in the exclude array.",
    "lineNumber": 194,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "pObject",
        "description": "The object to remove properties from."
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "pExclude",
        "description": "The array of property names to exclude from removal."
      }
    ],
    "return": null
  },
  {
    "__docId__": 368,
    "kind": "method",
    "name": "prob",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#prob",
    "access": "public",
    "description": "Returns true with probability proportional to the given number.\nThe higher the number, the higher the chance of returning true.",
    "lineNumber": 212,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} - Returns true or false, based on the probability value."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pChance",
        "description": "The probability value, between 0 and 100 (inclusive)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Returns true or false, based on the probability value."
    }
  },
  {
    "__docId__": 369,
    "kind": "method",
    "name": "getInverseDirection",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#getInverseDirection",
    "access": "public",
    "description": "Gets the inverse direction of the direction passed",
    "lineNumber": 228,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} The inverse direction"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pDirection",
        "description": "The direction to get the inverse of."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "The inverse direction"
    }
  },
  {
    "__docId__": 370,
    "kind": "method",
    "name": "getAngleFromDirection",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#getAngleFromDirection",
    "access": "public",
    "description": "Calculates the angle (in radians) from a given direction.",
    "lineNumber": 257,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} The angle (in radians) associated with the given direction."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pDirection",
        "description": "The direction to calculate the angle from."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The angle (in radians) associated with the given direction."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "Throws an error if the direction is not recognized."
      }
    ]
  },
  {
    "__docId__": 371,
    "kind": "method",
    "name": "centerRectangleOnParent",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#centerRectangleOnParent",
    "access": "public",
    "description": "Centers a rectangle (defined by its dimensions) within a parent rectangle.",
    "examples": [
      "const childWidth = 50;\nconst childHeight = 30;\nconst parentWidth = 100;\nconst parentHeight = 80;\nconst parentX = 20;\nconst parentY = 10;\nconst centeredCoordinates = centerRectangleOnParent(childWidth, childHeight, parentWidth, parentHeight, parentX, parentY);\n// Returns {x: 45, y: 35}"
    ],
    "lineNumber": 300,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} An object representing the new coordinates of the centered rectangle: { x: centerX, y: centerY }."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pChildWidth",
        "description": "The width of the child rectangle."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pChildHeight",
        "description": "The height of the child rectangle."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pParentWidth",
        "description": "The width of the parent rectangle."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pParentHeight",
        "description": "The height of the parent rectangle."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pParentX",
        "description": "The x-coordinate of the parent rectangle."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pParentY",
        "description": "The y-coordinate of the parent rectangle."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "An object representing the new coordinates of the centered rectangle: { x: centerX, y: centerY }."
    }
  },
  {
    "__docId__": 372,
    "kind": "method",
    "name": "getRandomAngle",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#getRandomAngle",
    "access": "public",
    "description": "Generates a random angle in radians.",
    "lineNumber": 309,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} A random angle in radians."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "A random angle in radians."
    },
    "params": []
  },
  {
    "__docId__": 373,
    "kind": "method",
    "name": "getAngle",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#getAngle",
    "access": "public",
    "description": "Gets the angle between two points",
    "lineNumber": 319,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} The angle between the starting point and the ending point"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pStartPoint",
        "description": "The starting point"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pEndPoint",
        "description": "The ending point"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The angle between the starting point and the ending point"
    }
  },
  {
    "__docId__": 374,
    "kind": "method",
    "name": "getAngle2",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#getAngle2",
    "access": "public",
    "description": "Gets the angle between two points but in VYLO / PIXI coordinate space. Removes 180 degrees from a raw angle",
    "lineNumber": 331,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} The angle between the starting point and the ending point"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pStartPoint",
        "description": "The starting point"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pEndPoint",
        "description": "The ending point"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The angle between the starting point and the ending point"
    }
  },
  {
    "__docId__": 375,
    "kind": "method",
    "name": "convertRaWAngleToVyloCoords",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#convertRaWAngleToVyloCoords",
    "access": "public",
    "description": "Converts a raw angle to be the proper angle in Vylocity. By removing 180 degrees",
    "lineNumber": 341,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "The converted angle"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pAngle",
        "description": "The angle to convert."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "The converted angle"
    }
  },
  {
    "__docId__": 376,
    "kind": "method",
    "name": "getDistance",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#getDistance",
    "access": "public",
    "description": "Calculates the Euclidean distance between two points in a two-dimensional space.",
    "examples": [
      "const startPoint = { x: 1, y: 2 };\nconst endPoint = { x: 4, y: 6 };\nconst distance = getDistance(startPoint, endPoint); // 5\n// Returns the Euclidean distance between the points (1, 2) and (4, 6)."
    ],
    "lineNumber": 361,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} The Euclidean distance between the two points."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pStartPoint",
        "description": "The starting point with x and y coordinates."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pStartPoint.x",
        "description": "The x-coordinate of the starting point."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pStartPoint.y",
        "description": "The y-coordinate of the starting point."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pEndPoint",
        "description": "The ending point with x and y coordinates."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pEndPoint.x",
        "description": "The x-coordinate of the ending point."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pEndPoint.y",
        "description": "The y-coordinate of the ending point."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The Euclidean distance between the two points."
    }
  },
  {
    "__docId__": 377,
    "kind": "method",
    "name": "calculateNewPositionFromDistanceAndAngle",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#calculateNewPositionFromDistanceAndAngle",
    "access": "public",
    "description": "Calculates the new position of a point based on distance and angle.",
    "examples": [
      "const initialPosition = { x: 10, y: 20 };\nconst distance = 5;\nconst angleInRadians = 0.785398; // 45 degrees\nconst newPosition = calculateNewPositionFromDistanceAndAngle(initialPosition, distance, angleInDegrees);\n// Returns the new position of the point after moving by 5 units at a 45-degree angle."
    ],
    "lineNumber": 383,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} The new position of the point after moving by the specified distance and angle."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pPoint",
        "description": "The initial position of the point with x and y coordinates."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pPoint.x",
        "description": "The initial x-coordinate of the point."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pPoint.y",
        "description": "The initial y-coordinate of the point."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pDistance",
        "description": "The distance by which to move the point."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pAngle",
        "description": "The angle (in radians) at which to move the point."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The new position of the point after moving by the specified distance and angle."
    }
  },
  {
    "__docId__": 378,
    "kind": "method",
    "name": "calculateProportionalLength",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#calculateProportionalLength",
    "access": "public",
    "description": "Calculates the proportional length based on a current value, a maximum value, and a specified total length.",
    "examples": [
      "const current = 25;\nconst max = 50;\nconst totalLength = 100;\nconst proportionalLength = calculateProportionalLength(current, max, totalLength); // 50\n// Returns the proportional length based on the current value, maximum value, and total length."
    ],
    "lineNumber": 404,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} The proportional length based on the current value, maximum value, and total length."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pCurrent",
        "description": "The current value to be scaled."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pMax",
        "description": "The maximum value for scaling."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pTotalLength",
        "description": "The specified total length."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The proportional length based on the current value, maximum value, and total length."
    }
  },
  {
    "__docId__": 379,
    "kind": "method",
    "name": "getDirection",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#getDirection",
    "access": "public",
    "description": "Calculates the compass direction based on the given angle.",
    "examples": [
      "const angle = Math.PI / 4; // 45 degrees in radians\nconst direction = getDirection(angle); // Returns 'northeast'"
    ],
    "lineNumber": 417,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} The compass direction (e.g., 'east', 'southeast', 'south', etc.)."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pAngle",
        "description": "The angle in radians."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "The compass direction (e.g., 'east', 'southeast', 'south', etc.)."
    }
  },
  {
    "__docId__": 380,
    "kind": "method",
    "name": "linearDecay",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#linearDecay",
    "access": "public",
    "description": "Calculates the linear decay of a variable over time.",
    "examples": [
      "const initialValue = 100;\nconst currentTime = 50;\nconst maxTime = 1000;\nconst decayRate = 0.3;\nconst remainingValue = linearDecay(initialValue, currentTime, maxTime, decayRate);\n// Returns the remaining value after linear decay."
    ],
    "lineNumber": 447,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} The remaining value of the variable after linear decay."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pInitialValue",
        "description": "The initial value of the variable."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pCurrentTime",
        "description": "The current time at which to calculate the variable value."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pMaxTime",
        "description": "The maximum time for the decay process."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0.5",
        "defaultRaw": 0.5,
        "name": "pDecayRate",
        "description": "The decay rate (default is 0.5)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The remaining value of the variable after linear decay."
    }
  },
  {
    "__docId__": 381,
    "kind": "method",
    "name": "generateID",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#generateID",
    "access": "public",
    "description": "Generates a unique id",
    "lineNumber": 459,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "A unique ID"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pIDLength",
        "description": "The length of the ID to create"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "A unique ID"
    }
  },
  {
    "__docId__": 382,
    "kind": "method",
    "name": "decimalToHex",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#decimalToHex",
    "access": "public",
    "description": "Converts a color in decimal format into hex format",
    "lineNumber": 482,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "The decimal color converted into hex format"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pDecimal",
        "description": "The color in decimal format"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pChars",
        "description": "The length to make the hex string"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "The decimal color converted into hex format"
    }
  },
  {
    "__docId__": 383,
    "kind": "method",
    "name": "addIntensity",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#addIntensity",
    "access": "public",
    "description": "Add intensity to this color to get a brighter or dimmer effect",
    "lineNumber": 492,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pColor",
        "description": "Color in hex format or decimal format"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pPercent",
        "description": "The percent of brightness to add to this color"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 384,
    "kind": "method",
    "name": "rgbToHex",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#rgbToHex",
    "access": "public",
    "description": "Converts an RGB color value to a hexadecimal color value.",
    "lineNumber": 513,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pR",
        "description": "The red component of the RGB color value (0-255)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pG",
        "description": "The green component of the RGB color value (0-255)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pB",
        "description": "The blue component of the RGB color value (0-255)."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 385,
    "kind": "method",
    "name": "hexToRgb",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#hexToRgb",
    "access": "public",
    "description": "Converts a hexadecimal color value to an RGB color value.",
    "lineNumber": 529,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array} - An array containing the red, green, and blue components of the RGB color value."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pHex",
        "description": "The hexadecimal color value to convert (e.g. \"#FF0000\" for red)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "An array containing the red, green, and blue components of the RGB color value."
    }
  },
  {
    "__docId__": 386,
    "kind": "method",
    "name": "rgbToDecimal",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#rgbToDecimal",
    "access": "public",
    "description": "Converts RGB color values to a decimal value.",
    "lineNumber": 547,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pR",
        "description": "The red component of the RGB color value (0-255)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pG",
        "description": "The green component of the RGB color value (0-255)."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pB",
        "description": "The blue component of the RGB color value (0-255)."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 387,
    "kind": "method",
    "name": "hexToDecimal",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#hexToDecimal",
    "access": "public",
    "description": "Converts a hexadecimal color value to a decimal value.",
    "lineNumber": 556,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} - The decimal representation of the hexadecimal color value."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pHex",
        "description": "The hexadecimal color value to convert (e.g. \"#FF0000\" for red)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The decimal representation of the hexadecimal color value."
    }
  },
  {
    "__docId__": 388,
    "kind": "method",
    "name": "grabColor",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#grabColor",
    "access": "public",
    "description": "Convert a color to different formats or get a random color",
    "lineNumber": 570,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ColorObject} A color object with various different export options.\nhex, hexTagless, rgb, rgbArray, rgbObject, rgbNormal, decimal formats."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pSwitch",
        "description": "A hex string representing a color (with or without the tag)\nA color formatted in the decimal format. Or the r value of a rgb color."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "g",
        "description": "g value of a rgb color"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "b",
        "description": "b value of a rgb color"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ColorObject"
      ],
      "spread": false,
      "description": "A color object with various different export options.\nhex, hexTagless, rgb, rgbArray, rgbObject, rgbNormal, decimal formats."
    }
  },
  {
    "__docId__": 389,
    "kind": "method",
    "name": "getRandomColor",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#getRandomColor",
    "access": "public",
    "description": "Gets a random color",
    "lineNumber": 599,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} A random color in the hex format"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "A random color in the hex format"
    },
    "params": []
  },
  {
    "__docId__": 390,
    "kind": "method",
    "name": "getRandomColorBetween",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#getRandomColorBetween",
    "access": "public",
    "description": "Gets a random color between two colors",
    "lineNumber": 617,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} A random color in the decimal format"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pColor1",
        "description": "The first color to get a color between"
      },
      {
        "nullable": null,
        "types": [
          "number",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pColor2",
        "description": "The second color to get a color between"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0.5",
        "defaultRaw": 0.5,
        "name": "pAmount",
        "description": "The closer the random color will be to either input colors on a range of 0-1\n0 to 0.5 (closer to pColor1)\n0.5 to 1 (closer to pColor2)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "A random color in the decimal format"
    }
  },
  {
    "__docId__": 391,
    "kind": "method",
    "name": "transitionColor",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#transitionColor",
    "access": "public",
    "description": "Transition a color to another color in pDuration time.",
    "lineNumber": 635,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "An ID that references this transition to be passed to cancelTransition to stop an ongoing transition."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pInstance",
        "description": "The instance to transition it's color property.\npInstance's color will be transitioned either via pInstance.color = newColor\nor\npInstance.color.tint = newColor (if the color is defined as an object)"
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pStartColor",
        "description": "The start color"
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pEndColor",
        "description": "The end color"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pDuration",
        "description": "The duration of the transition"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "pIterativeCallback",
        "description": "Callback to call every tick of the transition"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "pEndCallback",
        "description": "Callback to call at the end of the transition"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "An ID that references this transition to be passed to cancelTransition to stop an ongoing transition."
    }
  },
  {
    "__docId__": 392,
    "kind": "method",
    "name": "cancelTransitionColor",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#cancelTransitionColor",
    "access": "public",
    "description": "Cancels an ongoing transition",
    "lineNumber": 719,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pID",
        "description": "The ID of the ongoing transition to cancel"
      }
    ],
    "return": null
  },
  {
    "__docId__": 393,
    "kind": "method",
    "name": "getPointRotated",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#getPointRotated",
    "access": "public",
    "description": "Calculates the position of a point after rotating it around a center point by a given angle.",
    "lineNumber": 736,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} An object with the rotated point's new x and y coordinates."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "pRect",
        "description": "The rectangle object to rotate the point around.\npRect.anchor.x and pRecent.anchor.y is used to control the \"center\" of the rectangle."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pTheta",
        "description": "The angle (in radians) to rotate the point by."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "pPoint",
        "description": "The point object to rotate around the center of the rectangle."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pPoint.x",
        "description": "The x-coordinate of the point to rotate."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pPoint.y",
        "description": "The y-coordinate of the point to rotate."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "An object with the rotated point's new x and y coordinates."
    }
  },
  {
    "__docId__": 394,
    "kind": "method",
    "name": "getPointsOfRotatedRect",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#getPointsOfRotatedRect",
    "access": "public",
    "description": "Calculates the position of a rectangle's corner points and center point after rotating it around a center point by a given angle.",
    "lineNumber": 764,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} An object with the rotated rectangle's new corner points and center points."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "pRect",
        "description": "The rectangle object to rotate the point around.\npRect.anchor.x and pRecent.anchor.y is used to control the \"center\" of the rectangle."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pTheta",
        "description": "The angle (in radians) to rotate the point by."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "An object with the rotated rectangle's new corner points and center points."
    }
  },
  {
    "__docId__": 395,
    "kind": "method",
    "name": "calculateIconOffset",
    "memberof": "src/submodules/Utils/src/utils.mjs~UtilsSingleton",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/submodules/Utils/src/utils.mjs~UtilsSingleton#calculateIconOffset",
    "access": "public",
    "description": "Calculate the icon offset to compensate for a non-zero anchor.",
    "lineNumber": 786,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} - The calculated icon offset with properties `.x` and `.y`."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "pIconSize",
        "description": "The size of the icon with properties `.x` and `.y`."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "32",
        "defaultRaw": 32,
        "name": "pIconSize.width",
        "description": "The size of the icon's width."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "32",
        "defaultRaw": 32,
        "name": "pIconSize.height",
        "description": "The size of the icon's height'."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "pAnchor",
        "description": "The anchor point with properties `.x` and `.y`."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0.5",
        "defaultRaw": 0.5,
        "name": "pAnchor.x",
        "description": "The anchor's x value."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0.5",
        "defaultRaw": 0.5,
        "name": "pAnchor.y",
        "description": "The anchor's y value."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "pScale",
        "description": "The scale factor applied to the object with properties `.x` and `.y`."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1",
        "defaultRaw": 1,
        "name": "pScale.x",
        "description": "The scale's y value."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1",
        "defaultRaw": 1,
        "name": "pScale.y",
        "description": "The scale's y value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The calculated icon offset with properties `.x` and `.y`."
    }
  },
  {
    "kind": "index",
    "content": "# Core Module\r\n\r\nThe Core module is a versatile collection of specialized modules designed to enhance the game development experience. Offering seamless integration and a user-friendly interface, this powerhouse module simplifies the utilization of various game development tools. Handy, powerful, and feature-rich, it accelerates productivity by providing a consolidated toolkit for game developers.  \r\n\r\n## Installation\r\n\r\n### ES Module\r\n\r\n```js\r\nimport { Core } from './core.mjs';\r\n```\r\n\r\n### IIFE (Immediately Invoked Function Expression)\r\n\r\n```js\r\n<script src=\"core.js\"></script>;\r\n// ...\r\nwindow.CoreBundle.Core;\r\n```\r\n\r\n### CommonJS (CJS) Module\r\n\r\n```js\r\nconst { Core } = require('./core.cjs.js');\r\n```\r\n\r\n### Global Dependency\r\n\r\nCore relies on the `VYLO` variable being globally accessible.",
    "longname": "C:\\Users\\jared\\Documents\\Github\\Core\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\r\n  \"name\": \"core\",\r\n  \"version\": \"2.0.0\",\r\n  \"description\": \"The Core module is a versatile collection of specialized modules designed to enhance the game development experience.\",\r\n  \"main\": \"src/index.mjs\",\r\n  \"scripts\": {\r\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\r\n    \"build:rollup\": \"npx rollup -c\",\r\n    \"build:docs\": \"esdoc -c esdoc.json\",\r\n    \"build:dist\": \"npm run build:rollup && npm run build:docs\"\r\n  },\r\n  \"keywords\": [],\r\n  \"author\": \"https://github.com/doubleactii\",\r\n  \"license\": \"SEE LICENSE IN LICENSE.md\",\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"https://github.com/EvitcaStudio/Core.git\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@rollup/plugin-babel\": \"^6.0.4\",\r\n    \"@rollup/plugin-terser\": \"^0.4.4\",\r\n    \"esdoc\": \"^1.1.0\",\r\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\r\n    \"esdoc-standard-plugin\": \"^1.0.0\",\r\n    \"rollup\": \"^4.14.1\",\r\n    \"rollup-plugin-banner2\": \"^1.2.3\",\r\n    \"rollup-plugin-cleandir\": \"^2.0.0\",\r\n    \"rollup-plugin-replace\": \"^2.2.0\"\r\n  }\r\n}\r\n",
    "longname": "C:\\Users\\jared\\Documents\\Github\\Core\\package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]